{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\r\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\r\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\r\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\r\n * subscription. Otherwise this method will resubscribe to the source Observable.\r\n *\r\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\r\n *\r\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\r\n * user can `complete` or `error`, aborting the retry.\r\n * @return {Observable} The source Observable modified with retry logic.\r\n * @method retryWhen\r\n * @owner Observable\r\n */\nfunction retryWhen(notifier) {\n  return function (source) {\n    return source.lift(new RetryWhenOperator(notifier, source));\n  };\n}\nexports.retryWhen = retryWhen;\nvar RetryWhenOperator = function () {\n  function RetryWhenOperator(notifier, source) {\n    this.notifier = notifier;\n    this.source = source;\n  }\n  RetryWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  };\n  return RetryWhenOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar RetryWhenSubscriber = function (_super) {\n  __extends(RetryWhenSubscriber, _super);\n  function RetryWhenSubscriber(destination, notifier, source) {\n    _super.call(this, destination);\n    this.notifier = notifier;\n    this.source = source;\n  }\n  RetryWhenSubscriber.prototype.error = function (err) {\n    if (!this.isStopped) {\n      var errors = this.errors;\n      var retries = this.retries;\n      var retriesSubscription = this.retriesSubscription;\n      if (!retries) {\n        errors = new Subject_1.Subject();\n        retries = tryCatch_1.tryCatch(this.notifier)(errors);\n        if (retries === errorObject_1.errorObject) {\n          return _super.prototype.error.call(this, errorObject_1.errorObject.e);\n        }\n        retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n      this._unsubscribeAndRecycle();\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n      errors.next(err);\n    }\n  };\n  /** @deprecated internal use only */\n  RetryWhenSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n      errors = _a.errors,\n      retriesSubscription = _a.retriesSubscription;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n    this.retries = null;\n  };\n  RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    var _a = this,\n      errors = _a.errors,\n      retries = _a.retries,\n      retriesSubscription = _a.retriesSubscription;\n    this.errors = null;\n    this.retries = null;\n    this.retriesSubscription = null;\n    this._unsubscribeAndRecycle();\n    this.errors = errors;\n    this.retries = retries;\n    this.retriesSubscription = retriesSubscription;\n    this.source.subscribe(this);\n  };\n  return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subject_1","require","tryCatch_1","errorObject_1","OuterSubscriber_1","subscribeToResult_1","retryWhen","notifier","source","lift","RetryWhenOperator","exports","call","subscriber","subscribe","RetryWhenSubscriber","_super","destination","error","err","isStopped","errors","retries","retriesSubscription","Subject","tryCatch","errorObject","e","subscribeToResult","_unsubscribeAndRecycle","next","_unsubscribe","_a","unsubscribe","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","OuterSubscriber"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/retryWhen.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../Subject');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\r\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\r\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\r\n * subscription. Otherwise this method will resubscribe to the source Observable.\r\n *\r\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\r\n *\r\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\r\n * user can `complete` or `error`, aborting the retry.\r\n * @return {Observable} The source Observable modified with retry logic.\r\n * @method retryWhen\r\n * @owner Observable\r\n */\r\nfunction retryWhen(notifier) {\r\n    return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };\r\n}\r\nexports.retryWhen = retryWhen;\r\nvar RetryWhenOperator = (function () {\r\n    function RetryWhenOperator(notifier, source) {\r\n        this.notifier = notifier;\r\n        this.source = source;\r\n    }\r\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\r\n    };\r\n    return RetryWhenOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar RetryWhenSubscriber = (function (_super) {\r\n    __extends(RetryWhenSubscriber, _super);\r\n    function RetryWhenSubscriber(destination, notifier, source) {\r\n        _super.call(this, destination);\r\n        this.notifier = notifier;\r\n        this.source = source;\r\n    }\r\n    RetryWhenSubscriber.prototype.error = function (err) {\r\n        if (!this.isStopped) {\r\n            var errors = this.errors;\r\n            var retries = this.retries;\r\n            var retriesSubscription = this.retriesSubscription;\r\n            if (!retries) {\r\n                errors = new Subject_1.Subject();\r\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\r\n                if (retries === errorObject_1.errorObject) {\r\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\r\n                }\r\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\r\n            }\r\n            else {\r\n                this.errors = null;\r\n                this.retriesSubscription = null;\r\n            }\r\n            this._unsubscribeAndRecycle();\r\n            this.errors = errors;\r\n            this.retries = retries;\r\n            this.retriesSubscription = retriesSubscription;\r\n            errors.next(err);\r\n        }\r\n    };\r\n    /** @deprecated internal use only */ RetryWhenSubscriber.prototype._unsubscribe = function () {\r\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\r\n        if (errors) {\r\n            errors.unsubscribe();\r\n            this.errors = null;\r\n        }\r\n        if (retriesSubscription) {\r\n            retriesSubscription.unsubscribe();\r\n            this.retriesSubscription = null;\r\n        }\r\n        this.retries = null;\r\n    };\r\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\r\n        this.errors = null;\r\n        this.retries = null;\r\n        this.retriesSubscription = null;\r\n        this._unsubscribeAndRecycle();\r\n        this.errors = errors;\r\n        this.retries = retries;\r\n        this.retriesSubscription = retriesSubscription;\r\n        this.source.subscribe(this);\r\n    };\r\n    return RetryWhenSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}