{"ast":null,"code":"\"use strict\";\n\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray_1.isArray(val) && val - parseFloat(val) + 1 >= 0;\n}\nexports.isNumeric = isNumeric;\n;","map":{"version":3,"names":["isArray_1","require","isNumeric","val","isArray","parseFloat","exports"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/util/isNumeric.js"],"sourcesContent":["\"use strict\";\r\nvar isArray_1 = require('../util/isArray');\r\nfunction isNumeric(val) {\r\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n    // subtraction forces infinities to NaN\r\n    // adding 1 corrects loss of precision from parseFloat (#15100)\r\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\r\n}\r\nexports.isNumeric = isNumeric;\r\n;\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC1C,SAASC,SAAS,CAACC,GAAG,EAAE;EACpB;EACA;EACA;EACA;EACA,OAAO,CAACH,SAAS,CAACI,OAAO,CAACD,GAAG,CAAC,IAAKA,GAAG,GAAGE,UAAU,CAACF,GAAG,CAAC,GAAG,CAAC,IAAK,CAAC;AACtE;AACAG,OAAO,CAACJ,SAAS,GAAGA,SAAS;AAC7B"},"metadata":{},"sourceType":"script","externalDependencies":[]}