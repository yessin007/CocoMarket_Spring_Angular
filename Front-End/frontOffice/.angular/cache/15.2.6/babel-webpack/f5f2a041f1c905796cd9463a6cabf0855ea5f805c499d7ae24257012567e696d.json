{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nconst state = {\n  products: JSON.parse(localStorage['products'] || '[]'),\n  wishlist: JSON.parse(localStorage['wishlistItems'] || '[]'),\n  compare: JSON.parse(localStorage['compareItems'] || '[]'),\n  cart: JSON.parse(localStorage['cartItems'] || '[]')\n};\nexport class ProductService {\n  constructor(http, toastrService) {\n    this.http = http;\n    this.toastrService = toastrService;\n    this.Currency = {\n      name: 'Dollar',\n      currency: 'USD',\n      price: 1\n    }; // Default Currency\n    this.OpenCart = false;\n  }\n  /*\r\n    ---------------------------------------------\r\n    ---------------  Product  -------------------\r\n    ---------------------------------------------\r\n  */\n  // Product\n  get products() {\n    this.Products = this.http.get('assets/data/products.json').pipe(map(data => data));\n    this.Products.subscribe(next => {\n      localStorage['products'] = JSON.stringify(next);\n    });\n    return this.Products = this.Products.pipe(startWith(JSON.parse(localStorage['products'] || '[]')));\n  }\n  // Get Products\n  get getProducts() {\n    return this.products;\n  }\n  // Get Products By Slug\n  getProductBySlug(slug) {\n    return this.products.pipe(map(items => {\n      return items.find(item => {\n        return item.title.replace(' ', '-') === slug;\n      });\n    }));\n  }\n  /*\r\n    ---------------------------------------------\r\n    ---------------  Wish List  -----------------\r\n    ---------------------------------------------\r\n  */\n  // Get Wishlist Items\n  get wishlistItems() {\n    const itemsStream = new Observable(observer => {\n      observer.next(state.wishlist);\n      observer.complete();\n    });\n    return itemsStream;\n  }\n  // Add to Wishlist\n  addToWishlist(product) {\n    const wishlistItem = state.wishlist.find(item => item.id === product.id);\n    if (!wishlistItem) {\n      state.wishlist.push({\n        ...product\n      });\n    }\n    this.toastrService.success('Product has been added in wishlist.');\n    localStorage.setItem(\"wishlistItems\", JSON.stringify(state.wishlist));\n    return true;\n  }\n  // Remove Wishlist items\n  removeWishlistItem(product) {\n    const index = state.wishlist.indexOf(product);\n    state.wishlist.splice(index, 1);\n    localStorage.setItem(\"wishlistItems\", JSON.stringify(state.wishlist));\n    return true;\n  }\n  /*\r\n    ---------------------------------------------\r\n    -------------  Compare Product  -------------\r\n    ---------------------------------------------\r\n  */\n  // Get Compare Items\n  get compareItems() {\n    const itemsStream = new Observable(observer => {\n      observer.next(state.compare);\n      observer.complete();\n    });\n    return itemsStream;\n  }\n  // Add to Compare\n  addToCompare(product) {\n    const compareItem = state.compare.find(item => item.id === product.id);\n    if (!compareItem) {\n      state.compare.push({\n        ...product\n      });\n    }\n    this.toastrService.success('Product has been added in compare.');\n    localStorage.setItem(\"compareItems\", JSON.stringify(state.compare));\n    return true;\n  }\n  // Remove Compare items\n  removeCompareItem(product) {\n    const index = state.compare.indexOf(product);\n    state.compare.splice(index, 1);\n    localStorage.setItem(\"compareItems\", JSON.stringify(state.compare));\n    return true;\n  }\n  /*\r\n    ---------------------------------------------\r\n    -----------------  Cart  --------------------\r\n    ---------------------------------------------\r\n  */\n  // Get Cart Items\n  get cartItems() {\n    const itemsStream = new Observable(observer => {\n      observer.next(state.cart);\n      observer.complete();\n    });\n    return itemsStream;\n  }\n  // Add to Cart\n  addToCart(product) {\n    const cartItem = state.cart.find(item => item.id === product.id);\n    const qty = product.quantity ? product.quantity : 1;\n    const items = cartItem ? cartItem : product;\n    const stock = this.calculateStockCounts(items, qty);\n    if (!stock) return false;\n    if (cartItem) {\n      cartItem.quantity += qty;\n    } else {\n      state.cart.push({\n        ...product,\n        quantity: qty\n      });\n    }\n    this.OpenCart = true; // If we use cart variation modal\n    localStorage.setItem(\"cartItems\", JSON.stringify(state.cart));\n    return true;\n  }\n  // Update Cart Quantity\n  updateCartQuantity(product, quantity) {\n    return state.cart.find((items, index) => {\n      if (items.id === product.id) {\n        const qty = state.cart[index].quantity + quantity;\n        const stock = this.calculateStockCounts(state.cart[index], quantity);\n        if (qty !== 0 && stock) {\n          state.cart[index].quantity = qty;\n        }\n        localStorage.setItem(\"cartItems\", JSON.stringify(state.cart));\n        return true;\n      }\n    });\n  }\n  // Calculate Stock Counts\n  calculateStockCounts(product, quantity) {\n    const qty = product.quantity + quantity;\n    const stock = product.stock;\n    if (stock < qty || stock == 0) {\n      this.toastrService.error('You can not add more items than available. In stock ' + stock + ' items.');\n      return false;\n    }\n    return true;\n  }\n  // Remove Cart items\n  removeCartItem(product) {\n    const index = state.cart.indexOf(product);\n    state.cart.splice(index, 1);\n    localStorage.setItem(\"cartItems\", JSON.stringify(state.cart));\n    return true;\n  }\n  // Total amount \n  cartTotalAmount() {\n    return this.cartItems.pipe(map(product => {\n      return product.reduce((prev, curr) => {\n        let price = curr.price;\n        if (curr.discount) {\n          price = curr.price - curr.price * curr.discount / 100;\n        }\n        return (prev + price * curr.quantity) * this.Currency.price;\n      }, 0);\n    }));\n  }\n  /*\r\n    ---------------------------------------------\r\n    ------------  Filter Product  ---------------\r\n    ---------------------------------------------\r\n  */\n  // Get Product Filter\n  filterProducts(filter) {\n    return this.products.pipe(map(product => product.filter(item => {\n      if (!filter.length) return true;\n      const Tags = filter.some(prev => {\n        if (item.tags) {\n          if (item.tags.includes(prev)) {\n            return prev;\n          }\n        }\n      });\n      return Tags;\n    })));\n  }\n  // Sorting Filter\n  sortProducts(products, payload) {\n    if (payload === 'ascending') {\n      return products.sort((a, b) => {\n        if (a.id < b.id) {\n          return -1;\n        } else if (a.id > b.id) {\n          return 1;\n        }\n        return 0;\n      });\n    } else if (payload === 'a-z') {\n      return products.sort((a, b) => {\n        if (a.title < b.title) {\n          return -1;\n        } else if (a.title > b.title) {\n          return 1;\n        }\n        return 0;\n      });\n    } else if (payload === 'z-a') {\n      return products.sort((a, b) => {\n        if (a.title > b.title) {\n          return -1;\n        } else if (a.title < b.title) {\n          return 1;\n        }\n        return 0;\n      });\n    } else if (payload === 'low') {\n      return products.sort((a, b) => {\n        if (a.price < b.price) {\n          return -1;\n        } else if (a.price > b.price) {\n          return 1;\n        }\n        return 0;\n      });\n    } else if (payload === 'high') {\n      return products.sort((a, b) => {\n        if (a.price > b.price) {\n          return -1;\n        } else if (a.price < b.price) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n  }\n  /*\r\n    ---------------------------------------------\r\n    ------------- Product Pagination  -----------\r\n    ---------------------------------------------\r\n  */\n  getPager(totalItems, currentPage = 1, pageSize = 16) {\n    // calculate total pages\n    let totalPages = Math.ceil(totalItems / pageSize);\n    // Paginate Range\n    let paginateRange = 3;\n    // ensure current page isn't out of range\n    if (currentPage < 1) {\n      currentPage = 1;\n    } else if (currentPage > totalPages) {\n      currentPage = totalPages;\n    }\n    let startPage, endPage;\n    if (totalPages <= 5) {\n      startPage = 1;\n      endPage = totalPages;\n    } else if (currentPage < paginateRange - 1) {\n      startPage = 1;\n      endPage = startPage + paginateRange - 1;\n    } else {\n      startPage = currentPage - 1;\n      endPage = currentPage + 1;\n    }\n    // calculate start and end item indexes\n    let startIndex = (currentPage - 1) * pageSize;\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n    // create an array of pages to ng-repeat in the pager control\n    let pages = Array.from(Array(endPage + 1 - startPage).keys()).map(i => startPage + i);\n    // return object with all pager properties required by the view\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["Observable","map","startWith","state","products","JSON","parse","localStorage","wishlist","compare","cart","ProductService","constructor","http","toastrService","name","currency","price","Products","get","pipe","data","subscribe","next","stringify","getProducts","getProductBySlug","slug","items","find","item","title","replace","wishlistItems","itemsStream","observer","complete","addToWishlist","product","wishlistItem","id","push","success","setItem","removeWishlistItem","index","indexOf","splice","compareItems","addToCompare","compareItem","removeCompareItem","cartItems","addToCart","cartItem","qty","quantity","stock","calculateStockCounts","OpenCart","updateCartQuantity","error","removeCartItem","cartTotalAmount","reduce","prev","curr","discount","Currency","filterProducts","filter","length","Tags","some","tags","includes","sortProducts","payload","sort","a","b","getPager","totalItems","currentPage","pageSize","totalPages","Math","ceil","paginateRange","startPage","endPage","startIndex","endIndex","min","pages","Array","from","keys","i","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\shared\\services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith, delay } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Product } from '../classes/product';\r\n\r\nconst state = {\r\n  products: JSON.parse(localStorage['products'] || '[]'),\r\n  wishlist: JSON.parse(localStorage['wishlistItems'] || '[]'),\r\n  compare: JSON.parse(localStorage['compareItems'] || '[]'),\r\n  cart: JSON.parse(localStorage['cartItems'] || '[]')\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  public Currency = { name: 'Dollar', currency: 'USD', price: 1 } // Default Currency\r\n  public OpenCart: boolean = false;\r\n  public Products\r\n\r\n  constructor(private http: HttpClient,\r\n    private toastrService: ToastrService) { }\r\n\r\n  /*\r\n    ---------------------------------------------\r\n    ---------------  Product  -------------------\r\n    ---------------------------------------------\r\n  */\r\n\r\n  // Product\r\n  private get products(): Observable<Product[]> {\r\n    this.Products = this.http.get<Product[]>('assets/data/products.json').pipe(map(data => data));\r\n    this.Products.subscribe(next => { localStorage['products'] = JSON.stringify(next) });\r\n    return this.Products = this.Products.pipe(startWith(JSON.parse(localStorage['products'] || '[]')));\r\n  }\r\n\r\n  // Get Products\r\n  public get getProducts(): Observable<Product[]> {\r\n    return this.products;\r\n  }\r\n\r\n  // Get Products By Slug\r\n  public getProductBySlug(slug: string): Observable<Product> {\r\n    return this.products.pipe(map(items => { \r\n      return items.find((item: any) => { \r\n        return item.title.replace(' ', '-') === slug; \r\n      }); \r\n    }));\r\n  }\r\n\r\n\r\n  /*\r\n    ---------------------------------------------\r\n    ---------------  Wish List  -----------------\r\n    ---------------------------------------------\r\n  */\r\n\r\n  // Get Wishlist Items\r\n  public get wishlistItems(): Observable<Product[]> {\r\n    const itemsStream = new Observable(observer => {\r\n      observer.next(state.wishlist);\r\n      observer.complete();\r\n    });\r\n    return <Observable<Product[]>>itemsStream;\r\n  }\r\n\r\n  // Add to Wishlist\r\n  public addToWishlist(product): any {\r\n    const wishlistItem = state.wishlist.find(item => item.id === product.id)\r\n    if (!wishlistItem) {\r\n      state.wishlist.push({\r\n        ...product\r\n      })\r\n    }\r\n    this.toastrService.success('Product has been added in wishlist.');\r\n    localStorage.setItem(\"wishlistItems\", JSON.stringify(state.wishlist));\r\n    return true\r\n  }\r\n\r\n  // Remove Wishlist items\r\n  public removeWishlistItem(product: Product): any {\r\n    const index = state.wishlist.indexOf(product);\r\n    state.wishlist.splice(index, 1);\r\n    localStorage.setItem(\"wishlistItems\", JSON.stringify(state.wishlist));\r\n    return true\r\n  }\r\n\r\n  /*\r\n    ---------------------------------------------\r\n    -------------  Compare Product  -------------\r\n    ---------------------------------------------\r\n  */\r\n\r\n  // Get Compare Items\r\n  public get compareItems(): Observable<Product[]> {\r\n    const itemsStream = new Observable(observer => {\r\n      observer.next(state.compare);\r\n      observer.complete();\r\n    });\r\n    return <Observable<Product[]>>itemsStream;\r\n  }\r\n\r\n  // Add to Compare\r\n  public addToCompare(product): any {\r\n    const compareItem = state.compare.find(item => item.id === product.id)\r\n    if (!compareItem) {\r\n      state.compare.push({\r\n        ...product\r\n      })\r\n    }\r\n    this.toastrService.success('Product has been added in compare.');\r\n    localStorage.setItem(\"compareItems\", JSON.stringify(state.compare));\r\n    return true\r\n  }\r\n\r\n  // Remove Compare items\r\n  public removeCompareItem(product: Product): any {\r\n    const index = state.compare.indexOf(product);\r\n    state.compare.splice(index, 1);\r\n    localStorage.setItem(\"compareItems\", JSON.stringify(state.compare));\r\n    return true\r\n  }\r\n\r\n  /*\r\n    ---------------------------------------------\r\n    -----------------  Cart  --------------------\r\n    ---------------------------------------------\r\n  */\r\n\r\n  // Get Cart Items\r\n  public get cartItems(): Observable<Product[]> {\r\n    const itemsStream = new Observable(observer => {\r\n      observer.next(state.cart);\r\n      observer.complete();\r\n    });\r\n    return <Observable<Product[]>>itemsStream;\r\n  }\r\n\r\n  // Add to Cart\r\n  public addToCart(product): any {\r\n    const cartItem = state.cart.find(item => item.id === product.id);\r\n    const qty = product.quantity ? product.quantity : 1;\r\n    const items = cartItem ? cartItem : product;\r\n    const stock = this.calculateStockCounts(items, qty);\r\n    \r\n    if(!stock) return false\r\n\r\n    if (cartItem) {\r\n        cartItem.quantity += qty    \r\n    } else {\r\n      state.cart.push({\r\n        ...product,\r\n        quantity: qty\r\n      })\r\n    }\r\n\r\n    this.OpenCart = true; // If we use cart variation modal\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(state.cart));\r\n    return true;\r\n  }\r\n\r\n  // Update Cart Quantity\r\n  public updateCartQuantity(product: Product, quantity: number): Product | boolean {\r\n    return state.cart.find((items, index) => {\r\n      if (items.id === product.id) {\r\n        const qty = state.cart[index].quantity + quantity\r\n        const stock = this.calculateStockCounts(state.cart[index], quantity)\r\n        if (qty !== 0 && stock) {\r\n          state.cart[index].quantity = qty\r\n        }\r\n        localStorage.setItem(\"cartItems\", JSON.stringify(state.cart));\r\n        return true\r\n      }\r\n    })\r\n  }\r\n\r\n    // Calculate Stock Counts\r\n  public calculateStockCounts(product, quantity) {\r\n    const qty = product.quantity + quantity\r\n    const stock = product.stock\r\n    if (stock < qty || stock == 0) {\r\n      this.toastrService.error('You can not add more items than available. In stock '+ stock +' items.');\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  // Remove Cart items\r\n  public removeCartItem(product: Product): any {\r\n    const index = state.cart.indexOf(product);\r\n    state.cart.splice(index, 1);\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(state.cart));\r\n    return true\r\n  }\r\n\r\n  // Total amount \r\n  public cartTotalAmount(): Observable<number> {\r\n    return this.cartItems.pipe(map((product: Product[]) => {\r\n      return product.reduce((prev, curr: Product) => {\r\n        let price = curr.price;\r\n        if(curr.discount) {\r\n          price = curr.price - (curr.price * curr.discount / 100)\r\n        }\r\n        return (prev + price * curr.quantity) * this.Currency.price;\r\n      }, 0);\r\n    }));\r\n  }\r\n\r\n  /*\r\n    ---------------------------------------------\r\n    ------------  Filter Product  ---------------\r\n    ---------------------------------------------\r\n  */\r\n\r\n  // Get Product Filter\r\n  public filterProducts(filter: any): Observable<Product[]> {\r\n    return this.products.pipe(map(product => \r\n      product.filter((item: Product) => {\r\n        if (!filter.length) return true\r\n        const Tags = filter.some((prev) => { // Match Tags\r\n          if (item.tags) {\r\n            if (item.tags.includes(prev)) {\r\n              return prev\r\n            }\r\n          }\r\n        })\r\n        return Tags\r\n      })\r\n    ));\r\n  }\r\n\r\n  // Sorting Filter\r\n  public sortProducts(products: Product[], payload: string): any {\r\n\r\n    if(payload === 'ascending') {\r\n      return products.sort((a, b) => {\r\n        if (a.id < b.id) {\r\n          return -1;\r\n        } else if (a.id > b.id) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n    } else if (payload === 'a-z') {\r\n      return products.sort((a, b) => {\r\n        if (a.title < b.title) {\r\n          return -1;\r\n        } else if (a.title > b.title) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n    } else if (payload === 'z-a') {\r\n      return products.sort((a, b) => {\r\n        if (a.title > b.title) {\r\n          return -1;\r\n        } else if (a.title < b.title) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n    } else if (payload === 'low') {\r\n      return products.sort((a, b) => {\r\n        if (a.price < b.price) {\r\n          return -1;\r\n        } else if (a.price > b.price) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n    } else if (payload === 'high') {\r\n      return products.sort((a, b) => {\r\n        if (a.price > b.price) {\r\n          return -1;\r\n        } else if (a.price < b.price) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n    } \r\n  }\r\n\r\n  /*\r\n    ---------------------------------------------\r\n    ------------- Product Pagination  -----------\r\n    ---------------------------------------------\r\n  */\r\n  public getPager(totalItems: number, currentPage: number = 1, pageSize: number = 16) {\r\n    // calculate total pages\r\n    let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n    // Paginate Range\r\n    let paginateRange = 3;\r\n\r\n    // ensure current page isn't out of range\r\n    if (currentPage < 1) { \r\n      currentPage = 1; \r\n    } else if (currentPage > totalPages) { \r\n      currentPage = totalPages; \r\n    }\r\n    \r\n    let startPage: number, endPage: number;\r\n    if (totalPages <= 5) {\r\n      startPage = 1;\r\n      endPage = totalPages;\r\n    } else if(currentPage < paginateRange - 1){\r\n      startPage = 1;\r\n      endPage = startPage + paginateRange - 1;\r\n    } else {\r\n      startPage = currentPage - 1;\r\n      endPage =  currentPage + 1;\r\n    }\r\n\r\n    // calculate start and end item indexes\r\n    let startIndex = (currentPage - 1) * pageSize;\r\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n    // create an array of pages to ng-repeat in the pager control\r\n    let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n    // return object with all pager properties required by the view\r\n    return {\r\n      totalItems: totalItems,\r\n      currentPage: currentPage,\r\n      pageSize: pageSize,\r\n      totalPages: totalPages,\r\n      startPage: startPage,\r\n      endPage: endPage,\r\n      startIndex: startIndex,\r\n      endIndex: endIndex,\r\n      pages: pages\r\n    };\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}