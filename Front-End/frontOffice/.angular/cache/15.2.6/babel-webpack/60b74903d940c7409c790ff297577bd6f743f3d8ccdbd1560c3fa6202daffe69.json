{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../shared/components/breadcrumb/breadcrumb.component\";\nexport class ContactComponent {\n  constructor() {}\n  ngOnInit() {}\n}\nContactComponent.ɵfac = function ContactComponent_Factory(t) {\n  return new (t || ContactComponent)();\n};\nContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactComponent,\n  selectors: [[\"app-contact\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[3, \"title\", \"breadcrumb\"], [\"id\", \"map\"]],\n  template: function ContactComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-breadcrumb\", 0);\n      i0.ɵɵelementStart(1, \"html\");\n      i0.ɵɵelement(2, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"title\", \"Contact\")(\"breadcrumb\", \"Contact\");\n    }\n  },\n  dependencies: [i1.BreadcrumbComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,eAAe;EAEfC,QAAQ,IAAU;;AAJPF,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP7BC,oCAA8E;MAC9EA,4BAAM;MAoENA,yBAAoB;MAKpBA,iBAAO;;;MA1ESA,iCAAmB","names":["ContactComponent","constructor","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\pages\\account\\contact\\contact.component.ts","C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\pages\\account\\contact\\contact.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<app-breadcrumb [title]=\"'Contact'\" [breadcrumb]=\"'Contact'\"></app-breadcrumb>\r\n<html>\r\n\r\n\r\n<script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\r\n<script>\r\n   /**\r\n    * @license\r\n    * Copyright 2019 Google LLC. All Rights Reserved.\r\n    * SPDX-License-Identifier: Apache-2.0\r\n    */\r\n// Note: This example requires that you consent to location sharing when\r\n// prompted by your browser. If you see the error \"The Geolocation service\r\n// failed.\", it means you probably did not give permission for the browser to\r\n// locate you.\r\n   let map, infoWindow;\r\n\r\n   function initMap() {\r\n      map = new google.maps.Map(document.getElementById(\"map\"), {\r\n         center: { lat: -34.397, lng: 150.644 },\r\n         zoom: 6,\r\n      });\r\n      infoWindow = new google.maps.InfoWindow();\r\n\r\n      const locationButton = document.createElement(\"button\");\r\n\r\n      locationButton.textContent = \"Pan to Current Location\";\r\n      locationButton.classList.add(\"custom-map-control-button\");\r\n      map.controls[google.maps.ControlPosition.TOP_CENTER].push(\r\n              locationButton\r\n      );\r\n      locationButton.addEventListener(\"click\", () => {\r\n         // Try HTML5 geolocation.\r\n         if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(\r\n                    (position) => {\r\n                       const pos = {\r\n                          lat: position.coords.latitude,\r\n                          lng: position.coords.longitude,\r\n                       };\r\n\r\n                       infoWindow.setPosition(pos);\r\n                       infoWindow.setContent(\"Location found.\");\r\n                       infoWindow.open(map);\r\n                       map.setCenter(pos);\r\n                    },\r\n                    () => {\r\n                       handleLocationError(true, infoWindow, map.getCenter());\r\n                    }\r\n            );\r\n         } else {\r\n            // Browser doesn't support Geolocation\r\n            handleLocationError(false, infoWindow, map.getCenter());\r\n         }\r\n      });\r\n   }\r\n\r\n   function handleLocationError(browserHasGeolocation, infoWindow, pos) {\r\n      infoWindow.setPosition(pos);\r\n      infoWindow.setContent(\r\n              browserHasGeolocation\r\n                      ? \"Error: The Geolocation service failed.\"\r\n                      : \"Error: Your browser doesn't support geolocation.\"\r\n      );\r\n      infoWindow.open(map);\r\n   }\r\n\r\n   window.initMap = initMap;\r\n</script>\r\n<div id=\"map\"></div>\r\n<script\r\n        src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDv6NZftLo91TkC4GYHFyJfGW3Y_5q_j1s&callback=initMap&v=weekly\"\r\n        defer\r\n></script>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}