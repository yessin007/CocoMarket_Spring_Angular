{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\r\n * Emits values emitted by the source Observable so long as each value satisfies\r\n * the given `predicate`, and then completes as soon as this `predicate` is not\r\n * satisfied.\r\n *\r\n * <span class=\"informal\">Takes values from the source only while they pass the\r\n * condition given. When the first value does not satisfy, it completes.</span>\r\n *\r\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\r\n *\r\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\r\n * emitted on the source is given to the `predicate` function which returns a\r\n * boolean, representing a condition to be satisfied by the source values. The\r\n * output Observable emits the source values until such time as the `predicate`\r\n * returns false, at which point `takeWhile` stops mirroring the source\r\n * Observable and completes the output Observable.\r\n *\r\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n * @see {@link takeUntil}\r\n * @see {@link skip}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates a value emitted by the source Observable and returns a boolean.\r\n * Also takes the (zero-based) index as the second argument.\r\n * @return {Observable<T>} An Observable that emits the values from the source\r\n * Observable so long as each value satisfies the condition defined by the\r\n * `predicate`, then completes.\r\n * @method takeWhile\r\n * @owner Observable\r\n */\nfunction takeWhile(predicate) {\n  return function (source) {\n    return source.lift(new TakeWhileOperator(predicate));\n  };\n}\nexports.takeWhile = takeWhile;\nvar TakeWhileOperator = function () {\n  function TakeWhileOperator(predicate) {\n    this.predicate = predicate;\n  }\n  TakeWhileOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n  };\n  return TakeWhileOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar TakeWhileSubscriber = function (_super) {\n  __extends(TakeWhileSubscriber, _super);\n  function TakeWhileSubscriber(destination, predicate) {\n    _super.call(this, destination);\n    this.predicate = predicate;\n    this.index = 0;\n  }\n  TakeWhileSubscriber.prototype._next = function (value) {\n    var destination = this.destination;\n    var result;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  };\n  TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n    var destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      destination.complete();\n    }\n  };\n  return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","takeWhile","predicate","source","lift","TakeWhileOperator","exports","call","subscriber","subscribe","TakeWhileSubscriber","_super","destination","index","_next","value","result","err","error","nextOrComplete","predicateResult","Boolean","next","complete","Subscriber"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/takeWhile.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Emits values emitted by the source Observable so long as each value satisfies\r\n * the given `predicate`, and then completes as soon as this `predicate` is not\r\n * satisfied.\r\n *\r\n * <span class=\"informal\">Takes values from the source only while they pass the\r\n * condition given. When the first value does not satisfy, it completes.</span>\r\n *\r\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\r\n *\r\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\r\n * emitted on the source is given to the `predicate` function which returns a\r\n * boolean, representing a condition to be satisfied by the source values. The\r\n * output Observable emits the source values until such time as the `predicate`\r\n * returns false, at which point `takeWhile` stops mirroring the source\r\n * Observable and completes the output Observable.\r\n *\r\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n * @see {@link takeUntil}\r\n * @see {@link skip}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates a value emitted by the source Observable and returns a boolean.\r\n * Also takes the (zero-based) index as the second argument.\r\n * @return {Observable<T>} An Observable that emits the values from the source\r\n * Observable so long as each value satisfies the condition defined by the\r\n * `predicate`, then completes.\r\n * @method takeWhile\r\n * @owner Observable\r\n */\r\nfunction takeWhile(predicate) {\r\n    return function (source) { return source.lift(new TakeWhileOperator(predicate)); };\r\n}\r\nexports.takeWhile = takeWhile;\r\nvar TakeWhileOperator = (function () {\r\n    function TakeWhileOperator(predicate) {\r\n        this.predicate = predicate;\r\n    }\r\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\r\n    };\r\n    return TakeWhileOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar TakeWhileSubscriber = (function (_super) {\r\n    __extends(TakeWhileSubscriber, _super);\r\n    function TakeWhileSubscriber(destination, predicate) {\r\n        _super.call(this, destination);\r\n        this.predicate = predicate;\r\n        this.index = 0;\r\n    }\r\n    TakeWhileSubscriber.prototype._next = function (value) {\r\n        var destination = this.destination;\r\n        var result;\r\n        try {\r\n            result = this.predicate(value, this.index++);\r\n        }\r\n        catch (err) {\r\n            destination.error(err);\r\n            return;\r\n        }\r\n        this.nextOrComplete(value, result);\r\n    };\r\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\r\n        var destination = this.destination;\r\n        if (Boolean(predicateResult)) {\r\n            destination.next(value);\r\n        }\r\n        else {\r\n            destination.complete();\r\n        }\r\n    };\r\n    return TakeWhileSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}