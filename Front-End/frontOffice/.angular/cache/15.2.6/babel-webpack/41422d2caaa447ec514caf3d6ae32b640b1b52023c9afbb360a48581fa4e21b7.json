{"ast":null,"code":"import { Deliveries } from \"./Deliveries\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GetCurrentLocation {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.ASSIGN_LOCATION = 'http://localhost:8083/kaddem/provider/setLatLng/' + this.lat + \"/\" + this.lng;\n    this.GET_CURRENT_LOCATION = 'http://localhost:8083/kaddem/api/maps';\n    this.delivery = new Deliveries();\n  }\n  getCurrentLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n        console.log(`Latitude: ${this.lat}, Longitude: ${this.lng}`);\n      });\n    } else {\n      console.log('Geolocation is not supported by this browser.');\n    }\n    this.delivery.clientLatitude = this.lat;\n    this.delivery.clientLongitude = this.lng;\n  }\n  setLatLngToProvider(id) {\n    return this.httpClient.get(this.ASSIGN_LOCATION + id);\n  }\n}\nGetCurrentLocation.ɵfac = function GetCurrentLocation_Factory(t) {\n  return new (t || GetCurrentLocation)(i0.ɵɵinject(i1.HttpClient));\n};\nGetCurrentLocation.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GetCurrentLocation,\n  factory: GetCurrentLocation.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAQA,UAAU,QAAO,cAAc;;;AAIvC,OAAM,MAAOC,kBAAkB;EAI3BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHrB,oBAAe,GAAG,kDAAkD,GAAG,IAAI,CAACC,GAAG,GAAG,GAAG,GAAG,IAAI,CAACC,GAAG;IAEhG,yBAAoB,GAAG,uCAAuC;IAKvE,aAAQ,GAAa,IAAIL,UAAU,EAAE;EAHrC;EAIAM,kBAAkB;IACd,IAAIC,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAI;QACnD,IAAI,CAACN,GAAG,GAAGM,QAAQ,CAACC,MAAM,CAACC,QAAQ;QACnC,IAAI,CAACP,GAAG,GAAGK,QAAQ,CAACC,MAAM,CAACE,SAAS;QACpCC,OAAO,CAACC,GAAG,CAAC,aAAa,IAAI,CAACX,GAAG,gBAAgB,IAAI,CAACC,GAAG,EAAE,CAAC;MAC/D,CAAC,CAAC;KAGL,MAAM;MACHS,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;;IAEhE,IAAI,CAACC,QAAQ,CAACC,cAAc,GAAG,IAAI,CAACb,GAAG;IACvC,IAAI,CAACY,QAAQ,CAACE,eAAe,GAAG,IAAI,CAACb,GAAG;EAC5C;EACAc,mBAAmB,CAACC,EAAE;IAClB,OAAO,IAAI,CAACjB,UAAU,CAACkB,GAAG,CAAW,IAAI,CAACC,eAAe,GAAGF,EAAE,CAAC;EACnE;;AA1BSnB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAsB,SAAlBtB,kBAAkB;EAAAuB,YAFf;AAAM","names":["Deliveries","GetCurrentLocation","constructor","httpClient","lat","lng","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","delivery","clientLatitude","clientLongitude","setLatLngToProvider","id","get","ASSIGN_LOCATION","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\shared\\services\\GetCurrentLocation.ts"],"sourcesContent":["import {Injectable, Provider} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Deliveries} from \"./Deliveries\";\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GetCurrentLocation {\r\n    readonly ASSIGN_LOCATION = 'http://localhost:8083/kaddem/provider/setLatLng/' + this.lat + \"/\" + this.lng;\r\n\r\n    readonly GET_CURRENT_LOCATION = 'http://localhost:8083/kaddem/api/maps';\r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n    lat: number;\r\n    lng: number;\r\n    delivery: Deliveries=new Deliveries();\r\n    getCurrentLocation() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n               this.lat = position.coords.latitude;\r\n               this.lng = position.coords.longitude;\r\n               console.log(`Latitude: ${this.lat}, Longitude: ${this.lng}`);\r\n            });\r\n\r\n\r\n        } else {\r\n            console.log('Geolocation is not supported by this browser.');\r\n        }\r\n        this.delivery.clientLatitude = this.lat;\r\n        this.delivery.clientLongitude = this.lng;\r\n    }\r\n    setLatLngToProvider(id){\r\n        return this.httpClient.get<Provider>(this.ASSIGN_LOCATION + id);\r\n    }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}