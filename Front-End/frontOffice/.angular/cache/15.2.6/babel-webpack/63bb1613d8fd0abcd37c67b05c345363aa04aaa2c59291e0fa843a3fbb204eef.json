{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\n/**\r\n * Skip the last `count` values emitted by the source Observable.\r\n *\r\n * <img src=\"./img/skipLast.png\" width=\"100%\">\r\n *\r\n * `skipLast` returns an Observable that accumulates a queue with a length\r\n * enough to store the first `count` values. As more values are received,\r\n * values are taken from the front of the queue and produced on the result\r\n * sequence. This causes values to be delayed.\r\n *\r\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\r\n * var many = Rx.Observable.range(1, 5);\r\n * var skipLastTwo = many.skipLast(2);\r\n * skipLastTwo.subscribe(x => console.log(x));\r\n *\r\n * // Results in:\r\n * // 1 2 3\r\n *\r\n * @see {@link skip}\r\n * @see {@link skipUntil}\r\n * @see {@link skipWhile}\r\n * @see {@link take}\r\n *\r\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\r\n * ArgumentOutOrRangeError if `i < 0`.\r\n *\r\n * @param {number} count Number of elements to skip from the end of the source Observable.\r\n * @returns {Observable<T>} An Observable that skips the last count values\r\n * emitted by the source Observable.\r\n * @method skipLast\r\n * @owner Observable\r\n */\nfunction skipLast(count) {\n  return function (source) {\n    return source.lift(new SkipLastOperator(count));\n  };\n}\nexports.skipLast = skipLast;\nvar SkipLastOperator = function () {\n  function SkipLastOperator(_skipCount) {\n    this._skipCount = _skipCount;\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();\n    }\n  }\n  SkipLastOperator.prototype.call = function (subscriber, source) {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber_1.Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  };\n  return SkipLastOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar SkipLastSubscriber = function (_super) {\n  __extends(SkipLastSubscriber, _super);\n  function SkipLastSubscriber(destination, _skipCount) {\n    _super.call(this, destination);\n    this._skipCount = _skipCount;\n    this._count = 0;\n    this._ring = new Array(_skipCount);\n  }\n  SkipLastSubscriber.prototype._next = function (value) {\n    var skipCount = this._skipCount;\n    var count = this._count++;\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      var currentIndex = count % skipCount;\n      var ring = this._ring;\n      var oldValue = ring[currentIndex];\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  };\n  return SkipLastSubscriber;\n}(Subscriber_1.Subscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","ArgumentOutOfRangeError_1","skipLast","count","source","lift","SkipLastOperator","exports","_skipCount","ArgumentOutOfRangeError","call","subscriber","subscribe","Subscriber","SkipLastSubscriber","_super","destination","_count","_ring","Array","_next","value","skipCount","currentIndex","ring","oldValue","next"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/skipLast.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\r\n/**\r\n * Skip the last `count` values emitted by the source Observable.\r\n *\r\n * <img src=\"./img/skipLast.png\" width=\"100%\">\r\n *\r\n * `skipLast` returns an Observable that accumulates a queue with a length\r\n * enough to store the first `count` values. As more values are received,\r\n * values are taken from the front of the queue and produced on the result\r\n * sequence. This causes values to be delayed.\r\n *\r\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\r\n * var many = Rx.Observable.range(1, 5);\r\n * var skipLastTwo = many.skipLast(2);\r\n * skipLastTwo.subscribe(x => console.log(x));\r\n *\r\n * // Results in:\r\n * // 1 2 3\r\n *\r\n * @see {@link skip}\r\n * @see {@link skipUntil}\r\n * @see {@link skipWhile}\r\n * @see {@link take}\r\n *\r\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\r\n * ArgumentOutOrRangeError if `i < 0`.\r\n *\r\n * @param {number} count Number of elements to skip from the end of the source Observable.\r\n * @returns {Observable<T>} An Observable that skips the last count values\r\n * emitted by the source Observable.\r\n * @method skipLast\r\n * @owner Observable\r\n */\r\nfunction skipLast(count) {\r\n    return function (source) { return source.lift(new SkipLastOperator(count)); };\r\n}\r\nexports.skipLast = skipLast;\r\nvar SkipLastOperator = (function () {\r\n    function SkipLastOperator(_skipCount) {\r\n        this._skipCount = _skipCount;\r\n        if (this._skipCount < 0) {\r\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\r\n        }\r\n    }\r\n    SkipLastOperator.prototype.call = function (subscriber, source) {\r\n        if (this._skipCount === 0) {\r\n            // If we don't want to skip any values then just subscribe\r\n            // to Subscriber without any further logic.\r\n            return source.subscribe(new Subscriber_1.Subscriber(subscriber));\r\n        }\r\n        else {\r\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\r\n        }\r\n    };\r\n    return SkipLastOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SkipLastSubscriber = (function (_super) {\r\n    __extends(SkipLastSubscriber, _super);\r\n    function SkipLastSubscriber(destination, _skipCount) {\r\n        _super.call(this, destination);\r\n        this._skipCount = _skipCount;\r\n        this._count = 0;\r\n        this._ring = new Array(_skipCount);\r\n    }\r\n    SkipLastSubscriber.prototype._next = function (value) {\r\n        var skipCount = this._skipCount;\r\n        var count = this._count++;\r\n        if (count < skipCount) {\r\n            this._ring[count] = value;\r\n        }\r\n        else {\r\n            var currentIndex = count % skipCount;\r\n            var ring = this._ring;\r\n            var oldValue = ring[currentIndex];\r\n            ring[currentIndex] = value;\r\n            this.destination.next(oldValue);\r\n        }\r\n    };\r\n    return SkipLastSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}