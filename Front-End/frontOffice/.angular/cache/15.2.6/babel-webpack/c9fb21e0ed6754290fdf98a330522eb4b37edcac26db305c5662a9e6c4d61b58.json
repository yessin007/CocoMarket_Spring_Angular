{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\nvar EmptyObservable = function (_super) {\n  __extends(EmptyObservable, _super);\n  function EmptyObservable(scheduler) {\n    _super.call(this);\n    this.scheduler = scheduler;\n  }\n  /**\r\n   * Creates an Observable that emits no items to the Observer and immediately\r\n   * emits a complete notification.\r\n   *\r\n   * <span class=\"informal\">Just emits 'complete', and nothing else.\r\n   * </span>\r\n   *\r\n   * <img src=\"./img/empty.png\" width=\"100%\">\r\n   *\r\n   * This static operator is useful for creating a simple Observable that only\r\n   * emits the complete notification. It can be used for composing with other\r\n   * Observables, such as in a {@link mergeMap}.\r\n   *\r\n   * @example <caption>Emit the number 7, then complete.</caption>\r\n   * var result = Rx.Observable.empty().startWith(7);\r\n   * result.subscribe(x => console.log(x));\r\n   *\r\n   * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\r\n   * var interval = Rx.Observable.interval(1000);\r\n   * var result = interval.mergeMap(x =>\r\n   *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\r\n   * );\r\n   * result.subscribe(x => console.log(x));\r\n   *\r\n   * // Results in the following to the console:\r\n   * // x is equal to the count on the interval eg(0,1,2,3,...)\r\n   * // x will occur every 1000ms\r\n   * // if x % 2 is equal to 1 print abc\r\n   * // if x % 2 is not equal to 1 nothing will be output\r\n   *\r\n   * @see {@link create}\r\n   * @see {@link never}\r\n   * @see {@link of}\r\n   * @see {@link throw}\r\n   *\r\n   * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\r\n   * the emission of the complete notification.\r\n   * @return {Observable} An \"empty\" Observable: emits only the complete\r\n   * notification.\r\n   * @static true\r\n   * @name empty\r\n   * @owner Observable\r\n   */\n  EmptyObservable.create = function (scheduler) {\n    return new EmptyObservable(scheduler);\n  };\n  EmptyObservable.dispatch = function (arg) {\n    var subscriber = arg.subscriber;\n    subscriber.complete();\n  };\n  /** @deprecated internal use only */\n  EmptyObservable.prototype._subscribe = function (subscriber) {\n    var scheduler = this.scheduler;\n    if (scheduler) {\n      return scheduler.schedule(EmptyObservable.dispatch, 0, {\n        subscriber: subscriber\n      });\n    } else {\n      subscriber.complete();\n    }\n  };\n  return EmptyObservable;\n}(Observable_1.Observable);\nexports.EmptyObservable = EmptyObservable;","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Observable_1","require","EmptyObservable","_super","scheduler","call","dispatch","arg","subscriber","complete","_subscribe","schedule","Observable","exports"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/observable/EmptyObservable.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar EmptyObservable = (function (_super) {\r\n    __extends(EmptyObservable, _super);\r\n    function EmptyObservable(scheduler) {\r\n        _super.call(this);\r\n        this.scheduler = scheduler;\r\n    }\r\n    /**\r\n     * Creates an Observable that emits no items to the Observer and immediately\r\n     * emits a complete notification.\r\n     *\r\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\r\n     * </span>\r\n     *\r\n     * <img src=\"./img/empty.png\" width=\"100%\">\r\n     *\r\n     * This static operator is useful for creating a simple Observable that only\r\n     * emits the complete notification. It can be used for composing with other\r\n     * Observables, such as in a {@link mergeMap}.\r\n     *\r\n     * @example <caption>Emit the number 7, then complete.</caption>\r\n     * var result = Rx.Observable.empty().startWith(7);\r\n     * result.subscribe(x => console.log(x));\r\n     *\r\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\r\n     * var interval = Rx.Observable.interval(1000);\r\n     * var result = interval.mergeMap(x =>\r\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\r\n     * );\r\n     * result.subscribe(x => console.log(x));\r\n     *\r\n     * // Results in the following to the console:\r\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\r\n     * // x will occur every 1000ms\r\n     * // if x % 2 is equal to 1 print abc\r\n     * // if x % 2 is not equal to 1 nothing will be output\r\n     *\r\n     * @see {@link create}\r\n     * @see {@link never}\r\n     * @see {@link of}\r\n     * @see {@link throw}\r\n     *\r\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\r\n     * the emission of the complete notification.\r\n     * @return {Observable} An \"empty\" Observable: emits only the complete\r\n     * notification.\r\n     * @static true\r\n     * @name empty\r\n     * @owner Observable\r\n     */\r\n    EmptyObservable.create = function (scheduler) {\r\n        return new EmptyObservable(scheduler);\r\n    };\r\n    EmptyObservable.dispatch = function (arg) {\r\n        var subscriber = arg.subscriber;\r\n        subscriber.complete();\r\n    };\r\n    /** @deprecated internal use only */ EmptyObservable.prototype._subscribe = function (subscriber) {\r\n        var scheduler = this.scheduler;\r\n        if (scheduler) {\r\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\r\n        }\r\n        else {\r\n            subscriber.complete();\r\n        }\r\n    };\r\n    return EmptyObservable;\r\n}(Observable_1.Observable));\r\nexports.EmptyObservable = EmptyObservable;\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EACxD,KAAK,IAAIC,CAAC,IAAID,CAAC,EAAE,IAAIA,CAAC,CAACE,cAAc,CAACD,CAAC,CAAC,EAAEF,CAAC,CAACE,CAAC,CAAC,GAAGD,CAAC,CAACC,CAAC,CAAC;EACrD,SAASE,EAAE,GAAG;IAAE,IAAI,CAACC,WAAW,GAAGL,CAAC;EAAE;EACtCA,CAAC,CAACM,SAAS,GAAGL,CAAC,KAAK,IAAI,GAAGM,MAAM,CAACC,MAAM,CAACP,CAAC,CAAC,IAAIG,EAAE,CAACE,SAAS,GAAGL,CAAC,CAACK,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;AACxF,CAAC;AACD,IAAIK,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAI,UAAUC,MAAM,EAAE;EACrCb,SAAS,CAACY,eAAe,EAAEC,MAAM,CAAC;EAClC,SAASD,eAAe,CAACE,SAAS,EAAE;IAChCD,MAAM,CAACE,IAAI,CAAC,IAAI,CAAC;IACjB,IAAI,CAACD,SAAS,GAAGA,SAAS;EAC9B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIF,eAAe,CAACH,MAAM,GAAG,UAAUK,SAAS,EAAE;IAC1C,OAAO,IAAIF,eAAe,CAACE,SAAS,CAAC;EACzC,CAAC;EACDF,eAAe,CAACI,QAAQ,GAAG,UAAUC,GAAG,EAAE;IACtC,IAAIC,UAAU,GAAGD,GAAG,CAACC,UAAU;IAC/BA,UAAU,CAACC,QAAQ,EAAE;EACzB,CAAC;EACD;EAAqCP,eAAe,CAACL,SAAS,CAACa,UAAU,GAAG,UAAUF,UAAU,EAAE;IAC9F,IAAIJ,SAAS,GAAG,IAAI,CAACA,SAAS;IAC9B,IAAIA,SAAS,EAAE;MACX,OAAOA,SAAS,CAACO,QAAQ,CAACT,eAAe,CAACI,QAAQ,EAAE,CAAC,EAAE;QAAEE,UAAU,EAAEA;MAAW,CAAC,CAAC;IACtF,CAAC,MACI;MACDA,UAAU,CAACC,QAAQ,EAAE;IACzB;EACJ,CAAC;EACD,OAAOP,eAAe;AAC1B,CAAC,CAACF,YAAY,CAACY,UAAU,CAAE;AAC3BC,OAAO,CAACX,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}