{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\r\n * Branch out the source Observable values as a nested Observable whenever\r\n * `windowBoundaries` emits.\r\n *\r\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\r\n * instead of an array.</span>\r\n *\r\n * <img src=\"./img/window.png\" width=\"100%\">\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits connected, non-overlapping\r\n * windows. It emits the current window and opens a new one whenever the\r\n * Observable `windowBoundaries` emits an item. Because each window is an\r\n * Observable, the output is a higher-order Observable.\r\n *\r\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var interval = Rx.Observable.interval(1000);\r\n * var result = clicks.window(interval)\r\n *   .map(win => win.take(2)) // each window has at most 2 emissions\r\n *   .mergeAll(); // flatten the Observable-of-Observables\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link windowCount}\r\n * @see {@link windowTime}\r\n * @see {@link windowToggle}\r\n * @see {@link windowWhen}\r\n * @see {@link buffer}\r\n *\r\n * @param {Observable<any>} windowBoundaries An Observable that completes the\r\n * previous window and starts a new window.\r\n * @return {Observable<Observable<T>>} An Observable of windows, which are\r\n * Observables emitting values of the source Observable.\r\n * @method window\r\n * @owner Observable\r\n */\nfunction window(windowBoundaries) {\n  return function windowOperatorFunction(source) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\nexports.window = window;\nvar WindowOperator = function () {\n  function WindowOperator(windowBoundaries) {\n    this.windowBoundaries = windowBoundaries;\n  }\n  WindowOperator.prototype.call = function (subscriber, source) {\n    var windowSubscriber = new WindowSubscriber(subscriber);\n    var sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n    return sourceSubscription;\n  };\n  return WindowOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar WindowSubscriber = function (_super) {\n  __extends(WindowSubscriber, _super);\n  function WindowSubscriber(destination) {\n    _super.call(this, destination);\n    this.window = new Subject_1.Subject();\n    destination.next(this.window);\n  }\n  WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.openWindow();\n  };\n  WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n    this._error(error);\n  };\n  WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n    this._complete();\n  };\n  WindowSubscriber.prototype._next = function (value) {\n    this.window.next(value);\n  };\n  WindowSubscriber.prototype._error = function (err) {\n    this.window.error(err);\n    this.destination.error(err);\n  };\n  WindowSubscriber.prototype._complete = function () {\n    this.window.complete();\n    this.destination.complete();\n  };\n  /** @deprecated internal use only */\n  WindowSubscriber.prototype._unsubscribe = function () {\n    this.window = null;\n  };\n  WindowSubscriber.prototype.openWindow = function () {\n    var prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    var destination = this.destination;\n    var newWindow = this.window = new Subject_1.Subject();\n    destination.next(newWindow);\n  };\n  return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subject_1","require","OuterSubscriber_1","subscribeToResult_1","window","windowBoundaries","windowOperatorFunction","source","lift","WindowOperator","exports","call","subscriber","windowSubscriber","WindowSubscriber","sourceSubscription","subscribe","closed","add","subscribeToResult","_super","destination","Subject","next","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","openWindow","notifyError","error","_error","notifyComplete","_complete","_next","value","err","complete","_unsubscribe","prevWindow","newWindow","OuterSubscriber"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/window.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../Subject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Branch out the source Observable values as a nested Observable whenever\r\n * `windowBoundaries` emits.\r\n *\r\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\r\n * instead of an array.</span>\r\n *\r\n * <img src=\"./img/window.png\" width=\"100%\">\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits connected, non-overlapping\r\n * windows. It emits the current window and opens a new one whenever the\r\n * Observable `windowBoundaries` emits an item. Because each window is an\r\n * Observable, the output is a higher-order Observable.\r\n *\r\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var interval = Rx.Observable.interval(1000);\r\n * var result = clicks.window(interval)\r\n *   .map(win => win.take(2)) // each window has at most 2 emissions\r\n *   .mergeAll(); // flatten the Observable-of-Observables\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link windowCount}\r\n * @see {@link windowTime}\r\n * @see {@link windowToggle}\r\n * @see {@link windowWhen}\r\n * @see {@link buffer}\r\n *\r\n * @param {Observable<any>} windowBoundaries An Observable that completes the\r\n * previous window and starts a new window.\r\n * @return {Observable<Observable<T>>} An Observable of windows, which are\r\n * Observables emitting values of the source Observable.\r\n * @method window\r\n * @owner Observable\r\n */\r\nfunction window(windowBoundaries) {\r\n    return function windowOperatorFunction(source) {\r\n        return source.lift(new WindowOperator(windowBoundaries));\r\n    };\r\n}\r\nexports.window = window;\r\nvar WindowOperator = (function () {\r\n    function WindowOperator(windowBoundaries) {\r\n        this.windowBoundaries = windowBoundaries;\r\n    }\r\n    WindowOperator.prototype.call = function (subscriber, source) {\r\n        var windowSubscriber = new WindowSubscriber(subscriber);\r\n        var sourceSubscription = source.subscribe(windowSubscriber);\r\n        if (!sourceSubscription.closed) {\r\n            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\r\n        }\r\n        return sourceSubscription;\r\n    };\r\n    return WindowOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar WindowSubscriber = (function (_super) {\r\n    __extends(WindowSubscriber, _super);\r\n    function WindowSubscriber(destination) {\r\n        _super.call(this, destination);\r\n        this.window = new Subject_1.Subject();\r\n        destination.next(this.window);\r\n    }\r\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.openWindow();\r\n    };\r\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\r\n        this._error(error);\r\n    };\r\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this._complete();\r\n    };\r\n    WindowSubscriber.prototype._next = function (value) {\r\n        this.window.next(value);\r\n    };\r\n    WindowSubscriber.prototype._error = function (err) {\r\n        this.window.error(err);\r\n        this.destination.error(err);\r\n    };\r\n    WindowSubscriber.prototype._complete = function () {\r\n        this.window.complete();\r\n        this.destination.complete();\r\n    };\r\n    /** @deprecated internal use only */ WindowSubscriber.prototype._unsubscribe = function () {\r\n        this.window = null;\r\n    };\r\n    WindowSubscriber.prototype.openWindow = function () {\r\n        var prevWindow = this.window;\r\n        if (prevWindow) {\r\n            prevWindow.complete();\r\n        }\r\n        var destination = this.destination;\r\n        var newWindow = this.window = new Subject_1.Subject();\r\n        destination.next(newWindow);\r\n    };\r\n    return WindowSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EACxD,KAAK,IAAIC,CAAC,IAAID,CAAC,EAAE,IAAIA,CAAC,CAACE,cAAc,CAACD,CAAC,CAAC,EAAEF,CAAC,CAACE,CAAC,CAAC,GAAGD,CAAC,CAACC,CAAC,CAAC;EACrD,SAASE,EAAE,GAAG;IAAE,IAAI,CAACC,WAAW,GAAGL,CAAC;EAAE;EACtCA,CAAC,CAACM,SAAS,GAAGL,CAAC,KAAK,IAAI,GAAGM,MAAM,CAACC,MAAM,CAACP,CAAC,CAAC,IAAIG,EAAE,CAACE,SAAS,GAAGL,CAAC,CAACK,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;AACxF,CAAC;AACD,IAAIK,SAAS,GAAGC,OAAO,CAAC,YAAY,CAAC;AACrC,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACrD,IAAIE,mBAAmB,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,MAAM,CAACC,gBAAgB,EAAE;EAC9B,OAAO,SAASC,sBAAsB,CAACC,MAAM,EAAE;IAC3C,OAAOA,MAAM,CAACC,IAAI,CAAC,IAAIC,cAAc,CAACJ,gBAAgB,CAAC,CAAC;EAC5D,CAAC;AACL;AACAK,OAAO,CAACN,MAAM,GAAGA,MAAM;AACvB,IAAIK,cAAc,GAAI,YAAY;EAC9B,SAASA,cAAc,CAACJ,gBAAgB,EAAE;IACtC,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB;EAC5C;EACAI,cAAc,CAACZ,SAAS,CAACc,IAAI,GAAG,UAAUC,UAAU,EAAEL,MAAM,EAAE;IAC1D,IAAIM,gBAAgB,GAAG,IAAIC,gBAAgB,CAACF,UAAU,CAAC;IACvD,IAAIG,kBAAkB,GAAGR,MAAM,CAACS,SAAS,CAACH,gBAAgB,CAAC;IAC3D,IAAI,CAACE,kBAAkB,CAACE,MAAM,EAAE;MAC5BJ,gBAAgB,CAACK,GAAG,CAACf,mBAAmB,CAACgB,iBAAiB,CAACN,gBAAgB,EAAE,IAAI,CAACR,gBAAgB,CAAC,CAAC;IACxG;IACA,OAAOU,kBAAkB;EAC7B,CAAC;EACD,OAAON,cAAc;AACzB,CAAC,EAAG;AACJ;AACA;AACA;AACA;AACA;AACA,IAAIK,gBAAgB,GAAI,UAAUM,MAAM,EAAE;EACtC9B,SAAS,CAACwB,gBAAgB,EAAEM,MAAM,CAAC;EACnC,SAASN,gBAAgB,CAACO,WAAW,EAAE;IACnCD,MAAM,CAACT,IAAI,CAAC,IAAI,EAAEU,WAAW,CAAC;IAC9B,IAAI,CAACjB,MAAM,GAAG,IAAIJ,SAAS,CAACsB,OAAO,EAAE;IACrCD,WAAW,CAACE,IAAI,CAAC,IAAI,CAACnB,MAAM,CAAC;EACjC;EACAU,gBAAgB,CAACjB,SAAS,CAAC2B,UAAU,GAAG,UAAUC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,EAAE;IACxG,IAAI,CAACC,UAAU,EAAE;EACrB,CAAC;EACDhB,gBAAgB,CAACjB,SAAS,CAACkC,WAAW,GAAG,UAAUC,KAAK,EAAEH,QAAQ,EAAE;IAChE,IAAI,CAACI,MAAM,CAACD,KAAK,CAAC;EACtB,CAAC;EACDlB,gBAAgB,CAACjB,SAAS,CAACqC,cAAc,GAAG,UAAUL,QAAQ,EAAE;IAC5D,IAAI,CAACM,SAAS,EAAE;EACpB,CAAC;EACDrB,gBAAgB,CAACjB,SAAS,CAACuC,KAAK,GAAG,UAAUC,KAAK,EAAE;IAChD,IAAI,CAACjC,MAAM,CAACmB,IAAI,CAACc,KAAK,CAAC;EAC3B,CAAC;EACDvB,gBAAgB,CAACjB,SAAS,CAACoC,MAAM,GAAG,UAAUK,GAAG,EAAE;IAC/C,IAAI,CAAClC,MAAM,CAAC4B,KAAK,CAACM,GAAG,CAAC;IACtB,IAAI,CAACjB,WAAW,CAACW,KAAK,CAACM,GAAG,CAAC;EAC/B,CAAC;EACDxB,gBAAgB,CAACjB,SAAS,CAACsC,SAAS,GAAG,YAAY;IAC/C,IAAI,CAAC/B,MAAM,CAACmC,QAAQ,EAAE;IACtB,IAAI,CAAClB,WAAW,CAACkB,QAAQ,EAAE;EAC/B,CAAC;EACD;EAAqCzB,gBAAgB,CAACjB,SAAS,CAAC2C,YAAY,GAAG,YAAY;IACvF,IAAI,CAACpC,MAAM,GAAG,IAAI;EACtB,CAAC;EACDU,gBAAgB,CAACjB,SAAS,CAACiC,UAAU,GAAG,YAAY;IAChD,IAAIW,UAAU,GAAG,IAAI,CAACrC,MAAM;IAC5B,IAAIqC,UAAU,EAAE;MACZA,UAAU,CAACF,QAAQ,EAAE;IACzB;IACA,IAAIlB,WAAW,GAAG,IAAI,CAACA,WAAW;IAClC,IAAIqB,SAAS,GAAG,IAAI,CAACtC,MAAM,GAAG,IAAIJ,SAAS,CAACsB,OAAO,EAAE;IACrDD,WAAW,CAACE,IAAI,CAACmB,SAAS,CAAC;EAC/B,CAAC;EACD,OAAO5B,gBAAgB;AAC3B,CAAC,CAACZ,iBAAiB,CAACyC,eAAe,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}