{"ast":null,"code":"\"use strict\";\n\nvar distinctUntilChanged_1 = require('../operators/distinctUntilChanged');\n/* tslint:enable:max-line-length */\n/**\r\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\r\n *\r\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\r\n *\r\n * If a comparator function is not provided, an equality check is used by default.\r\n *\r\n * @example <caption>A simple example with numbers</caption>\r\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\r\n *   .distinctUntilChanged()\r\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\r\n *\r\n * @example <caption>An example using a compare function</caption>\r\n * interface Person {\r\n *    age: number,\r\n *    name: string\r\n * }\r\n *\r\n * Observable.of<Person>(\r\n *     { age: 4, name: 'Foo'},\r\n *     { age: 7, name: 'Bar'},\r\n *     { age: 5, name: 'Foo'})\r\n *     { age: 6, name: 'Foo'})\r\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\r\n *     .subscribe(x => console.log(x));\r\n *\r\n * // displays:\r\n * // { age: 4, name: 'Foo' }\r\n * // { age: 7, name: 'Bar' }\r\n * // { age: 5, name: 'Foo' }\r\n *\r\n * @see {@link distinct}\r\n * @see {@link distinctUntilKeyChanged}\r\n *\r\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\r\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\r\n * @method distinctUntilChanged\r\n * @owner Observable\r\n */\nfunction distinctUntilChanged(compare, keySelector) {\n  return distinctUntilChanged_1.distinctUntilChanged(compare, keySelector)(this);\n}\nexports.distinctUntilChanged = distinctUntilChanged;","map":{"version":3,"names":["distinctUntilChanged_1","require","distinctUntilChanged","compare","keySelector","exports"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operator/distinctUntilChanged.js"],"sourcesContent":["\"use strict\";\r\nvar distinctUntilChanged_1 = require('../operators/distinctUntilChanged');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\r\n *\r\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\r\n *\r\n * If a comparator function is not provided, an equality check is used by default.\r\n *\r\n * @example <caption>A simple example with numbers</caption>\r\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\r\n *   .distinctUntilChanged()\r\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\r\n *\r\n * @example <caption>An example using a compare function</caption>\r\n * interface Person {\r\n *    age: number,\r\n *    name: string\r\n * }\r\n *\r\n * Observable.of<Person>(\r\n *     { age: 4, name: 'Foo'},\r\n *     { age: 7, name: 'Bar'},\r\n *     { age: 5, name: 'Foo'})\r\n *     { age: 6, name: 'Foo'})\r\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\r\n *     .subscribe(x => console.log(x));\r\n *\r\n * // displays:\r\n * // { age: 4, name: 'Foo' }\r\n * // { age: 7, name: 'Bar' }\r\n * // { age: 5, name: 'Foo' }\r\n *\r\n * @see {@link distinct}\r\n * @see {@link distinctUntilKeyChanged}\r\n *\r\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\r\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\r\n * @method distinctUntilChanged\r\n * @owner Observable\r\n */\r\nfunction distinctUntilChanged(compare, keySelector) {\r\n    return distinctUntilChanged_1.distinctUntilChanged(compare, keySelector)(this);\r\n}\r\nexports.distinctUntilChanged = distinctUntilChanged;\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,mCAAmC,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoB,CAACC,OAAO,EAAEC,WAAW,EAAE;EAChD,OAAOJ,sBAAsB,CAACE,oBAAoB,CAACC,OAAO,EAAEC,WAAW,CAAC,CAAC,IAAI,CAAC;AAClF;AACAC,OAAO,CAACH,oBAAoB,GAAGA,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}