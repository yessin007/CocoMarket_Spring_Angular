{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\r\n * Represents all of the notifications from the source Observable as `next`\r\n * emissions marked with their original types within {@link Notification}\r\n * objects.\r\n *\r\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\r\n * {@link Notification} objects, emitted as `next` on the output Observable.\r\n * </span>\r\n *\r\n * <img src=\"./img/materialize.png\" width=\"100%\">\r\n *\r\n * `materialize` returns an Observable that emits a `next` notification for each\r\n * `next`, `error`, or `complete` emission of the source Observable. When the\r\n * source Observable emits `complete`, the output Observable will emit `next` as\r\n * a Notification of type \"complete\", and then it will emit `complete` as well.\r\n * When the source Observable emits `error`, the output will emit `next` as a\r\n * Notification of type \"error\", and then `complete`.\r\n *\r\n * This operator is useful for producing metadata of the source Observable, to\r\n * be consumed as `next` emissions. Use it in conjunction with\r\n * {@link dematerialize}.\r\n *\r\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\r\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\r\n * var upperCase = letters.map(x => x.toUpperCase());\r\n * var materialized = upperCase.materialize();\r\n * materialized.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\r\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\r\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\r\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\r\n * //   [as project] (http://1…, hasValue: false}\r\n *\r\n * @see {@link Notification}\r\n * @see {@link dematerialize}\r\n *\r\n * @return {Observable<Notification<T>>} An Observable that emits\r\n * {@link Notification} objects that wrap the original emissions from the source\r\n * Observable with metadata.\r\n * @method materialize\r\n * @owner Observable\r\n */\nfunction materialize() {\n  return function materializeOperatorFunction(source) {\n    return source.lift(new MaterializeOperator());\n  };\n}\nexports.materialize = materialize;\nvar MaterializeOperator = function () {\n  function MaterializeOperator() {}\n  MaterializeOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  };\n  return MaterializeOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar MaterializeSubscriber = function (_super) {\n  __extends(MaterializeSubscriber, _super);\n  function MaterializeSubscriber(destination) {\n    _super.call(this, destination);\n  }\n  MaterializeSubscriber.prototype._next = function (value) {\n    this.destination.next(Notification_1.Notification.createNext(value));\n  };\n  MaterializeSubscriber.prototype._error = function (err) {\n    var destination = this.destination;\n    destination.next(Notification_1.Notification.createError(err));\n    destination.complete();\n  };\n  MaterializeSubscriber.prototype._complete = function () {\n    var destination = this.destination;\n    destination.next(Notification_1.Notification.createComplete());\n    destination.complete();\n  };\n  return MaterializeSubscriber;\n}(Subscriber_1.Subscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","Notification_1","materialize","materializeOperatorFunction","source","lift","MaterializeOperator","exports","call","subscriber","subscribe","MaterializeSubscriber","_super","destination","_next","value","next","Notification","createNext","_error","err","createError","complete","_complete","createComplete","Subscriber"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/materialize.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Notification_1 = require('../Notification');\r\n/**\r\n * Represents all of the notifications from the source Observable as `next`\r\n * emissions marked with their original types within {@link Notification}\r\n * objects.\r\n *\r\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\r\n * {@link Notification} objects, emitted as `next` on the output Observable.\r\n * </span>\r\n *\r\n * <img src=\"./img/materialize.png\" width=\"100%\">\r\n *\r\n * `materialize` returns an Observable that emits a `next` notification for each\r\n * `next`, `error`, or `complete` emission of the source Observable. When the\r\n * source Observable emits `complete`, the output Observable will emit `next` as\r\n * a Notification of type \"complete\", and then it will emit `complete` as well.\r\n * When the source Observable emits `error`, the output will emit `next` as a\r\n * Notification of type \"error\", and then `complete`.\r\n *\r\n * This operator is useful for producing metadata of the source Observable, to\r\n * be consumed as `next` emissions. Use it in conjunction with\r\n * {@link dematerialize}.\r\n *\r\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\r\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\r\n * var upperCase = letters.map(x => x.toUpperCase());\r\n * var materialized = upperCase.materialize();\r\n * materialized.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\r\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\r\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\r\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\r\n * //   [as project] (http://1…, hasValue: false}\r\n *\r\n * @see {@link Notification}\r\n * @see {@link dematerialize}\r\n *\r\n * @return {Observable<Notification<T>>} An Observable that emits\r\n * {@link Notification} objects that wrap the original emissions from the source\r\n * Observable with metadata.\r\n * @method materialize\r\n * @owner Observable\r\n */\r\nfunction materialize() {\r\n    return function materializeOperatorFunction(source) {\r\n        return source.lift(new MaterializeOperator());\r\n    };\r\n}\r\nexports.materialize = materialize;\r\nvar MaterializeOperator = (function () {\r\n    function MaterializeOperator() {\r\n    }\r\n    MaterializeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new MaterializeSubscriber(subscriber));\r\n    };\r\n    return MaterializeOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar MaterializeSubscriber = (function (_super) {\r\n    __extends(MaterializeSubscriber, _super);\r\n    function MaterializeSubscriber(destination) {\r\n        _super.call(this, destination);\r\n    }\r\n    MaterializeSubscriber.prototype._next = function (value) {\r\n        this.destination.next(Notification_1.Notification.createNext(value));\r\n    };\r\n    MaterializeSubscriber.prototype._error = function (err) {\r\n        var destination = this.destination;\r\n        destination.next(Notification_1.Notification.createError(err));\r\n        destination.complete();\r\n    };\r\n    MaterializeSubscriber.prototype._complete = function () {\r\n        var destination = this.destination;\r\n        destination.next(Notification_1.Notification.createComplete());\r\n        destination.complete();\r\n    };\r\n    return MaterializeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EACxD,KAAK,IAAIC,CAAC,IAAID,CAAC,EAAE,IAAIA,CAAC,CAACE,cAAc,CAACD,CAAC,CAAC,EAAEF,CAAC,CAACE,CAAC,CAAC,GAAGD,CAAC,CAACC,CAAC,CAAC;EACrD,SAASE,EAAE,GAAG;IAAE,IAAI,CAACC,WAAW,GAAGL,CAAC;EAAE;EACtCA,CAAC,CAACM,SAAS,GAAGL,CAAC,KAAK,IAAI,GAAGM,MAAM,CAACC,MAAM,CAACP,CAAC,CAAC,IAAIG,EAAE,CAACE,SAAS,GAAGL,CAAC,CAACK,SAAS,EAAE,IAAIF,EAAE,EAAE,CAAC;AACxF,CAAC;AACD,IAAIK,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,IAAIC,cAAc,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,WAAW,GAAG;EACnB,OAAO,SAASC,2BAA2B,CAACC,MAAM,EAAE;IAChD,OAAOA,MAAM,CAACC,IAAI,CAAC,IAAIC,mBAAmB,EAAE,CAAC;EACjD,CAAC;AACL;AACAC,OAAO,CAACL,WAAW,GAAGA,WAAW;AACjC,IAAII,mBAAmB,GAAI,YAAY;EACnC,SAASA,mBAAmB,GAAG,CAC/B;EACAA,mBAAmB,CAACV,SAAS,CAACY,IAAI,GAAG,UAAUC,UAAU,EAAEL,MAAM,EAAE;IAC/D,OAAOA,MAAM,CAACM,SAAS,CAAC,IAAIC,qBAAqB,CAACF,UAAU,CAAC,CAAC;EAClE,CAAC;EACD,OAAOH,mBAAmB;AAC9B,CAAC,EAAG;AACJ;AACA;AACA;AACA;AACA;AACA,IAAIK,qBAAqB,GAAI,UAAUC,MAAM,EAAE;EAC3CvB,SAAS,CAACsB,qBAAqB,EAAEC,MAAM,CAAC;EACxC,SAASD,qBAAqB,CAACE,WAAW,EAAE;IACxCD,MAAM,CAACJ,IAAI,CAAC,IAAI,EAAEK,WAAW,CAAC;EAClC;EACAF,qBAAqB,CAACf,SAAS,CAACkB,KAAK,GAAG,UAAUC,KAAK,EAAE;IACrD,IAAI,CAACF,WAAW,CAACG,IAAI,CAACf,cAAc,CAACgB,YAAY,CAACC,UAAU,CAACH,KAAK,CAAC,CAAC;EACxE,CAAC;EACDJ,qBAAqB,CAACf,SAAS,CAACuB,MAAM,GAAG,UAAUC,GAAG,EAAE;IACpD,IAAIP,WAAW,GAAG,IAAI,CAACA,WAAW;IAClCA,WAAW,CAACG,IAAI,CAACf,cAAc,CAACgB,YAAY,CAACI,WAAW,CAACD,GAAG,CAAC,CAAC;IAC9DP,WAAW,CAACS,QAAQ,EAAE;EAC1B,CAAC;EACDX,qBAAqB,CAACf,SAAS,CAAC2B,SAAS,GAAG,YAAY;IACpD,IAAIV,WAAW,GAAG,IAAI,CAACA,WAAW;IAClCA,WAAW,CAACG,IAAI,CAACf,cAAc,CAACgB,YAAY,CAACO,cAAc,EAAE,CAAC;IAC9DX,WAAW,CAACS,QAAQ,EAAE;EAC1B,CAAC;EACD,OAAOX,qBAAqB;AAChC,CAAC,CAACZ,YAAY,CAAC0B,UAAU,CAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}