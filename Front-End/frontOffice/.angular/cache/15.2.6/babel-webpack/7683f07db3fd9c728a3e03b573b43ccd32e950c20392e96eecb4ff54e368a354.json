{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\r\n * Emits only the first value (or the first value that meets some condition)\r\n * emitted by the source Observable.\r\n *\r\n * <span class=\"informal\">Emits only the first value. Or emits only the first\r\n * value that passes some test.</span>\r\n *\r\n * <img src=\"./img/first.png\" width=\"100%\">\r\n *\r\n * If called with no arguments, `first` emits the first value of the source\r\n * Observable, then completes. If called with a `predicate` function, `first`\r\n * emits the first value of the source that matches the specified condition. It\r\n * may also take a `resultSelector` function to produce the output value from\r\n * the input value, and a `defaultValue` to emit in case the source completes\r\n * before it is able to emit a valid value. Throws an error if `defaultValue`\r\n * was not provided and a matching element is not found.\r\n *\r\n * @example <caption>Emit only the first click that happens on the DOM</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.first();\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>Emits the first click that happens on a DIV</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link filter}\r\n * @see {@link find}\r\n * @see {@link take}\r\n *\r\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\r\n * callback if the Observable completes before any `next` notification was sent.\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\r\n * An optional function called with each item to test for condition matching.\r\n * @param {function(value: T, index: number): R} [resultSelector] A function to\r\n * produce the value on the output Observable based on the values\r\n * and the indices of the source Observable. The arguments passed to this\r\n * function are:\r\n * - `value`: the value that was emitted on the source.\r\n * - `index`: the \"index\" of the value from the source.\r\n * @param {R} [defaultValue] The default value emitted in case no valid value\r\n * was found on the source.\r\n * @return {Observable<T|R>} An Observable of the first item that matches the\r\n * condition.\r\n * @method first\r\n * @owner Observable\r\n */\nfunction first(predicate, resultSelector, defaultValue) {\n  return function (source) {\n    return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source));\n  };\n}\nexports.first = first;\nvar FirstOperator = function () {\n  function FirstOperator(predicate, resultSelector, defaultValue, source) {\n    this.predicate = predicate;\n    this.resultSelector = resultSelector;\n    this.defaultValue = defaultValue;\n    this.source = source;\n  }\n  FirstOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n  };\n  return FirstOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar FirstSubscriber = function (_super) {\n  __extends(FirstSubscriber, _super);\n  function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n    _super.call(this, destination);\n    this.predicate = predicate;\n    this.resultSelector = resultSelector;\n    this.defaultValue = defaultValue;\n    this.source = source;\n    this.index = 0;\n    this.hasCompleted = false;\n    this._emitted = false;\n  }\n  FirstSubscriber.prototype._next = function (value) {\n    var index = this.index++;\n    if (this.predicate) {\n      this._tryPredicate(value, index);\n    } else {\n      this._emit(value, index);\n    }\n  };\n  FirstSubscriber.prototype._tryPredicate = function (value, index) {\n    var result;\n    try {\n      result = this.predicate(value, index, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this._emit(value, index);\n    }\n  };\n  FirstSubscriber.prototype._emit = function (value, index) {\n    if (this.resultSelector) {\n      this._tryResultSelector(value, index);\n      return;\n    }\n    this._emitFinal(value);\n  };\n  FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n    var result;\n    try {\n      result = this.resultSelector(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this._emitFinal(result);\n  };\n  FirstSubscriber.prototype._emitFinal = function (value) {\n    var destination = this.destination;\n    if (!this._emitted) {\n      this._emitted = true;\n      destination.next(value);\n      destination.complete();\n      this.hasCompleted = true;\n    }\n  };\n  FirstSubscriber.prototype._complete = function () {\n    var destination = this.destination;\n    if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n      destination.next(this.defaultValue);\n      destination.complete();\n    } else if (!this.hasCompleted) {\n      destination.error(new EmptyError_1.EmptyError());\n    }\n  };\n  return FirstSubscriber;\n}(Subscriber_1.Subscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","EmptyError_1","first","predicate","resultSelector","defaultValue","source","lift","FirstOperator","exports","call","observer","subscribe","FirstSubscriber","_super","destination","index","hasCompleted","_emitted","_next","value","_tryPredicate","_emit","result","err","error","_tryResultSelector","_emitFinal","next","complete","_complete","EmptyError","Subscriber"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/first.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar EmptyError_1 = require('../util/EmptyError');\r\n/**\r\n * Emits only the first value (or the first value that meets some condition)\r\n * emitted by the source Observable.\r\n *\r\n * <span class=\"informal\">Emits only the first value. Or emits only the first\r\n * value that passes some test.</span>\r\n *\r\n * <img src=\"./img/first.png\" width=\"100%\">\r\n *\r\n * If called with no arguments, `first` emits the first value of the source\r\n * Observable, then completes. If called with a `predicate` function, `first`\r\n * emits the first value of the source that matches the specified condition. It\r\n * may also take a `resultSelector` function to produce the output value from\r\n * the input value, and a `defaultValue` to emit in case the source completes\r\n * before it is able to emit a valid value. Throws an error if `defaultValue`\r\n * was not provided and a matching element is not found.\r\n *\r\n * @example <caption>Emit only the first click that happens on the DOM</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.first();\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>Emits the first click that happens on a DIV</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link filter}\r\n * @see {@link find}\r\n * @see {@link take}\r\n *\r\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\r\n * callback if the Observable completes before any `next` notification was sent.\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\r\n * An optional function called with each item to test for condition matching.\r\n * @param {function(value: T, index: number): R} [resultSelector] A function to\r\n * produce the value on the output Observable based on the values\r\n * and the indices of the source Observable. The arguments passed to this\r\n * function are:\r\n * - `value`: the value that was emitted on the source.\r\n * - `index`: the \"index\" of the value from the source.\r\n * @param {R} [defaultValue] The default value emitted in case no valid value\r\n * was found on the source.\r\n * @return {Observable<T|R>} An Observable of the first item that matches the\r\n * condition.\r\n * @method first\r\n * @owner Observable\r\n */\r\nfunction first(predicate, resultSelector, defaultValue) {\r\n    return function (source) { return source.lift(new FirstOperator(predicate, resultSelector, defaultValue, source)); };\r\n}\r\nexports.first = first;\r\nvar FirstOperator = (function () {\r\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\r\n        this.predicate = predicate;\r\n        this.resultSelector = resultSelector;\r\n        this.defaultValue = defaultValue;\r\n        this.source = source;\r\n    }\r\n    FirstOperator.prototype.call = function (observer, source) {\r\n        return source.subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\r\n    };\r\n    return FirstOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar FirstSubscriber = (function (_super) {\r\n    __extends(FirstSubscriber, _super);\r\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\r\n        _super.call(this, destination);\r\n        this.predicate = predicate;\r\n        this.resultSelector = resultSelector;\r\n        this.defaultValue = defaultValue;\r\n        this.source = source;\r\n        this.index = 0;\r\n        this.hasCompleted = false;\r\n        this._emitted = false;\r\n    }\r\n    FirstSubscriber.prototype._next = function (value) {\r\n        var index = this.index++;\r\n        if (this.predicate) {\r\n            this._tryPredicate(value, index);\r\n        }\r\n        else {\r\n            this._emit(value, index);\r\n        }\r\n    };\r\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\r\n        var result;\r\n        try {\r\n            result = this.predicate(value, index, this.source);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n            return;\r\n        }\r\n        if (result) {\r\n            this._emit(value, index);\r\n        }\r\n    };\r\n    FirstSubscriber.prototype._emit = function (value, index) {\r\n        if (this.resultSelector) {\r\n            this._tryResultSelector(value, index);\r\n            return;\r\n        }\r\n        this._emitFinal(value);\r\n    };\r\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\r\n        var result;\r\n        try {\r\n            result = this.resultSelector(value, index);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n            return;\r\n        }\r\n        this._emitFinal(result);\r\n    };\r\n    FirstSubscriber.prototype._emitFinal = function (value) {\r\n        var destination = this.destination;\r\n        if (!this._emitted) {\r\n            this._emitted = true;\r\n            destination.next(value);\r\n            destination.complete();\r\n            this.hasCompleted = true;\r\n        }\r\n    };\r\n    FirstSubscriber.prototype._complete = function () {\r\n        var destination = this.destination;\r\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\r\n            destination.next(this.defaultValue);\r\n            destination.complete();\r\n        }\r\n        else if (!this.hasCompleted) {\r\n            destination.error(new EmptyError_1.EmptyError);\r\n        }\r\n    };\r\n    return FirstSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}