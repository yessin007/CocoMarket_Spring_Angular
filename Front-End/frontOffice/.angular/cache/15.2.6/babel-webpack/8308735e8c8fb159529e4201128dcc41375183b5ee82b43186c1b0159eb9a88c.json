{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst state = {\n  checkoutItems: JSON.parse(localStorage['checkoutItems'] || '[]')\n};\nexport class OrderService {\n  constructor(router) {\n    this.router = router;\n  }\n  // Get Checkout Items\n  get checkoutItems() {\n    const itemsStream = new Observable(observer => {\n      observer.next(state.checkoutItems);\n      observer.complete();\n    });\n    return itemsStream;\n  }\n  // Create order\n  createOrder(product, details, orderId, amount) {\n    var item = {\n      shippingDetails: details,\n      product: product,\n      orderId: orderId,\n      totalAmount: amount\n    };\n    state.checkoutItems = item;\n    localStorage.setItem(\"checkoutItems\", JSON.stringify(item));\n    localStorage.removeItem(\"cartItems\");\n    this.router.navigate(['/shop/checkout/success', orderId]);\n  }\n}\nOrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ɵɵinject(i1.Router));\n};\nOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrderService,\n  factory: OrderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,MAAM;;;AAEjC,MAAMC,KAAK,GAAG;EACZC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAAC,eAAe,CAAC,IAAI,IAAI;CAChE;AAKD,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtC;EACA,IAAWN,aAAa;IACtB,MAAMO,WAAW,GAAG,IAAIT,UAAU,CAACU,QAAQ,IAAG;MAC5CA,QAAQ,CAACC,IAAI,CAACV,KAAK,CAACC,aAAa,CAAC;MAClCQ,QAAQ,CAACE,QAAQ,EAAE;IACrB,CAAC,CAAC;IACF,OAAwBH,WAAW;EACrC;EAEA;EACOI,WAAW,CAACC,OAAY,EAAEC,OAAY,EAAEC,OAAY,EAAEC,MAAW;IACtE,IAAIC,IAAI,GAAG;MACPC,eAAe,EAAEJ,OAAO;MACxBD,OAAO,EAAEA,OAAO;MAChBE,OAAO,EAAEA,OAAO;MAChBI,WAAW,EAAEH;KAChB;IACDhB,KAAK,CAACC,aAAa,GAAGgB,IAAI;IAC1Bb,YAAY,CAACgB,OAAO,CAAC,eAAe,EAAElB,IAAI,CAACmB,SAAS,CAACJ,IAAI,CAAC,CAAC;IAC3Db,YAAY,CAACkB,UAAU,CAAC,WAAW,CAAC;IACpC,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,wBAAwB,EAAER,OAAO,CAAC,CAAC;EAC3D;;AAzBWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAmB,SAAZnB,YAAY;EAAAoB,YAFX;AAAM","names":["Observable","state","checkoutItems","JSON","parse","localStorage","OrderService","constructor","router","itemsStream","observer","next","complete","createOrder","product","details","orderId","amount","item","shippingDetails","totalAmount","setItem","stringify","removeItem","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\shared\\services\\order.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst state = {\r\n  checkoutItems: JSON.parse(localStorage['checkoutItems'] || '[]')\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  // Get Checkout Items\r\n  public get checkoutItems(): Observable<any> {\r\n    const itemsStream = new Observable(observer => {\r\n      observer.next(state.checkoutItems);\r\n      observer.complete();\r\n    });\r\n    return <Observable<any>>itemsStream;\r\n  }\r\n\r\n  // Create order\r\n  public createOrder(product: any, details: any, orderId: any, amount: any) {\r\n    var item = {\r\n        shippingDetails: details,\r\n        product: product,\r\n        orderId: orderId,\r\n        totalAmount: amount\r\n    };\r\n    state.checkoutItems = item;\r\n    localStorage.setItem(\"checkoutItems\", JSON.stringify(item));\r\n    localStorage.removeItem(\"cartItems\");\r\n    this.router.navigate(['/shop/checkout/success', orderId]);\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}