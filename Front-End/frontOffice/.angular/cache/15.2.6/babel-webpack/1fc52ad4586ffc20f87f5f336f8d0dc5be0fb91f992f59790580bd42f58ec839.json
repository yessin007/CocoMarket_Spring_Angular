{"ast":null,"code":"\"use strict\";\n\nvar findIndex_1 = require('../operators/findIndex');\n/**\r\n * Emits only the index of the first value emitted by the source Observable that\r\n * meets some condition.\r\n *\r\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\r\n * found value, not the value itself.</span>\r\n *\r\n * <img src=\"./img/findIndex.png\" width=\"100%\">\r\n *\r\n * `findIndex` searches for the first item in the source Observable that matches\r\n * the specified condition embodied by the `predicate`, and returns the\r\n * (zero-based) index of the first occurrence in the source. Unlike\r\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\r\n * an error if a valid value is not found.\r\n *\r\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link filter}\r\n * @see {@link find}\r\n * @see {@link first}\r\n * @see {@link take}\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\r\n * A function called with each item to test for condition matching.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return {Observable} An Observable of the index of the first item that\r\n * matches the condition.\r\n * @method find\r\n * @owner Observable\r\n */\nfunction findIndex(predicate, thisArg) {\n  return findIndex_1.findIndex(predicate, thisArg)(this);\n}\nexports.findIndex = findIndex;","map":{"version":3,"names":["findIndex_1","require","findIndex","predicate","thisArg","exports"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operator/findIndex.js"],"sourcesContent":["\"use strict\";\r\nvar findIndex_1 = require('../operators/findIndex');\r\n/**\r\n * Emits only the index of the first value emitted by the source Observable that\r\n * meets some condition.\r\n *\r\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\r\n * found value, not the value itself.</span>\r\n *\r\n * <img src=\"./img/findIndex.png\" width=\"100%\">\r\n *\r\n * `findIndex` searches for the first item in the source Observable that matches\r\n * the specified condition embodied by the `predicate`, and returns the\r\n * (zero-based) index of the first occurrence in the source. Unlike\r\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\r\n * an error if a valid value is not found.\r\n *\r\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link filter}\r\n * @see {@link find}\r\n * @see {@link first}\r\n * @see {@link take}\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\r\n * A function called with each item to test for condition matching.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return {Observable} An Observable of the index of the first item that\r\n * matches the condition.\r\n * @method find\r\n * @owner Observable\r\n */\r\nfunction findIndex(predicate, thisArg) {\r\n    return findIndex_1.findIndex(predicate, thisArg)(this);\r\n}\r\nexports.findIndex = findIndex;\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAAS,CAACC,SAAS,EAAEC,OAAO,EAAE;EACnC,OAAOJ,WAAW,CAACE,SAAS,CAACC,SAAS,EAAEC,OAAO,CAAC,CAAC,IAAI,CAAC;AAC1D;AACAC,OAAO,CAACH,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}