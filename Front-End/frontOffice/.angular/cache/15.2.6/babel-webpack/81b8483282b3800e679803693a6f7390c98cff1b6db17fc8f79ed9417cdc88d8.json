{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\r\n * Applies an accumulator function over the source Observable where the\r\n * accumulator function itself returns an Observable, then each intermediate\r\n * Observable returned is merged into the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\r\n * by the accumulator are merged into the outer Observable.</span>\r\n *\r\n * @example <caption>Count the number of click events</caption>\r\n * const click$ = Rx.Observable.fromEvent(document, 'click');\r\n * const one$ = click$.mapTo(1);\r\n * const seed = 0;\r\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\r\n * count$.subscribe(x => console.log(x));\r\n *\r\n * // Results:\r\n * 1\r\n * 2\r\n * 3\r\n * 4\r\n * // ...and so on for each click\r\n *\r\n * @param {function(acc: R, value: T): Observable<R>} accumulator\r\n * The accumulator function called on each source value.\r\n * @param seed The initial accumulation value.\r\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\r\n * input Observables being subscribed to concurrently.\r\n * @return {Observable<R>} An observable of the accumulated values.\r\n * @method mergeScan\r\n * @owner Observable\r\n */\nfunction mergeScan(accumulator, seed, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Number.POSITIVE_INFINITY;\n  }\n  return function (source) {\n    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n  };\n}\nexports.mergeScan = mergeScan;\nvar MergeScanOperator = function () {\n  function MergeScanOperator(accumulator, seed, concurrent) {\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.concurrent = concurrent;\n  }\n  MergeScanOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n  };\n  return MergeScanOperator;\n}();\nexports.MergeScanOperator = MergeScanOperator;\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar MergeScanSubscriber = function (_super) {\n  __extends(MergeScanSubscriber, _super);\n  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n    _super.call(this, destination);\n    this.accumulator = accumulator;\n    this.acc = acc;\n    this.concurrent = concurrent;\n    this.hasValue = false;\n    this.hasCompleted = false;\n    this.buffer = [];\n    this.active = 0;\n    this.index = 0;\n  }\n  MergeScanSubscriber.prototype._next = function (value) {\n    if (this.active < this.concurrent) {\n      var index = this.index++;\n      var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);\n      var destination = this.destination;\n      if (ish === errorObject_1.errorObject) {\n        destination.error(errorObject_1.errorObject.e);\n      } else {\n        this.active++;\n        this._innerSub(ish, value, index);\n      }\n    } else {\n      this.buffer.push(value);\n    }\n  };\n  MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n    this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n  };\n  MergeScanSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  };\n  MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    var destination = this.destination;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next(innerValue);\n  };\n  MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n    var buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next(this.acc);\n      }\n      this.destination.complete();\n    }\n  };\n  return MergeScanSubscriber;\n}(OuterSubscriber_1.OuterSubscriber);\nexports.MergeScanSubscriber = MergeScanSubscriber;","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","tryCatch_1","require","errorObject_1","subscribeToResult_1","OuterSubscriber_1","mergeScan","accumulator","seed","concurrent","Number","POSITIVE_INFINITY","source","lift","MergeScanOperator","exports","call","subscriber","subscribe","MergeScanSubscriber","_super","destination","acc","hasValue","hasCompleted","buffer","active","index","_next","value","ish","tryCatch","errorObject","error","e","_innerSub","push","add","subscribeToResult","_complete","length","next","complete","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyComplete","remove","shift","OuterSubscriber"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/mergeScan.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\n/**\r\n * Applies an accumulator function over the source Observable where the\r\n * accumulator function itself returns an Observable, then each intermediate\r\n * Observable returned is merged into the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\r\n * by the accumulator are merged into the outer Observable.</span>\r\n *\r\n * @example <caption>Count the number of click events</caption>\r\n * const click$ = Rx.Observable.fromEvent(document, 'click');\r\n * const one$ = click$.mapTo(1);\r\n * const seed = 0;\r\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\r\n * count$.subscribe(x => console.log(x));\r\n *\r\n * // Results:\r\n * 1\r\n * 2\r\n * 3\r\n * 4\r\n * // ...and so on for each click\r\n *\r\n * @param {function(acc: R, value: T): Observable<R>} accumulator\r\n * The accumulator function called on each source value.\r\n * @param seed The initial accumulation value.\r\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\r\n * input Observables being subscribed to concurrently.\r\n * @return {Observable<R>} An observable of the accumulated values.\r\n * @method mergeScan\r\n * @owner Observable\r\n */\r\nfunction mergeScan(accumulator, seed, concurrent) {\r\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n    return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };\r\n}\r\nexports.mergeScan = mergeScan;\r\nvar MergeScanOperator = (function () {\r\n    function MergeScanOperator(accumulator, seed, concurrent) {\r\n        this.accumulator = accumulator;\r\n        this.seed = seed;\r\n        this.concurrent = concurrent;\r\n    }\r\n    MergeScanOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\r\n    };\r\n    return MergeScanOperator;\r\n}());\r\nexports.MergeScanOperator = MergeScanOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar MergeScanSubscriber = (function (_super) {\r\n    __extends(MergeScanSubscriber, _super);\r\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\r\n        _super.call(this, destination);\r\n        this.accumulator = accumulator;\r\n        this.acc = acc;\r\n        this.concurrent = concurrent;\r\n        this.hasValue = false;\r\n        this.hasCompleted = false;\r\n        this.buffer = [];\r\n        this.active = 0;\r\n        this.index = 0;\r\n    }\r\n    MergeScanSubscriber.prototype._next = function (value) {\r\n        if (this.active < this.concurrent) {\r\n            var index = this.index++;\r\n            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);\r\n            var destination = this.destination;\r\n            if (ish === errorObject_1.errorObject) {\r\n                destination.error(errorObject_1.errorObject.e);\r\n            }\r\n            else {\r\n                this.active++;\r\n                this._innerSub(ish, value, index);\r\n            }\r\n        }\r\n        else {\r\n            this.buffer.push(value);\r\n        }\r\n    };\r\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\r\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\r\n    };\r\n    MergeScanSubscriber.prototype._complete = function () {\r\n        this.hasCompleted = true;\r\n        if (this.active === 0 && this.buffer.length === 0) {\r\n            if (this.hasValue === false) {\r\n                this.destination.next(this.acc);\r\n            }\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        var destination = this.destination;\r\n        this.acc = innerValue;\r\n        this.hasValue = true;\r\n        destination.next(innerValue);\r\n    };\r\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        var buffer = this.buffer;\r\n        this.remove(innerSub);\r\n        this.active--;\r\n        if (buffer.length > 0) {\r\n            this._next(buffer.shift());\r\n        }\r\n        else if (this.active === 0 && this.hasCompleted) {\r\n            if (this.hasValue === false) {\r\n                this.destination.next(this.acc);\r\n            }\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return MergeScanSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\nexports.MergeScanSubscriber = MergeScanSubscriber;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}