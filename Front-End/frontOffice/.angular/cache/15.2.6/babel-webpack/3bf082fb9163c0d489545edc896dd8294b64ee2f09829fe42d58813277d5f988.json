{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\r\n * Buffers the source Observable values until the size hits the maximum\r\n * `bufferSize` given.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array, and emits\r\n * that array only when its size reaches `bufferSize`.</span>\r\n *\r\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\r\n *\r\n * Buffers a number of values from the source Observable by `bufferSize` then\r\n * emits the buffer and clears it, and starts a new buffer each\r\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\r\n * `null`, then new buffers are started immediately at the start of the source\r\n * and when each buffer closes and is emitted.\r\n *\r\n * @example <caption>Emit the last two click events as an array</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var buffered = clicks.bufferCount(2);\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>On every click, emit the last two click events as an array</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var buffered = clicks.bufferCount(2, 1);\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferToggle}\r\n * @see {@link bufferWhen}\r\n * @see {@link pairwise}\r\n * @see {@link windowCount}\r\n *\r\n * @param {number} bufferSize The maximum size of the buffer emitted.\r\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\r\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\r\n * on every other value from the source. A new buffer is started at the\r\n * beginning of the source by default.\r\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\r\n * @method bufferCount\r\n * @owner Observable\r\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n  if (startBufferEvery === void 0) {\n    startBufferEvery = null;\n  }\n  return function bufferCountOperatorFunction(source) {\n    return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n  };\n}\nexports.bufferCount = bufferCount;\nvar BufferCountOperator = function () {\n  function BufferCountOperator(bufferSize, startBufferEvery) {\n    this.bufferSize = bufferSize;\n    this.startBufferEvery = startBufferEvery;\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n  BufferCountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  };\n  return BufferCountOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar BufferCountSubscriber = function (_super) {\n  __extends(BufferCountSubscriber, _super);\n  function BufferCountSubscriber(destination, bufferSize) {\n    _super.call(this, destination);\n    this.bufferSize = bufferSize;\n    this.buffer = [];\n  }\n  BufferCountSubscriber.prototype._next = function (value) {\n    var buffer = this.buffer;\n    buffer.push(value);\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  };\n  BufferCountSubscriber.prototype._complete = function () {\n    var buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    _super.prototype._complete.call(this);\n  };\n  return BufferCountSubscriber;\n}(Subscriber_1.Subscriber);\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar BufferSkipCountSubscriber = function (_super) {\n  __extends(BufferSkipCountSubscriber, _super);\n  function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n    _super.call(this, destination);\n    this.bufferSize = bufferSize;\n    this.startBufferEvery = startBufferEvery;\n    this.buffers = [];\n    this.count = 0;\n  }\n  BufferSkipCountSubscriber.prototype._next = function (value) {\n    var _a = this,\n      bufferSize = _a.bufferSize,\n      startBufferEvery = _a.startBufferEvery,\n      buffers = _a.buffers,\n      count = _a.count;\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n    for (var i = buffers.length; i--;) {\n      var buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  };\n  BufferSkipCountSubscriber.prototype._complete = function () {\n    var _a = this,\n      buffers = _a.buffers,\n      destination = _a.destination;\n    while (buffers.length > 0) {\n      var buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    _super.prototype._complete.call(this);\n  };\n  return BufferSkipCountSubscriber;\n}(Subscriber_1.Subscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","bufferCount","bufferSize","startBufferEvery","bufferCountOperatorFunction","source","lift","BufferCountOperator","exports","subscriberClass","BufferCountSubscriber","BufferSkipCountSubscriber","call","subscriber","subscribe","_super","destination","buffer","_next","value","push","length","next","_complete","Subscriber","buffers","count","_a","i","splice","shift"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/bufferCount.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Buffers the source Observable values until the size hits the maximum\r\n * `bufferSize` given.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array, and emits\r\n * that array only when its size reaches `bufferSize`.</span>\r\n *\r\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\r\n *\r\n * Buffers a number of values from the source Observable by `bufferSize` then\r\n * emits the buffer and clears it, and starts a new buffer each\r\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\r\n * `null`, then new buffers are started immediately at the start of the source\r\n * and when each buffer closes and is emitted.\r\n *\r\n * @example <caption>Emit the last two click events as an array</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var buffered = clicks.bufferCount(2);\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>On every click, emit the last two click events as an array</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var buffered = clicks.bufferCount(2, 1);\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferToggle}\r\n * @see {@link bufferWhen}\r\n * @see {@link pairwise}\r\n * @see {@link windowCount}\r\n *\r\n * @param {number} bufferSize The maximum size of the buffer emitted.\r\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\r\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\r\n * on every other value from the source. A new buffer is started at the\r\n * beginning of the source by default.\r\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\r\n * @method bufferCount\r\n * @owner Observable\r\n */\r\nfunction bufferCount(bufferSize, startBufferEvery) {\r\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\r\n    return function bufferCountOperatorFunction(source) {\r\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\r\n    };\r\n}\r\nexports.bufferCount = bufferCount;\r\nvar BufferCountOperator = (function () {\r\n    function BufferCountOperator(bufferSize, startBufferEvery) {\r\n        this.bufferSize = bufferSize;\r\n        this.startBufferEvery = startBufferEvery;\r\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\r\n            this.subscriberClass = BufferCountSubscriber;\r\n        }\r\n        else {\r\n            this.subscriberClass = BufferSkipCountSubscriber;\r\n        }\r\n    }\r\n    BufferCountOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\r\n    };\r\n    return BufferCountOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar BufferCountSubscriber = (function (_super) {\r\n    __extends(BufferCountSubscriber, _super);\r\n    function BufferCountSubscriber(destination, bufferSize) {\r\n        _super.call(this, destination);\r\n        this.bufferSize = bufferSize;\r\n        this.buffer = [];\r\n    }\r\n    BufferCountSubscriber.prototype._next = function (value) {\r\n        var buffer = this.buffer;\r\n        buffer.push(value);\r\n        if (buffer.length == this.bufferSize) {\r\n            this.destination.next(buffer);\r\n            this.buffer = [];\r\n        }\r\n    };\r\n    BufferCountSubscriber.prototype._complete = function () {\r\n        var buffer = this.buffer;\r\n        if (buffer.length > 0) {\r\n            this.destination.next(buffer);\r\n        }\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    return BufferCountSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar BufferSkipCountSubscriber = (function (_super) {\r\n    __extends(BufferSkipCountSubscriber, _super);\r\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\r\n        _super.call(this, destination);\r\n        this.bufferSize = bufferSize;\r\n        this.startBufferEvery = startBufferEvery;\r\n        this.buffers = [];\r\n        this.count = 0;\r\n    }\r\n    BufferSkipCountSubscriber.prototype._next = function (value) {\r\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\r\n        this.count++;\r\n        if (count % startBufferEvery === 0) {\r\n            buffers.push([]);\r\n        }\r\n        for (var i = buffers.length; i--;) {\r\n            var buffer = buffers[i];\r\n            buffer.push(value);\r\n            if (buffer.length === bufferSize) {\r\n                buffers.splice(i, 1);\r\n                this.destination.next(buffer);\r\n            }\r\n        }\r\n    };\r\n    BufferSkipCountSubscriber.prototype._complete = function () {\r\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\r\n        while (buffers.length > 0) {\r\n            var buffer = buffers.shift();\r\n            if (buffer.length > 0) {\r\n                destination.next(buffer);\r\n            }\r\n        }\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    return BufferSkipCountSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}