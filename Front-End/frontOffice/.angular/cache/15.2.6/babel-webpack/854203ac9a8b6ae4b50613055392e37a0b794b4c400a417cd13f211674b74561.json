{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../shared/components/breadcrumb/breadcrumb.component\";\nexport class ContactComponent {\n  constructor() {}\n  ngOnInit() {}\n}\nContactComponent.ɵfac = function ContactComponent_Factory(t) {\n  return new (t || ContactComponent)();\n};\nContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactComponent,\n  selectors: [[\"app-contact\"]],\n  decls: 7,\n  vars: 2,\n  consts: [[3, \"title\", \"breadcrumb\"], [\"id\", \"map\"]],\n  template: function ContactComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-breadcrumb\", 0);\n      i0.ɵɵelementStart(1, \"html\")(2, \"head\")(3, \"title\");\n      i0.ɵɵtext(4, \"Geolocation\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"body\");\n      i0.ɵɵelement(6, \"div\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"title\", \"Contact\")(\"breadcrumb\", \"Contact\");\n    }\n  },\n  dependencies: [i1.BreadcrumbComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"#map[_ngcontent-%COMP%] {\\n            height: 100%;\\n        }\\n\\n        \\n        html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n            height: 100%;\\n            margin: 0;\\n            padding: 0;\\n        }\\n\\n        .custom-map-control-button[_ngcontent-%COMP%] {\\n            background-color: #fff;\\n            border: 0;\\n            border-radius: 2px;\\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\\n            margin: 10px;\\n            padding: 0 0.5em;\\n            font: 400 18px Roboto, Arial, sans-serif;\\n            overflow: hidden;\\n            height: 40px;\\n            cursor: pointer;\\n        }\\n        .custom-map-control-button[_ngcontent-%COMP%]:hover {\\n            background: rgb(235, 235, 235);\\n        }\"]\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,eAAe;EAEfC,QAAQ,IAAU;;AAJPF,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP7BC,oCAA8E;MAO9EA,4BAAM;MAwCKA,2BAAW;MAAAA,iBAAQ;MAoE9BA,4BAAM;MACNA,yBAAoB;MAKpBA,iBAAO;;;MAzHSA,iCAAmB","names":["ContactComponent","constructor","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\pages\\account\\contact\\contact.component.ts","C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\pages\\account\\contact\\contact.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<app-breadcrumb [title]=\"'Contact'\" [breadcrumb]=\"'Contact'\"></app-breadcrumb>\r\n<!DOCTYPE html>\r\n<!--\r\n @license\r\n Copyright 2019 Google LLC. All Rights Reserved.\r\n SPDX-License-Identifier: Apache-2.0\r\n-->\r\n<html>\r\n<head>\r\n    <style>\r\n        /**\r\n         * @license\r\n         * Copyright 2019 Google LLC. All Rights Reserved.\r\n         * SPDX-License-Identifier: Apache-2.0\r\n         */\r\n        /**\r\n         * Always set the map height explicitly to define the size of the div element\r\n         * that contains the map.\r\n         */\r\n        #map {\r\n            height: 100%;\r\n        }\r\n\r\n        /* Optional: Makes the sample page fill the window. */\r\n        html,\r\n        body {\r\n            height: 100%;\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n\r\n        .custom-map-control-button {\r\n            background-color: #fff;\r\n            border: 0;\r\n            border-radius: 2px;\r\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\r\n            margin: 10px;\r\n            padding: 0 0.5em;\r\n            font: 400 18px Roboto, Arial, sans-serif;\r\n            overflow: hidden;\r\n            height: 40px;\r\n            cursor: pointer;\r\n        }\r\n        .custom-map-control-button:hover {\r\n            background: rgb(235, 235, 235);\r\n        }\r\n    </style>\r\n    <title>Geolocation</title>\r\n    <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\r\n\r\n    <script>\r\n        /**\r\n         * @license\r\n         * Copyright 2019 Google LLC. All Rights Reserved.\r\n         * SPDX-License-Identifier: Apache-2.0\r\n         */\r\n            // Note: This example requires that you consent to location sharing when\r\n            // prompted by your browser. If you see the error \"The Geolocation service\r\n            // failed.\", it means you probably did not give permission for the browser to\r\n            // locate you.\r\n        let map, infoWindow;\r\n\r\n        function initMap() {\r\n            map = new google.maps.Map(document.getElementById(\"map\"), {\r\n                center: { lat: -34.397, lng: 150.644 },\r\n                zoom: 6,\r\n            });\r\n            infoWindow = new google.maps.InfoWindow();\r\n\r\n            const locationButton = document.createElement(\"button\");\r\n\r\n            locationButton.textContent = \"Pan to Current Location\";\r\n            locationButton.classList.add(\"custom-map-control-button\");\r\n            map.controls[google.maps.ControlPosition.TOP_CENTER].push(\r\n                locationButton\r\n            );\r\n            locationButton.addEventListener(\"click\", () => {\r\n                // Try HTML5 geolocation.\r\n                if (navigator.geolocation) {\r\n                    navigator.geolocation.getCurrentPosition(\r\n                        (position) => {\r\n                            const pos = {\r\n                                lat: position.coords.latitude,\r\n                                lng: position.coords.longitude,\r\n                            };\r\n\r\n                            infoWindow.setPosition(pos);\r\n                            infoWindow.setContent(\"Location found.\");\r\n                            infoWindow.open(map);\r\n                            map.setCenter(pos);\r\n                        },\r\n                        () => {\r\n                            handleLocationError(true, infoWindow, map.getCenter());\r\n                        }\r\n                    );\r\n                } else {\r\n                    // Browser doesn't support Geolocation\r\n                    handleLocationError(false, infoWindow, map.getCenter());\r\n                }\r\n            });\r\n        }\r\n\r\n        function handleLocationError(browserHasGeolocation, infoWindow, pos) {\r\n            infoWindow.setPosition(pos);\r\n            infoWindow.setContent(\r\n                browserHasGeolocation\r\n                    ? \"Error: The Geolocation service failed.\"\r\n                    : \"Error: Your browser doesn't support geolocation.\"\r\n            );\r\n            infoWindow.open(map);\r\n        }\r\n\r\n        window.initMap = initMap;\r\n    </script>\r\n</head>\r\n<body>\r\n<div id=\"map\"></div>\r\n<script\r\n        src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDv6NZftLo91TkC4GYHFyJfGW3Y_5q_j1s&callback=initMap&v=weekly\"\r\n        defer\r\n></script>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}