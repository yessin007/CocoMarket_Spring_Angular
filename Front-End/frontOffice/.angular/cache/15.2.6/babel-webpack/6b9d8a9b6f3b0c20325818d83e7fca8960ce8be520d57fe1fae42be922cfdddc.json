{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\r\n * Delays the emission of items from the source Observable by a given timeout or\r\n * until a given Date.\r\n *\r\n * <span class=\"informal\">Time shifts each item by some specified amount of\r\n * milliseconds.</span>\r\n *\r\n * <img src=\"./img/delay.png\" width=\"100%\">\r\n *\r\n * If the delay argument is a Number, this operator time shifts the source\r\n * Observable by that amount of time expressed in milliseconds. The relative\r\n * time intervals between the values are preserved.\r\n *\r\n * If the delay argument is a Date, this operator time shifts the start of the\r\n * Observable execution until the given date occurs.\r\n *\r\n * @example <caption>Delay each click by one second</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\r\n * delayedClicks.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>Delay all clicks until a future date happens</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\r\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\r\n * delayedClicks.subscribe(x => console.log(x));\r\n *\r\n * @see {@link debounceTime}\r\n * @see {@link delayWhen}\r\n *\r\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\r\n * a `Date` until which the emission of the source items is delayed.\r\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\r\n * managing the timers that handle the time-shift for each item.\r\n * @return {Observable} An Observable that delays the emissions of the source\r\n * Observable by the specified timeout or Date.\r\n * @method delay\r\n * @owner Observable\r\n */\nfunction delay(delay, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async_1.async;\n  }\n  var absoluteDelay = isDate_1.isDate(delay);\n  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);\n  return function (source) {\n    return source.lift(new DelayOperator(delayFor, scheduler));\n  };\n}\nexports.delay = delay;\nvar DelayOperator = function () {\n  function DelayOperator(delay, scheduler) {\n    this.delay = delay;\n    this.scheduler = scheduler;\n  }\n  DelayOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  };\n  return DelayOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar DelaySubscriber = function (_super) {\n  __extends(DelaySubscriber, _super);\n  function DelaySubscriber(destination, delay, scheduler) {\n    _super.call(this, destination);\n    this.delay = delay;\n    this.scheduler = scheduler;\n    this.queue = [];\n    this.active = false;\n    this.errored = false;\n  }\n  DelaySubscriber.dispatch = function (state) {\n    var source = state.source;\n    var queue = source.queue;\n    var scheduler = state.scheduler;\n    var destination = state.destination;\n    while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n    if (queue.length > 0) {\n      var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay_1);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  };\n  DelaySubscriber.prototype._schedule = function (scheduler) {\n    this.active = true;\n    this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n      source: this,\n      destination: this.destination,\n      scheduler: scheduler\n    }));\n  };\n  DelaySubscriber.prototype.scheduleNotification = function (notification) {\n    if (this.errored === true) {\n      return;\n    }\n    var scheduler = this.scheduler;\n    var message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  };\n  DelaySubscriber.prototype._next = function (value) {\n    this.scheduleNotification(Notification_1.Notification.createNext(value));\n  };\n  DelaySubscriber.prototype._error = function (err) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n  };\n  DelaySubscriber.prototype._complete = function () {\n    this.scheduleNotification(Notification_1.Notification.createComplete());\n  };\n  return DelaySubscriber;\n}(Subscriber_1.Subscriber);\nvar DelayMessage = function () {\n  function DelayMessage(time, notification) {\n    this.time = time;\n    this.notification = notification;\n  }\n  return DelayMessage;\n}();","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","async_1","require","isDate_1","Subscriber_1","Notification_1","delay","scheduler","async","absoluteDelay","isDate","delayFor","now","Math","abs","source","lift","DelayOperator","exports","call","subscriber","subscribe","DelaySubscriber","_super","destination","queue","active","errored","dispatch","state","length","time","shift","notification","observe","delay_1","max","schedule","unsubscribe","_schedule","add","scheduleNotification","message","DelayMessage","push","_next","value","Notification","createNext","_error","err","error","_complete","createComplete","Subscriber"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/delay.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar async_1 = require('../scheduler/async');\r\nvar isDate_1 = require('../util/isDate');\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Notification_1 = require('../Notification');\r\n/**\r\n * Delays the emission of items from the source Observable by a given timeout or\r\n * until a given Date.\r\n *\r\n * <span class=\"informal\">Time shifts each item by some specified amount of\r\n * milliseconds.</span>\r\n *\r\n * <img src=\"./img/delay.png\" width=\"100%\">\r\n *\r\n * If the delay argument is a Number, this operator time shifts the source\r\n * Observable by that amount of time expressed in milliseconds. The relative\r\n * time intervals between the values are preserved.\r\n *\r\n * If the delay argument is a Date, this operator time shifts the start of the\r\n * Observable execution until the given date occurs.\r\n *\r\n * @example <caption>Delay each click by one second</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\r\n * delayedClicks.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>Delay all clicks until a future date happens</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\r\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\r\n * delayedClicks.subscribe(x => console.log(x));\r\n *\r\n * @see {@link debounceTime}\r\n * @see {@link delayWhen}\r\n *\r\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\r\n * a `Date` until which the emission of the source items is delayed.\r\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\r\n * managing the timers that handle the time-shift for each item.\r\n * @return {Observable} An Observable that delays the emissions of the source\r\n * Observable by the specified timeout or Date.\r\n * @method delay\r\n * @owner Observable\r\n */\r\nfunction delay(delay, scheduler) {\r\n    if (scheduler === void 0) { scheduler = async_1.async; }\r\n    var absoluteDelay = isDate_1.isDate(delay);\r\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\r\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\r\n}\r\nexports.delay = delay;\r\nvar DelayOperator = (function () {\r\n    function DelayOperator(delay, scheduler) {\r\n        this.delay = delay;\r\n        this.scheduler = scheduler;\r\n    }\r\n    DelayOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\r\n    };\r\n    return DelayOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar DelaySubscriber = (function (_super) {\r\n    __extends(DelaySubscriber, _super);\r\n    function DelaySubscriber(destination, delay, scheduler) {\r\n        _super.call(this, destination);\r\n        this.delay = delay;\r\n        this.scheduler = scheduler;\r\n        this.queue = [];\r\n        this.active = false;\r\n        this.errored = false;\r\n    }\r\n    DelaySubscriber.dispatch = function (state) {\r\n        var source = state.source;\r\n        var queue = source.queue;\r\n        var scheduler = state.scheduler;\r\n        var destination = state.destination;\r\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\r\n            queue.shift().notification.observe(destination);\r\n        }\r\n        if (queue.length > 0) {\r\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\r\n            this.schedule(state, delay_1);\r\n        }\r\n        else {\r\n            this.unsubscribe();\r\n            source.active = false;\r\n        }\r\n    };\r\n    DelaySubscriber.prototype._schedule = function (scheduler) {\r\n        this.active = true;\r\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\r\n            source: this, destination: this.destination, scheduler: scheduler\r\n        }));\r\n    };\r\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\r\n        if (this.errored === true) {\r\n            return;\r\n        }\r\n        var scheduler = this.scheduler;\r\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\r\n        this.queue.push(message);\r\n        if (this.active === false) {\r\n            this._schedule(scheduler);\r\n        }\r\n    };\r\n    DelaySubscriber.prototype._next = function (value) {\r\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\r\n    };\r\n    DelaySubscriber.prototype._error = function (err) {\r\n        this.errored = true;\r\n        this.queue = [];\r\n        this.destination.error(err);\r\n    };\r\n    DelaySubscriber.prototype._complete = function () {\r\n        this.scheduleNotification(Notification_1.Notification.createComplete());\r\n    };\r\n    return DelaySubscriber;\r\n}(Subscriber_1.Subscriber));\r\nvar DelayMessage = (function () {\r\n    function DelayMessage(time, notification) {\r\n        this.time = time;\r\n        this.notification = notification;\r\n    }\r\n    return DelayMessage;\r\n}());\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}