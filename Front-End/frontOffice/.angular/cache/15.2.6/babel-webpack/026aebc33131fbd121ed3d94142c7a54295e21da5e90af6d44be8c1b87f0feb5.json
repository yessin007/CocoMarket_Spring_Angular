{"ast":null,"code":"import { Subject, of, Observable, ReplaySubject, never, empty } from 'rxjs';\nimport { filter, tap, take, mergeMap, map, catchError, switchMap, startWith, sampleTime, share } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, NgModule } from '@angular/core';\nfunction getNavigator() {\n  return typeof window !== 'undefined' ? window.navigator : undefined;\n}\nfunction isChildOfPicture(element) {\n  return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\n}\nfunction isImageElement(element) {\n  return element.nodeName.toLowerCase() === 'img';\n}\nfunction setImage(element, imagePath, useSrcset) {\n  if (isImageElement(element)) {\n    if (useSrcset && 'srcset' in element) {\n      element.srcset = imagePath;\n    } else {\n      element.src = imagePath;\n    }\n  } else {\n    element.style.backgroundImage = `url('${imagePath}')`;\n  }\n  return element;\n}\nfunction setSources(attrName) {\n  return image => {\n    const sources = image.parentElement.getElementsByTagName('source');\n    for (let i = 0; i < sources.length; i++) {\n      const attrValue = sources[i].getAttribute(attrName);\n      if (attrValue) {\n        // Check if `srcset` is supported by the current browser\n        if ('srcset' in sources[i]) {\n          sources[i].srcset = attrValue;\n        } else {\n          sources[i].src = attrValue;\n        }\n      }\n    }\n  };\n}\nconst setSourcesToDefault = setSources('defaultImage');\nconst setSourcesToLazy = setSources('lazyLoad');\nconst setSourcesToError = setSources('errorImage');\nfunction setImageAndSources(setSourcesFn) {\n  return (element, imagePath, useSrcset) => {\n    if (isImageElement(element) && isChildOfPicture(element)) {\n      setSourcesFn(element);\n    }\n    if (imagePath) {\n      setImage(element, imagePath, useSrcset);\n    }\n  };\n}\nconst setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\nconst setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\nconst setImageAndSourcesToError = setImageAndSources(setSourcesToError);\nclass Hooks {\n  constructor() {\n    this.navigator = getNavigator();\n  }\n  setPlatformId(platformId) {\n    this.platformId = platformId;\n  }\n  onDestroy(attributes) {}\n  onAttributeChange(newAttributes) {}\n}\nconst cssClassNames = {\n  loaded: 'ng-lazyloaded',\n  loading: 'ng-lazyloading',\n  failed: 'ng-failed-lazyloaded'\n};\nfunction removeCssClassName(element, cssClassName) {\n  element.className = element.className.replace(cssClassName, '');\n}\nfunction addCssClassName(element, cssClassName) {\n  if (!element.className.includes(cssClassName)) {\n    element.className += ` ${cssClassName}`;\n  }\n}\nfunction hasCssClassName(element, cssClassName) {\n  return element.className && element.className.includes(cssClassName);\n}\nclass SharedHooks extends Hooks {\n  setup(attributes) {\n    setImageAndSourcesToDefault(attributes.element, attributes.defaultImagePath, attributes.useSrcset);\n    if (attributes.imagePath) {\n      addCssClassName(attributes.element, cssClassNames.loading);\n    }\n    if (hasCssClassName(attributes.element, cssClassNames.loaded)) {\n      removeCssClassName(attributes.element, cssClassNames.loaded);\n    }\n  }\n  finally(attributes) {\n    addCssClassName(attributes.element, cssClassNames.loaded);\n    removeCssClassName(attributes.element, cssClassNames.loading);\n  }\n  loadImage(attributes) {\n    if (this.skipLazyLoading(attributes)) {\n      // Set the image right away for bots for better SEO\n      return [attributes.imagePath];\n    }\n    const {\n      element,\n      useSrcset,\n      imagePath,\n      decode\n    } = attributes;\n    let img;\n    if (isImageElement(element) && isChildOfPicture(element)) {\n      const parentClone = element.parentNode.cloneNode(true);\n      img = parentClone.getElementsByTagName('img')[0];\n      setSourcesToLazy(img);\n      setImage(img, imagePath, useSrcset);\n    } else {\n      img = new Image();\n      if (isImageElement(element) && element.referrerPolicy) {\n        img.referrerPolicy = element.referrerPolicy;\n      }\n      if (isImageElement(element) && element.sizes) {\n        img.sizes = element.sizes;\n      }\n      if (useSrcset && 'srcset' in img) {\n        img.srcset = imagePath;\n      } else {\n        img.src = imagePath;\n      }\n    }\n    if (decode && img.decode) {\n      return img.decode().then(() => imagePath);\n    }\n    return new Promise((resolve, reject) => {\n      img.onload = () => resolve(imagePath);\n      img.onerror = () => reject(null);\n    });\n  }\n  setErrorImage(error, attributes) {\n    const {\n      element,\n      useSrcset,\n      errorImagePath\n    } = attributes;\n    setImageAndSourcesToError(element, errorImagePath, useSrcset);\n    addCssClassName(element, cssClassNames.failed);\n  }\n  setLoadedImage(imagePath, attributes) {\n    const {\n      element,\n      useSrcset\n    } = attributes;\n    setImageAndSourcesToLazy(element, imagePath, useSrcset);\n  }\n  isDisabled() {\n    // Disable if SSR and the user isn't a bot\n    return isPlatformServer(this.platformId) && !this.isBot();\n  }\n  skipLazyLoading(attributes) {\n    return this.isBot(attributes);\n  }\n  isBot(attributes) {\n    if (this.navigator?.userAgent) {\n      return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot|prerender/i.test(this.navigator.userAgent);\n    }\n    return false;\n  }\n}\nclass IntersectionObserverHooks extends SharedHooks {\n  constructor() {\n    super(...arguments);\n    this.observers = new WeakMap();\n    this.intersectionSubject = new Subject();\n    this.uniqKey = {};\n  }\n  getObservable(attributes) {\n    if (this.skipLazyLoading(attributes)) {\n      return of({\n        isIntersecting: true\n      });\n    }\n    if (attributes.customObservable) {\n      return attributes.customObservable;\n    }\n    const scrollContainerKey = attributes.scrollContainer || this.uniqKey;\n    const options = {\n      root: attributes.scrollContainer || null\n    };\n    if (attributes.offset) {\n      options.rootMargin = `${attributes.offset}px`;\n    }\n    let observer = this.observers.get(scrollContainerKey);\n    if (!observer) {\n      observer = new IntersectionObserver(entrys => this.loadingCallback(entrys), options);\n      this.observers.set(scrollContainerKey, observer);\n    }\n    observer.observe(attributes.element);\n    return Observable.create(obs => {\n      const subscription = this.intersectionSubject.pipe(filter(entry => entry.target === attributes.element)).subscribe(obs);\n      return () => {\n        subscription.unsubscribe();\n        observer.unobserve(attributes.element);\n      };\n    });\n  }\n  isVisible(event) {\n    return event.isIntersecting;\n  }\n  loadingCallback(entrys) {\n    entrys.forEach(entry => this.intersectionSubject.next(entry));\n  }\n}\nfunction lazyLoadImage(hooks, attributes) {\n  return evntObservable => {\n    return evntObservable.pipe(tap(data => attributes.onStateChange.emit({\n      reason: 'observer-emit',\n      data\n    })), filter(event => hooks.isVisible(event, attributes)), take(1), tap(() => attributes.onStateChange.emit({\n      reason: 'start-loading'\n    })), mergeMap(() => hooks.loadImage(attributes)), tap(() => attributes.onStateChange.emit({\n      reason: 'mount-image'\n    })), tap(imagePath => hooks.setLoadedImage(imagePath, attributes)), tap(() => attributes.onStateChange.emit({\n      reason: 'loading-succeeded'\n    })), map(() => true), catchError(error => {\n      attributes.onStateChange.emit({\n        reason: 'loading-failed',\n        data: error\n      });\n      hooks.setErrorImage(error, attributes);\n      return of(false);\n    }), tap(() => {\n      attributes.onStateChange.emit({\n        reason: 'finally'\n      });\n      hooks.finally(attributes);\n    }));\n  };\n}\nconst LAZYLOAD_IMAGE_HOOKS = new InjectionToken('LazyLoadImageHooks');\nclass LazyLoadImageDirective {\n  constructor(el, ngZone, platformId, hooks) {\n    this.onStateChange = new EventEmitter(); // Emits an event on every state change\n    this.elementRef = el;\n    this.ngZone = ngZone;\n    this.propertyChanges$ = new ReplaySubject();\n    this.hooks = hooks;\n    this.hooks.setPlatformId(platformId);\n    this.uid = Math.random().toString(36).substr(2, 9);\n  }\n  ngOnChanges() {\n    if (this.debug === true && !this.debugSubscription) {\n      this.debugSubscription = this.onStateChange.subscribe(e => console.log(e));\n    }\n    this.propertyChanges$.next({\n      element: this.elementRef.nativeElement,\n      imagePath: this.lazyImage,\n      defaultImagePath: this.defaultImage,\n      errorImagePath: this.errorImage,\n      useSrcset: this.useSrcset,\n      offset: this.offset ? this.offset | 0 : 0,\n      scrollContainer: this.scrollTarget,\n      customObservable: this.customObservable,\n      decode: this.decode,\n      onStateChange: this.onStateChange,\n      id: this.uid\n    });\n  }\n  ngAfterContentInit() {\n    if (this.hooks.isDisabled()) {\n      return null;\n    }\n    this.ngZone.runOutsideAngular(() => {\n      this.loadSubscription = this.propertyChanges$.pipe(tap(attributes => this.hooks.onAttributeChange(attributes)), tap(attributes => attributes.onStateChange.emit({\n        reason: 'setup'\n      })), tap(attributes => this.hooks.setup(attributes)), switchMap(attributes => {\n        if (!attributes.imagePath) {\n          return never();\n        }\n        return this.hooks.getObservable(attributes).pipe(lazyLoadImage(this.hooks, attributes));\n      })).subscribe({\n        next: () => null\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.propertyChanges$.pipe(take(1)).subscribe({\n      next: attributes => this.hooks.onDestroy(attributes)\n    }).unsubscribe();\n    this.loadSubscription?.unsubscribe();\n    this.debugSubscription?.unsubscribe();\n  }\n}\nLazyLoadImageDirective.ɵfac = function LazyLoadImageDirective_Factory(t) {\n  return new (t || LazyLoadImageDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(LAZYLOAD_IMAGE_HOOKS));\n};\nLazyLoadImageDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LazyLoadImageDirective,\n  selectors: [[\"\", \"lazyLoad\", \"\"]],\n  inputs: {\n    lazyImage: [\"lazyLoad\", \"lazyImage\"],\n    defaultImage: \"defaultImage\",\n    errorImage: \"errorImage\",\n    scrollTarget: \"scrollTarget\",\n    customObservable: \"customObservable\",\n    offset: \"offset\",\n    useSrcset: \"useSrcset\",\n    decode: \"decode\",\n    debug: \"debug\"\n  },\n  outputs: {\n    onStateChange: \"onStateChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyLoadImageDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lazyLoad]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Hooks,\n      decorators: [{\n        type: Inject,\n        args: [LAZYLOAD_IMAGE_HOOKS]\n      }]\n    }];\n  }, {\n    lazyImage: [{\n      type: Input,\n      args: ['lazyLoad']\n    }],\n    defaultImage: [{\n      type: Input\n    }],\n    errorImage: [{\n      type: Input\n    }],\n    scrollTarget: [{\n      type: Input\n    }],\n    customObservable: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    useSrcset: [{\n      type: Input\n    }],\n    decode: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    onStateChange: [{\n      type: Output\n    }]\n  });\n})();\nclass LazyLoadImageModule {}\nLazyLoadImageModule.ɵfac = function LazyLoadImageModule_Factory(t) {\n  return new (t || LazyLoadImageModule)();\n};\nLazyLoadImageModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LazyLoadImageModule\n});\nLazyLoadImageModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: LAZYLOAD_IMAGE_HOOKS,\n    useClass: IntersectionObserverHooks\n  }]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyLoadImageModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [LazyLoadImageDirective],\n      exports: [LazyLoadImageDirective],\n      providers: [{\n        provide: LAZYLOAD_IMAGE_HOOKS,\n        useClass: IntersectionObserverHooks\n      }]\n    }]\n  }], null, null);\n})();\nclass Rect {\n  constructor(left, top, right, bottom) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n  static fromElement(element) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = element.getBoundingClientRect();\n    if (left === 0 && top === 0 && right === 0 && bottom === 0) {\n      return Rect.empty;\n    } else {\n      return new Rect(left, top, right, bottom);\n    }\n  }\n  static fromWindow(_window) {\n    return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\n  }\n  inflate(inflateBy) {\n    this.left -= inflateBy;\n    this.top -= inflateBy;\n    this.right += inflateBy;\n    this.bottom += inflateBy;\n  }\n  intersectsWith(rect) {\n    return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\n  }\n  getIntersectionWith(rect) {\n    const left = Math.max(this.left, rect.left);\n    const top = Math.max(this.top, rect.top);\n    const right = Math.min(this.right, rect.right);\n    const bottom = Math.min(this.bottom, rect.bottom);\n    if (right >= left && bottom >= top) {\n      return new Rect(left, top, right, bottom);\n    } else {\n      return Rect.empty;\n    }\n  }\n}\nRect.empty = new Rect(0, 0, 0, 0);\nclass ScrollHooks extends SharedHooks {\n  constructor() {\n    super(...arguments);\n    this.getWindow = () => window;\n    this.scrollListeners = new WeakMap();\n    // Only create one scroll listener per target and share the observable.\n    // Typical, there will only be one observable per application\n    this.getScrollListener = scrollTarget => {\n      if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\n        console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\n        return empty();\n      }\n      const scrollListener = this.scrollListeners.get(scrollTarget);\n      if (scrollListener) {\n        return scrollListener;\n      }\n      const srollEvent = Observable.create(observer => {\n        const eventName = 'scroll';\n        const handler = event => observer.next(event);\n        const options = {\n          passive: true,\n          capture: false\n        };\n        scrollTarget.addEventListener(eventName, handler, options);\n        return () => scrollTarget.removeEventListener(eventName, handler, options);\n      });\n      const listener = this.sampleObservable(srollEvent);\n      this.scrollListeners.set(scrollTarget, listener);\n      return listener;\n    };\n  }\n  getObservable(attributes) {\n    if (this.skipLazyLoading(attributes)) {\n      return of('load');\n    } else if (attributes.customObservable) {\n      return attributes.customObservable.pipe(startWith(''));\n    } else if (attributes.scrollContainer) {\n      return this.getScrollListener(attributes.scrollContainer);\n    }\n    return this.getScrollListener(this.getWindow());\n  }\n  isVisible(event, attributes) {\n    const elementBounds = Rect.fromElement(attributes.element);\n    if (elementBounds === Rect.empty) {\n      return false;\n    }\n    const windowBounds = Rect.fromWindow(this.getWindow());\n    elementBounds.inflate(attributes.offset);\n    if (attributes.scrollContainer) {\n      const scrollContainerBounds = Rect.fromElement(attributes.scrollContainer);\n      const intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\n      return elementBounds.intersectsWith(intersection);\n    } else {\n      return elementBounds.intersectsWith(windowBounds);\n    }\n  }\n  sampleObservable(obs, scheduler) {\n    return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\n  }\n}\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { Hooks, IntersectionObserverHooks, LAZYLOAD_IMAGE_HOOKS, LazyLoadImageDirective, LazyLoadImageModule, ScrollHooks, SharedHooks };","map":{"version":3,"names":["Subject","of","Observable","ReplaySubject","never","empty","filter","tap","take","mergeMap","map","catchError","switchMap","startWith","sampleTime","share","isPlatformServer","i0","InjectionToken","EventEmitter","PLATFORM_ID","Directive","Inject","Input","Output","NgModule","getNavigator","window","navigator","undefined","isChildOfPicture","element","Boolean","parentElement","nodeName","toLowerCase","isImageElement","setImage","imagePath","useSrcset","srcset","src","style","backgroundImage","setSources","attrName","image","sources","getElementsByTagName","i","length","attrValue","getAttribute","setSourcesToDefault","setSourcesToLazy","setSourcesToError","setImageAndSources","setSourcesFn","setImageAndSourcesToDefault","setImageAndSourcesToLazy","setImageAndSourcesToError","Hooks","constructor","setPlatformId","platformId","onDestroy","attributes","onAttributeChange","newAttributes","cssClassNames","loaded","loading","failed","removeCssClassName","cssClassName","className","replace","addCssClassName","includes","hasCssClassName","SharedHooks","setup","defaultImagePath","finally","loadImage","skipLazyLoading","decode","img","parentClone","parentNode","cloneNode","Image","referrerPolicy","sizes","then","Promise","resolve","reject","onload","onerror","setErrorImage","error","errorImagePath","setLoadedImage","isDisabled","isBot","userAgent","test","IntersectionObserverHooks","arguments","observers","WeakMap","intersectionSubject","uniqKey","getObservable","isIntersecting","customObservable","scrollContainerKey","scrollContainer","options","root","offset","rootMargin","observer","get","IntersectionObserver","entrys","loadingCallback","set","observe","create","obs","subscription","pipe","entry","target","subscribe","unsubscribe","unobserve","isVisible","event","forEach","next","lazyLoadImage","hooks","evntObservable","data","onStateChange","emit","reason","LAZYLOAD_IMAGE_HOOKS","LazyLoadImageDirective","el","ngZone","elementRef","propertyChanges$","uid","Math","random","toString","substr","ngOnChanges","debug","debugSubscription","e","console","log","nativeElement","lazyImage","defaultImage","errorImage","scrollTarget","id","ngAfterContentInit","runOutsideAngular","loadSubscription","ngOnDestroy","ɵfac","ElementRef","NgZone","ɵdir","type","args","selector","Object","decorators","LazyLoadImageModule","ɵmod","ɵinj","provide","useClass","declarations","exports","providers","Rect","left","top","right","bottom","fromElement","getBoundingClientRect","fromWindow","_window","innerWidth","innerHeight","inflate","inflateBy","intersectsWith","rect","getIntersectionWith","max","min","ScrollHooks","getWindow","scrollListeners","getScrollListener","addEventListener","warn","scrollListener","srollEvent","eventName","handler","passive","capture","removeEventListener","listener","sampleObservable","elementBounds","windowBounds","scrollContainerBounds","intersection","scheduler"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng-lazyload-image/fesm2020/ng-lazyload-image.mjs"],"sourcesContent":["import { Subject, of, Observable, ReplaySubject, never, empty } from 'rxjs';\r\nimport { filter, tap, take, mergeMap, map, catchError, switchMap, startWith, sampleTime, share } from 'rxjs/operators';\r\nimport { isPlatformServer } from '@angular/common';\r\nimport * as i0 from '@angular/core';\r\nimport { InjectionToken, EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, NgModule } from '@angular/core';\r\n\r\nfunction getNavigator() {\r\n    return typeof window !== 'undefined' ? window.navigator : undefined;\r\n}\r\nfunction isChildOfPicture(element) {\r\n    return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\r\n}\r\nfunction isImageElement(element) {\r\n    return element.nodeName.toLowerCase() === 'img';\r\n}\r\nfunction setImage(element, imagePath, useSrcset) {\r\n    if (isImageElement(element)) {\r\n        if (useSrcset && 'srcset' in element) {\r\n            element.srcset = imagePath;\r\n        }\r\n        else {\r\n            element.src = imagePath;\r\n        }\r\n    }\r\n    else {\r\n        element.style.backgroundImage = `url('${imagePath}')`;\r\n    }\r\n    return element;\r\n}\r\nfunction setSources(attrName) {\r\n    return (image) => {\r\n        const sources = image.parentElement.getElementsByTagName('source');\r\n        for (let i = 0; i < sources.length; i++) {\r\n            const attrValue = sources[i].getAttribute(attrName);\r\n            if (attrValue) {\r\n                // Check if `srcset` is supported by the current browser\r\n                if ('srcset' in sources[i]) {\r\n                    sources[i].srcset = attrValue;\r\n                }\r\n                else {\r\n                    sources[i].src = attrValue;\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\nconst setSourcesToDefault = setSources('defaultImage');\r\nconst setSourcesToLazy = setSources('lazyLoad');\r\nconst setSourcesToError = setSources('errorImage');\r\nfunction setImageAndSources(setSourcesFn) {\r\n    return (element, imagePath, useSrcset) => {\r\n        if (isImageElement(element) && isChildOfPicture(element)) {\r\n            setSourcesFn(element);\r\n        }\r\n        if (imagePath) {\r\n            setImage(element, imagePath, useSrcset);\r\n        }\r\n    };\r\n}\r\nconst setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\r\nconst setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\r\nconst setImageAndSourcesToError = setImageAndSources(setSourcesToError);\r\n\r\nclass Hooks {\r\n    constructor() {\r\n        this.navigator = getNavigator();\r\n    }\r\n    setPlatformId(platformId) {\r\n        this.platformId = platformId;\r\n    }\r\n    onDestroy(attributes) { }\r\n    onAttributeChange(newAttributes) { }\r\n}\r\n\r\nconst cssClassNames = {\r\n    loaded: 'ng-lazyloaded',\r\n    loading: 'ng-lazyloading',\r\n    failed: 'ng-failed-lazyloaded',\r\n};\r\nfunction removeCssClassName(element, cssClassName) {\r\n    element.className = element.className.replace(cssClassName, '');\r\n}\r\nfunction addCssClassName(element, cssClassName) {\r\n    if (!element.className.includes(cssClassName)) {\r\n        element.className += ` ${cssClassName}`;\r\n    }\r\n}\r\nfunction hasCssClassName(element, cssClassName) {\r\n    return element.className && element.className.includes(cssClassName);\r\n}\r\n\r\nclass SharedHooks extends Hooks {\r\n    setup(attributes) {\r\n        setImageAndSourcesToDefault(attributes.element, attributes.defaultImagePath, attributes.useSrcset);\r\n        if (attributes.imagePath) {\r\n            addCssClassName(attributes.element, cssClassNames.loading);\r\n        }\r\n        if (hasCssClassName(attributes.element, cssClassNames.loaded)) {\r\n            removeCssClassName(attributes.element, cssClassNames.loaded);\r\n        }\r\n    }\r\n    finally(attributes) {\r\n        addCssClassName(attributes.element, cssClassNames.loaded);\r\n        removeCssClassName(attributes.element, cssClassNames.loading);\r\n    }\r\n    loadImage(attributes) {\r\n        if (this.skipLazyLoading(attributes)) {\r\n            // Set the image right away for bots for better SEO\r\n            return [attributes.imagePath];\r\n        }\r\n        const { element, useSrcset, imagePath, decode } = attributes;\r\n        let img;\r\n        if (isImageElement(element) && isChildOfPicture(element)) {\r\n            const parentClone = element.parentNode.cloneNode(true);\r\n            img = parentClone.getElementsByTagName('img')[0];\r\n            setSourcesToLazy(img);\r\n            setImage(img, imagePath, useSrcset);\r\n        }\r\n        else {\r\n            img = new Image();\r\n            if (isImageElement(element) && element.referrerPolicy) {\r\n                img.referrerPolicy = element.referrerPolicy;\r\n            }\r\n            if (isImageElement(element) && element.sizes) {\r\n                img.sizes = element.sizes;\r\n            }\r\n            if (useSrcset && 'srcset' in img) {\r\n                img.srcset = imagePath;\r\n            }\r\n            else {\r\n                img.src = imagePath;\r\n            }\r\n        }\r\n        if (decode && img.decode) {\r\n            return img.decode().then(() => imagePath);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            img.onload = () => resolve(imagePath);\r\n            img.onerror = () => reject(null);\r\n        });\r\n    }\r\n    setErrorImage(error, attributes) {\r\n        const { element, useSrcset, errorImagePath } = attributes;\r\n        setImageAndSourcesToError(element, errorImagePath, useSrcset);\r\n        addCssClassName(element, cssClassNames.failed);\r\n    }\r\n    setLoadedImage(imagePath, attributes) {\r\n        const { element, useSrcset } = attributes;\r\n        setImageAndSourcesToLazy(element, imagePath, useSrcset);\r\n    }\r\n    isDisabled() {\r\n        // Disable if SSR and the user isn't a bot\r\n        return isPlatformServer(this.platformId) && !this.isBot();\r\n    }\r\n    skipLazyLoading(attributes) {\r\n        return this.isBot(attributes);\r\n    }\r\n    isBot(attributes) {\r\n        if (this.navigator?.userAgent) {\r\n            return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot|prerender/i.test(this.navigator.userAgent);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass IntersectionObserverHooks extends SharedHooks {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.observers = new WeakMap();\r\n        this.intersectionSubject = new Subject();\r\n        this.uniqKey = {};\r\n    }\r\n    getObservable(attributes) {\r\n        if (this.skipLazyLoading(attributes)) {\r\n            return of({ isIntersecting: true });\r\n        }\r\n        if (attributes.customObservable) {\r\n            return attributes.customObservable;\r\n        }\r\n        const scrollContainerKey = attributes.scrollContainer || this.uniqKey;\r\n        const options = {\r\n            root: attributes.scrollContainer || null,\r\n        };\r\n        if (attributes.offset) {\r\n            options.rootMargin = `${attributes.offset}px`;\r\n        }\r\n        let observer = this.observers.get(scrollContainerKey);\r\n        if (!observer) {\r\n            observer = new IntersectionObserver((entrys) => this.loadingCallback(entrys), options);\r\n            this.observers.set(scrollContainerKey, observer);\r\n        }\r\n        observer.observe(attributes.element);\r\n        return Observable.create((obs) => {\r\n            const subscription = this.intersectionSubject.pipe(filter((entry) => entry.target === attributes.element)).subscribe(obs);\r\n            return () => {\r\n                subscription.unsubscribe();\r\n                observer.unobserve(attributes.element);\r\n            };\r\n        });\r\n    }\r\n    isVisible(event) {\r\n        return event.isIntersecting;\r\n    }\r\n    loadingCallback(entrys) {\r\n        entrys.forEach((entry) => this.intersectionSubject.next(entry));\r\n    }\r\n}\r\n\r\nfunction lazyLoadImage(hooks, attributes) {\r\n    return (evntObservable) => {\r\n        return evntObservable.pipe(tap((data) => attributes.onStateChange.emit({ reason: 'observer-emit', data })), filter((event) => hooks.isVisible(event, attributes)), take(1), tap(() => attributes.onStateChange.emit({ reason: 'start-loading' })), mergeMap(() => hooks.loadImage(attributes)), tap(() => attributes.onStateChange.emit({ reason: 'mount-image' })), tap((imagePath) => hooks.setLoadedImage(imagePath, attributes)), tap(() => attributes.onStateChange.emit({ reason: 'loading-succeeded' })), map(() => true), catchError((error) => {\r\n            attributes.onStateChange.emit({ reason: 'loading-failed', data: error });\r\n            hooks.setErrorImage(error, attributes);\r\n            return of(false);\r\n        }), tap(() => {\r\n            attributes.onStateChange.emit({ reason: 'finally' });\r\n            hooks.finally(attributes);\r\n        }));\r\n    };\r\n}\r\n\r\nconst LAZYLOAD_IMAGE_HOOKS = new InjectionToken('LazyLoadImageHooks');\r\n\r\nclass LazyLoadImageDirective {\r\n    constructor(el, ngZone, platformId, hooks) {\r\n        this.onStateChange = new EventEmitter(); // Emits an event on every state change\r\n        this.elementRef = el;\r\n        this.ngZone = ngZone;\r\n        this.propertyChanges$ = new ReplaySubject();\r\n        this.hooks = hooks;\r\n        this.hooks.setPlatformId(platformId);\r\n        this.uid = Math.random().toString(36).substr(2, 9);\r\n    }\r\n    ngOnChanges() {\r\n        if (this.debug === true && !this.debugSubscription) {\r\n            this.debugSubscription = this.onStateChange.subscribe((e) => console.log(e));\r\n        }\r\n        this.propertyChanges$.next({\r\n            element: this.elementRef.nativeElement,\r\n            imagePath: this.lazyImage,\r\n            defaultImagePath: this.defaultImage,\r\n            errorImagePath: this.errorImage,\r\n            useSrcset: this.useSrcset,\r\n            offset: this.offset ? this.offset | 0 : 0,\r\n            scrollContainer: this.scrollTarget,\r\n            customObservable: this.customObservable,\r\n            decode: this.decode,\r\n            onStateChange: this.onStateChange,\r\n            id: this.uid,\r\n        });\r\n    }\r\n    ngAfterContentInit() {\r\n        if (this.hooks.isDisabled()) {\r\n            return null;\r\n        }\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.loadSubscription = this.propertyChanges$\r\n                .pipe(tap((attributes) => this.hooks.onAttributeChange(attributes)), tap((attributes) => attributes.onStateChange.emit({ reason: 'setup' })), tap((attributes) => this.hooks.setup(attributes)), switchMap((attributes) => {\r\n                if (!attributes.imagePath) {\r\n                    return never();\r\n                }\r\n                return this.hooks.getObservable(attributes).pipe(lazyLoadImage(this.hooks, attributes));\r\n            }))\r\n                .subscribe({\r\n                next: () => null,\r\n            });\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.propertyChanges$\r\n            .pipe(take(1))\r\n            .subscribe({ next: (attributes) => this.hooks.onDestroy(attributes) })\r\n            .unsubscribe();\r\n        this.loadSubscription?.unsubscribe();\r\n        this.debugSubscription?.unsubscribe();\r\n    }\r\n}\r\nLazyLoadImageDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }, { token: LAZYLOAD_IMAGE_HOOKS }], target: i0.ɵɵFactoryTarget.Directive });\r\nLazyLoadImageDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: LazyLoadImageDirective, selector: \"[lazyLoad]\", inputs: { lazyImage: [\"lazyLoad\", \"lazyImage\"], defaultImage: \"defaultImage\", errorImage: \"errorImage\", scrollTarget: \"scrollTarget\", customObservable: \"customObservable\", offset: \"offset\", useSrcset: \"useSrcset\", decode: \"decode\", debug: \"debug\" }, outputs: { onStateChange: \"onStateChange\" }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[lazyLoad]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\r\n                    type: Inject,\r\n                    args: [PLATFORM_ID]\r\n                }] }, { type: Hooks, decorators: [{\r\n                    type: Inject,\r\n                    args: [LAZYLOAD_IMAGE_HOOKS]\r\n                }] }]; }, propDecorators: { lazyImage: [{\r\n                type: Input,\r\n                args: ['lazyLoad']\r\n            }], defaultImage: [{\r\n                type: Input\r\n            }], errorImage: [{\r\n                type: Input\r\n            }], scrollTarget: [{\r\n                type: Input\r\n            }], customObservable: [{\r\n                type: Input\r\n            }], offset: [{\r\n                type: Input\r\n            }], useSrcset: [{\r\n                type: Input\r\n            }], decode: [{\r\n                type: Input\r\n            }], debug: [{\r\n                type: Input\r\n            }], onStateChange: [{\r\n                type: Output\r\n            }] } });\r\n\r\nclass LazyLoadImageModule {\r\n}\r\nLazyLoadImageModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nLazyLoadImageModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, declarations: [LazyLoadImageDirective], exports: [LazyLoadImageDirective] });\r\nLazyLoadImageModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, providers: [{ provide: LAZYLOAD_IMAGE_HOOKS, useClass: IntersectionObserverHooks }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: LazyLoadImageModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [LazyLoadImageDirective],\r\n                    exports: [LazyLoadImageDirective],\r\n                    providers: [{ provide: LAZYLOAD_IMAGE_HOOKS, useClass: IntersectionObserverHooks }],\r\n                }]\r\n        }] });\r\n\r\nclass Rect {\r\n    constructor(left, top, right, bottom) {\r\n        this.left = left;\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n    }\r\n    static fromElement(element) {\r\n        const { left, top, right, bottom } = element.getBoundingClientRect();\r\n        if (left === 0 && top === 0 && right === 0 && bottom === 0) {\r\n            return Rect.empty;\r\n        }\r\n        else {\r\n            return new Rect(left, top, right, bottom);\r\n        }\r\n    }\r\n    static fromWindow(_window) {\r\n        return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\r\n    }\r\n    inflate(inflateBy) {\r\n        this.left -= inflateBy;\r\n        this.top -= inflateBy;\r\n        this.right += inflateBy;\r\n        this.bottom += inflateBy;\r\n    }\r\n    intersectsWith(rect) {\r\n        return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\r\n    }\r\n    getIntersectionWith(rect) {\r\n        const left = Math.max(this.left, rect.left);\r\n        const top = Math.max(this.top, rect.top);\r\n        const right = Math.min(this.right, rect.right);\r\n        const bottom = Math.min(this.bottom, rect.bottom);\r\n        if (right >= left && bottom >= top) {\r\n            return new Rect(left, top, right, bottom);\r\n        }\r\n        else {\r\n            return Rect.empty;\r\n        }\r\n    }\r\n}\r\nRect.empty = new Rect(0, 0, 0, 0);\r\n\r\nclass ScrollHooks extends SharedHooks {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.getWindow = () => window;\r\n        this.scrollListeners = new WeakMap();\r\n        // Only create one scroll listener per target and share the observable.\r\n        // Typical, there will only be one observable per application\r\n        this.getScrollListener = (scrollTarget) => {\r\n            if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\r\n                console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\r\n                return empty();\r\n            }\r\n            const scrollListener = this.scrollListeners.get(scrollTarget);\r\n            if (scrollListener) {\r\n                return scrollListener;\r\n            }\r\n            const srollEvent = Observable.create((observer) => {\r\n                const eventName = 'scroll';\r\n                const handler = (event) => observer.next(event);\r\n                const options = { passive: true, capture: false };\r\n                scrollTarget.addEventListener(eventName, handler, options);\r\n                return () => scrollTarget.removeEventListener(eventName, handler, options);\r\n            });\r\n            const listener = this.sampleObservable(srollEvent);\r\n            this.scrollListeners.set(scrollTarget, listener);\r\n            return listener;\r\n        };\r\n    }\r\n    getObservable(attributes) {\r\n        if (this.skipLazyLoading(attributes)) {\r\n            return of('load');\r\n        }\r\n        else if (attributes.customObservable) {\r\n            return attributes.customObservable.pipe(startWith(''));\r\n        }\r\n        else if (attributes.scrollContainer) {\r\n            return this.getScrollListener(attributes.scrollContainer);\r\n        }\r\n        return this.getScrollListener(this.getWindow());\r\n    }\r\n    isVisible(event, attributes) {\r\n        const elementBounds = Rect.fromElement(attributes.element);\r\n        if (elementBounds === Rect.empty) {\r\n            return false;\r\n        }\r\n        const windowBounds = Rect.fromWindow(this.getWindow());\r\n        elementBounds.inflate(attributes.offset);\r\n        if (attributes.scrollContainer) {\r\n            const scrollContainerBounds = Rect.fromElement(attributes.scrollContainer);\r\n            const intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\r\n            return elementBounds.intersectsWith(intersection);\r\n        }\r\n        else {\r\n            return elementBounds.intersectsWith(windowBounds);\r\n        }\r\n    }\r\n    sampleObservable(obs, scheduler) {\r\n        return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\r\n    }\r\n}\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { Hooks, IntersectionObserverHooks, LAZYLOAD_IMAGE_HOOKS, LazyLoadImageDirective, LazyLoadImageModule, ScrollHooks, SharedHooks };\r\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}