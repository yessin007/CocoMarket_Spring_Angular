{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction BrandsComponent_div_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function BrandsComponent_div_0_div_5_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.appliedFilter($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"label\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const brand_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", brand_r2)(\"checked\", ctx_r1.checked(brand_r2))(\"id\", brand_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", brand_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(brand_r2);\n  }\n}\nfunction BrandsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h3\", 2);\n    i0.ɵɵlistener(\"click\", function BrandsComponent_div_0_Template_h3_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.collapse = !ctx_r6.collapse);\n    });\n    i0.ɵɵtext(2, \"brand\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4);\n    i0.ɵɵtemplate(5, BrandsComponent_div_0_div_5_Template, 4, 5, \"div\", 5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"open\", ctx_r0.collapse);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.filterbyBrand);\n  }\n}\nexport class BrandsComponent {\n  constructor() {\n    this.products = [];\n    this.brands = [];\n    this.brandsFilter = new EventEmitter();\n    this.collapse = true;\n  }\n  ngOnInit() {}\n  get filterbyBrand() {\n    const uniqueBrands = [];\n    this.products.filter(product => {\n      if (product.brand) {\n        const index = uniqueBrands.indexOf(product.brand);\n        if (index === -1) uniqueBrands.push(product.brand);\n      }\n    });\n    return uniqueBrands;\n  }\n  appliedFilter(event) {\n    let index = this.brands.indexOf(event.target.value); // checked and unchecked value\n    if (event.target.checked) this.brands.push(event.target.value); // push in array cheked value\n    else this.brands.splice(index, 1); // removed in array unchecked value  \n    let brands = this.brands.length ? {\n      brand: this.brands.join(\",\")\n    } : {\n      brand: null\n    };\n    this.brandsFilter.emit(brands);\n  }\n  // check if the item are selected\n  checked(item) {\n    if (this.brands.indexOf(item) != -1) {\n      return true;\n    }\n  }\n}\nBrandsComponent.ɵfac = function BrandsComponent_Factory(t) {\n  return new (t || BrandsComponent)();\n};\nBrandsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BrandsComponent,\n  selectors: [[\"app-brands\"]],\n  inputs: {\n    products: \"products\",\n    brands: \"brands\"\n  },\n  outputs: {\n    brandsFilter: \"brandsFilter\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"collection-collapse-block\", 3, \"open\", 4, \"ngIf\"], [1, \"collection-collapse-block\"], [1, \"collapse-block-title\", 3, \"click\"], [1, \"collection-collapse-block-content\"], [1, \"collection-brand-filter\"], [\"class\", \"custom-control custom-checkbox collection-filter-checkbox\", 4, \"ngFor\", \"ngForOf\"], [1, \"custom-control\", \"custom-checkbox\", \"collection-filter-checkbox\"], [\"type\", \"checkbox\", 1, \"custom-control-input\", 3, \"value\", \"checked\", \"id\", \"change\"], [1, \"custom-control-label\", 3, \"for\"]],\n  template: function BrandsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BrandsComponent_div_0_Template, 6, 3, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.filterbyBrand.length);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA2CA,YAAY,QAAQ,eAAe;;;;;;ICItEC,8BACuD;IAMnDA;MAAAA;MAAA;MAAA,OAAUA,2CAAqB;IAAA,EAAC;IALlCA,iBAMiC;IACjCA,gCAAsD;IAAAA,YAAW;IAAAA,iBAAQ;;;;;IALvEA,eAAe;IAAfA,gCAAe;IAKmBA,eAAiB;IAAjBA,yCAAiB;IAACA,eAAW;IAAXA,8BAAW;;;;;;IAb3EA,8BAA4F;IACvDA;MAAAA;MAAA;MAAA;IAAA,EAA8B;IAACA,qBAAK;IAAAA,iBAAK;IAC1EA,8BAA+C;IAE3CA,sEAUM;IACRA,iBAAM;;;;IAf2BA,uCAAuB;IAKhCA,eAAkB;IAAlBA,8CAAkB;;;ADGhD,OAAM,MAAOC,eAAe;EAS1BC;IAPS,aAAQ,GAAc,EAAE;IACxB,WAAM,GAAU,EAAE;IAEjB,iBAAY,GAAsB,IAAIH,YAAY,EAAO;IAE5D,aAAQ,GAAY,IAAI;EAG/B;EAEAI,QAAQ,IACR;EAEA,IAAIC,aAAa;IACf,MAAMC,YAAY,GAAG,EAAE;IACvB,IAAI,CAACC,QAAQ,CAACC,MAAM,CAAEC,OAAO,IAAI;MAC/B,IAAIA,OAAO,CAACC,KAAK,EAAE;QACjB,MAAMC,KAAK,GAAGL,YAAY,CAACM,OAAO,CAACH,OAAO,CAACC,KAAK,CAAC;QACjD,IAAIC,KAAK,KAAK,CAAC,CAAC,EAAEL,YAAY,CAACO,IAAI,CAACJ,OAAO,CAACC,KAAK,CAAC;;IAEtD,CAAC,CAAC;IACF,OAAOJ,YAAY;EACrB;EAEAQ,aAAa,CAACC,KAAK;IACjB,IAAIJ,KAAK,GAAG,IAAI,CAACK,MAAM,CAACJ,OAAO,CAACG,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE;IACtD,IAAIH,KAAK,CAACE,MAAM,CAACE,OAAO,EACtB,IAAI,CAACH,MAAM,CAACH,IAAI,CAACE,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAA,KAEtC,IAAI,CAACF,MAAM,CAACI,MAAM,CAACT,KAAK,EAAC,CAAC,CAAC,CAAC,CAAE;IAEhC,IAAIK,MAAM,GAAG,IAAI,CAACA,MAAM,CAACK,MAAM,GAAG;MAAEX,KAAK,EAAE,IAAI,CAACM,MAAM,CAACM,IAAI,CAAC,GAAG;IAAC,CAAE,GAAG;MAAEZ,KAAK,EAAE;IAAI,CAAE;IACpF,IAAI,CAACa,YAAY,CAACC,IAAI,CAACR,MAAM,CAAC;EAChC;EAEA;EACAG,OAAO,CAACM,IAAI;IACV,IAAG,IAAI,CAACT,MAAM,CAACJ,OAAO,CAACa,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC;MACjC,OAAO,IAAI;;EAEf;;AA1CWvB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAwB;EAAAC;IAAApB;IAAAS;EAAA;EAAAY;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;MCR5B/B,gEAiBM;;;MAjB0DA,+CAA0B","names":["EventEmitter","i0","BrandsComponent","constructor","ngOnInit","filterbyBrand","uniqueBrands","products","filter","product","brand","index","indexOf","push","appliedFilter","event","brands","target","value","checked","splice","length","join","brandsFilter","emit","item","selectors","inputs","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\shop\\collection\\widgets\\brands\\brands.component.ts","C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\shop\\collection\\widgets\\brands\\brands.component.html"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Product } from '../../../../shared/classes/product';\r\n\r\n@Component({\r\n  selector: 'app-brands',\r\n  templateUrl: './brands.component.html',\r\n  styleUrls: ['./brands.component.scss']\r\n})\r\nexport class BrandsComponent implements OnInit {\r\n\r\n  @Input() products: Product[] = [];\r\n  @Input() brands: any[] = [];\r\n\r\n  @Output() brandsFilter: EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n  public collapse: boolean = true;\r\n\r\n  constructor() { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get filterbyBrand() {\r\n    const uniqueBrands = [];\r\n    this.products.filter((product) => {\r\n      if (product.brand) {\r\n        const index = uniqueBrands.indexOf(product.brand)\r\n        if (index === -1) uniqueBrands.push(product.brand)\r\n      }\r\n    })\r\n    return uniqueBrands\r\n  }\r\n\r\n  appliedFilter(event) {\r\n    let index = this.brands.indexOf(event.target.value);  // checked and unchecked value\r\n    if (event.target.checked)   \r\n      this.brands.push(event.target.value); // push in array cheked value\r\n    else \r\n      this.brands.splice(index,1);  // removed in array unchecked value  \r\n    \r\n    let brands = this.brands.length ? { brand: this.brands.join(\",\") } : { brand: null };\r\n    this.brandsFilter.emit(brands);\r\n  }\r\n\r\n  // check if the item are selected\r\n  checked(item){\r\n    if(this.brands.indexOf(item) != -1){\r\n      return true;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"collection-collapse-block\" [class.open]=\"collapse\" *ngIf=\"filterbyBrand.length\">\r\n    <h3 class=\"collapse-block-title\" (click)=\"collapse = !collapse\">brand</h3>\r\n    <div class=\"collection-collapse-block-content\">\r\n      <div class=\"collection-brand-filter\">\r\n        <div class=\"custom-control custom-checkbox collection-filter-checkbox\" \r\n            *ngFor=\"let brand of filterbyBrand; let i = index\">\r\n          <input \r\n            type=\"checkbox\" \r\n            [value]=\"brand\"\r\n            [checked]=\"checked(brand)\"\r\n            [id]=\"brand\"\r\n            (change)=\"appliedFilter($event)\"\r\n            class=\"custom-control-input\" />\r\n          <label class=\"custom-control-label\" for=\"{{ brand }}\">{{ brand }}</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}