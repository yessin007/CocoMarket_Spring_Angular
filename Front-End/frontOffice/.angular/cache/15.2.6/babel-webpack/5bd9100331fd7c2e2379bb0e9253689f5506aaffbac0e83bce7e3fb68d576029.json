{"ast":null,"code":"\"use strict\";\n\nvar isArray_1 = require('../util/isArray');\nvar race_1 = require('../observable/race');\n/* tslint:enable:max-line-length */\n/**\r\n * Returns an Observable that mirrors the first source Observable to emit an item\r\n * from the combination of this Observable and supplied Observables.\r\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\r\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\r\n * @method race\r\n * @owner Observable\r\n */\nfunction race() {\n  var observables = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i - 0] = arguments[_i];\n  }\n  return function raceOperatorFunction(source) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n      observables = observables[0];\n    }\n    return source.lift.call(race_1.race.apply(void 0, [source].concat(observables)));\n  };\n}\nexports.race = race;","map":{"version":3,"names":["isArray_1","require","race_1","race","observables","_i","arguments","length","raceOperatorFunction","source","isArray","lift","call","apply","concat","exports"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/race.js"],"sourcesContent":["\"use strict\";\r\nvar isArray_1 = require('../util/isArray');\r\nvar race_1 = require('../observable/race');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Returns an Observable that mirrors the first source Observable to emit an item\r\n * from the combination of this Observable and supplied Observables.\r\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\r\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\r\n * @method race\r\n * @owner Observable\r\n */\r\nfunction race() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    return function raceOperatorFunction(source) {\r\n        // if the only argument is an array, it was most likely called with\r\n        // `pair([obs1, obs2, ...])`\r\n        if (observables.length === 1 && isArray_1.isArray(observables[0])) {\r\n            observables = observables[0];\r\n        }\r\n        return source.lift.call(race_1.race.apply(void 0, [source].concat(observables)));\r\n    };\r\n}\r\nexports.race = race;\r\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC1C,IAAIC,MAAM,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,IAAI,GAAG;EACZ,IAAIC,WAAW,GAAG,EAAE;EACpB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC1CD,WAAW,CAACC,EAAE,GAAG,CAAC,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;EACvC;EACA,OAAO,SAASG,oBAAoB,CAACC,MAAM,EAAE;IACzC;IACA;IACA,IAAIL,WAAW,CAACG,MAAM,KAAK,CAAC,IAAIP,SAAS,CAACU,OAAO,CAACN,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;MAC/DA,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC;IAChC;IACA,OAAOK,MAAM,CAACE,IAAI,CAACC,IAAI,CAACV,MAAM,CAACC,IAAI,CAACU,KAAK,CAAC,KAAK,CAAC,EAAE,CAACJ,MAAM,CAAC,CAACK,MAAM,CAACV,WAAW,CAAC,CAAC,CAAC;EACpF,CAAC;AACL;AACAW,OAAO,CAACZ,IAAI,GAAGA,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}