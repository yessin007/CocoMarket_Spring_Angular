{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar Observable_1 = require('../Observable');\nvar Subject_1 = require('../Subject');\nvar Map_1 = require('../util/Map');\nvar FastMap_1 = require('../util/FastMap');\n/* tslint:enable:max-line-length */\n/**\r\n * Groups the items emitted by an Observable according to a specified criterion,\r\n * and emits these grouped items as `GroupedObservables`, one\r\n * {@link GroupedObservable} per group.\r\n *\r\n * <img src=\"./img/groupBy.png\" width=\"100%\">\r\n *\r\n * @example <caption>Group objects by id and return as array</caption>\r\n * Observable.of<Obj>({id: 1, name: 'aze1'},\r\n *                    {id: 2, name: 'sf2'},\r\n *                    {id: 2, name: 'dg2'},\r\n *                    {id: 1, name: 'erg1'},\r\n *                    {id: 1, name: 'df1'},\r\n *                    {id: 2, name: 'sfqfb2'},\r\n *                    {id: 3, name: 'qfs3'},\r\n *                    {id: 2, name: 'qsgqsfg2'}\r\n *     )\r\n *     .groupBy(p => p.id)\r\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\r\n *     .subscribe(p => console.log(p));\r\n *\r\n * // displays:\r\n * // [ { id: 1, name: 'aze1' },\r\n * //   { id: 1, name: 'erg1' },\r\n * //   { id: 1, name: 'df1' } ]\r\n * //\r\n * // [ { id: 2, name: 'sf2' },\r\n * //   { id: 2, name: 'dg2' },\r\n * //   { id: 2, name: 'sfqfb2' },\r\n * //   { id: 2, name: 'qsgqsfg2' } ]\r\n * //\r\n * // [ { id: 3, name: 'qfs3' } ]\r\n *\r\n * @example <caption>Pivot data on the id field</caption>\r\n * Observable.of<Obj>({id: 1, name: 'aze1'},\r\n *                    {id: 2, name: 'sf2'},\r\n *                    {id: 2, name: 'dg2'},\r\n *                    {id: 1, name: 'erg1'},\r\n *                    {id: 1, name: 'df1'},\r\n *                    {id: 2, name: 'sfqfb2'},\r\n *                    {id: 3, name: 'qfs1'},\r\n *                    {id: 2, name: 'qsgqsfg2'}\r\n *                   )\r\n *     .groupBy(p => p.id, p => p.name)\r\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\r\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\r\n *     .subscribe(p => console.log(p));\r\n *\r\n * // displays:\r\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\r\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\r\n * // { id: 3, values: [ 'qfs1' ] }\r\n *\r\n * @param {function(value: T): K} keySelector A function that extracts the key\r\n * for each item.\r\n * @param {function(value: T): R} [elementSelector] A function that extracts the\r\n * return element for each item.\r\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\r\n * A function that returns an Observable to determine how long each group should\r\n * exist.\r\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\r\n * GroupedObservables, each of which corresponds to a unique key value and each\r\n * of which emits those items from the source Observable that share that key\r\n * value.\r\n * @method groupBy\r\n * @owner Observable\r\n */\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n  return function (source) {\n    return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n  };\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = function () {\n  function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n    this.keySelector = keySelector;\n    this.elementSelector = elementSelector;\n    this.durationSelector = durationSelector;\n    this.subjectSelector = subjectSelector;\n  }\n  GroupByOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n  };\n  return GroupByOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar GroupBySubscriber = function (_super) {\n  __extends(GroupBySubscriber, _super);\n  function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n    _super.call(this, destination);\n    this.keySelector = keySelector;\n    this.elementSelector = elementSelector;\n    this.durationSelector = durationSelector;\n    this.subjectSelector = subjectSelector;\n    this.groups = null;\n    this.attemptedToUnsubscribe = false;\n    this.count = 0;\n  }\n  GroupBySubscriber.prototype._next = function (value) {\n    var key;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n    this._group(value, key);\n  };\n  GroupBySubscriber.prototype._group = function (value, key) {\n    var groups = this.groups;\n    if (!groups) {\n      groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n    }\n    var group = groups.get(key);\n    var element;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = value;\n    }\n    if (!group) {\n      group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\n      groups.set(key, group);\n      var groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        var duration = void 0;\n        try {\n          duration = this.durationSelector(new GroupedObservable(key, group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n    if (!group.closed) {\n      group.next(element);\n    }\n  };\n  GroupBySubscriber.prototype._error = function (err) {\n    var groups = this.groups;\n    if (groups) {\n      groups.forEach(function (group, key) {\n        group.error(err);\n      });\n      groups.clear();\n    }\n    this.destination.error(err);\n  };\n  GroupBySubscriber.prototype._complete = function () {\n    var groups = this.groups;\n    if (groups) {\n      groups.forEach(function (group, key) {\n        group.complete();\n      });\n      groups.clear();\n    }\n    this.destination.complete();\n  };\n  GroupBySubscriber.prototype.removeGroup = function (key) {\n    this.groups.delete(key);\n  };\n  GroupBySubscriber.prototype.unsubscribe = function () {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        _super.prototype.unsubscribe.call(this);\n      }\n    }\n  };\n  return GroupBySubscriber;\n}(Subscriber_1.Subscriber);\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar GroupDurationSubscriber = function (_super) {\n  __extends(GroupDurationSubscriber, _super);\n  function GroupDurationSubscriber(key, group, parent) {\n    _super.call(this, group);\n    this.key = key;\n    this.group = group;\n    this.parent = parent;\n  }\n  GroupDurationSubscriber.prototype._next = function (value) {\n    this.complete();\n  };\n  /** @deprecated internal use only */\n  GroupDurationSubscriber.prototype._unsubscribe = function () {\n    var _a = this,\n      parent = _a.parent,\n      key = _a.key;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  };\n  return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber);\n/**\r\n * An Observable representing values belonging to the same group represented by\r\n * a common key. The values emitted by a GroupedObservable come from the source\r\n * Observable. The common key is available as the field `key` on a\r\n * GroupedObservable instance.\r\n *\r\n * @class GroupedObservable<K, T>\r\n */\nvar GroupedObservable = function (_super) {\n  __extends(GroupedObservable, _super);\n  function GroupedObservable(key, groupSubject, refCountSubscription) {\n    _super.call(this);\n    this.key = key;\n    this.groupSubject = groupSubject;\n    this.refCountSubscription = refCountSubscription;\n  }\n  /** @deprecated internal use only */\n  GroupedObservable.prototype._subscribe = function (subscriber) {\n    var subscription = new Subscription_1.Subscription();\n    var _a = this,\n      refCountSubscription = _a.refCountSubscription,\n      groupSubject = _a.groupSubject;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  };\n  return GroupedObservable;\n}(Observable_1.Observable);\nexports.GroupedObservable = GroupedObservable;\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar InnerRefCountSubscription = function (_super) {\n  __extends(InnerRefCountSubscription, _super);\n  function InnerRefCountSubscription(parent) {\n    _super.call(this);\n    this.parent = parent;\n    parent.count++;\n  }\n  InnerRefCountSubscription.prototype.unsubscribe = function () {\n    var parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      _super.prototype.unsubscribe.call(this);\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  };\n  return InnerRefCountSubscription;\n}(Subscription_1.Subscription);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","Subscription_1","Observable_1","Subject_1","Map_1","FastMap_1","groupBy","keySelector","elementSelector","durationSelector","subjectSelector","source","lift","GroupByOperator","exports","call","subscriber","subscribe","GroupBySubscriber","_super","destination","groups","attemptedToUnsubscribe","count","_next","value","key","err","error","_group","FastMap","Map","group","get","element","Subject","set","groupedObservable","GroupedObservable","next","duration","add","GroupDurationSubscriber","closed","_error","forEach","clear","_complete","complete","removeGroup","delete","unsubscribe","Subscriber","parent","_unsubscribe","_a","groupSubject","refCountSubscription","_subscribe","subscription","Subscription","InnerRefCountSubscription","Observable"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/groupBy.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Subscription_1 = require('../Subscription');\r\nvar Observable_1 = require('../Observable');\r\nvar Subject_1 = require('../Subject');\r\nvar Map_1 = require('../util/Map');\r\nvar FastMap_1 = require('../util/FastMap');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Groups the items emitted by an Observable according to a specified criterion,\r\n * and emits these grouped items as `GroupedObservables`, one\r\n * {@link GroupedObservable} per group.\r\n *\r\n * <img src=\"./img/groupBy.png\" width=\"100%\">\r\n *\r\n * @example <caption>Group objects by id and return as array</caption>\r\n * Observable.of<Obj>({id: 1, name: 'aze1'},\r\n *                    {id: 2, name: 'sf2'},\r\n *                    {id: 2, name: 'dg2'},\r\n *                    {id: 1, name: 'erg1'},\r\n *                    {id: 1, name: 'df1'},\r\n *                    {id: 2, name: 'sfqfb2'},\r\n *                    {id: 3, name: 'qfs3'},\r\n *                    {id: 2, name: 'qsgqsfg2'}\r\n *     )\r\n *     .groupBy(p => p.id)\r\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\r\n *     .subscribe(p => console.log(p));\r\n *\r\n * // displays:\r\n * // [ { id: 1, name: 'aze1' },\r\n * //   { id: 1, name: 'erg1' },\r\n * //   { id: 1, name: 'df1' } ]\r\n * //\r\n * // [ { id: 2, name: 'sf2' },\r\n * //   { id: 2, name: 'dg2' },\r\n * //   { id: 2, name: 'sfqfb2' },\r\n * //   { id: 2, name: 'qsgqsfg2' } ]\r\n * //\r\n * // [ { id: 3, name: 'qfs3' } ]\r\n *\r\n * @example <caption>Pivot data on the id field</caption>\r\n * Observable.of<Obj>({id: 1, name: 'aze1'},\r\n *                    {id: 2, name: 'sf2'},\r\n *                    {id: 2, name: 'dg2'},\r\n *                    {id: 1, name: 'erg1'},\r\n *                    {id: 1, name: 'df1'},\r\n *                    {id: 2, name: 'sfqfb2'},\r\n *                    {id: 3, name: 'qfs1'},\r\n *                    {id: 2, name: 'qsgqsfg2'}\r\n *                   )\r\n *     .groupBy(p => p.id, p => p.name)\r\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\r\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\r\n *     .subscribe(p => console.log(p));\r\n *\r\n * // displays:\r\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\r\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\r\n * // { id: 3, values: [ 'qfs1' ] }\r\n *\r\n * @param {function(value: T): K} keySelector A function that extracts the key\r\n * for each item.\r\n * @param {function(value: T): R} [elementSelector] A function that extracts the\r\n * return element for each item.\r\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\r\n * A function that returns an Observable to determine how long each group should\r\n * exist.\r\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\r\n * GroupedObservables, each of which corresponds to a unique key value and each\r\n * of which emits those items from the source Observable that share that key\r\n * value.\r\n * @method groupBy\r\n * @owner Observable\r\n */\r\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\r\n    return function (source) {\r\n        return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\r\n    };\r\n}\r\nexports.groupBy = groupBy;\r\nvar GroupByOperator = (function () {\r\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\r\n        this.keySelector = keySelector;\r\n        this.elementSelector = elementSelector;\r\n        this.durationSelector = durationSelector;\r\n        this.subjectSelector = subjectSelector;\r\n    }\r\n    GroupByOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\r\n    };\r\n    return GroupByOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar GroupBySubscriber = (function (_super) {\r\n    __extends(GroupBySubscriber, _super);\r\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\r\n        _super.call(this, destination);\r\n        this.keySelector = keySelector;\r\n        this.elementSelector = elementSelector;\r\n        this.durationSelector = durationSelector;\r\n        this.subjectSelector = subjectSelector;\r\n        this.groups = null;\r\n        this.attemptedToUnsubscribe = false;\r\n        this.count = 0;\r\n    }\r\n    GroupBySubscriber.prototype._next = function (value) {\r\n        var key;\r\n        try {\r\n            key = this.keySelector(value);\r\n        }\r\n        catch (err) {\r\n            this.error(err);\r\n            return;\r\n        }\r\n        this._group(value, key);\r\n    };\r\n    GroupBySubscriber.prototype._group = function (value, key) {\r\n        var groups = this.groups;\r\n        if (!groups) {\r\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\r\n        }\r\n        var group = groups.get(key);\r\n        var element;\r\n        if (this.elementSelector) {\r\n            try {\r\n                element = this.elementSelector(value);\r\n            }\r\n            catch (err) {\r\n                this.error(err);\r\n            }\r\n        }\r\n        else {\r\n            element = value;\r\n        }\r\n        if (!group) {\r\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\r\n            groups.set(key, group);\r\n            var groupedObservable = new GroupedObservable(key, group, this);\r\n            this.destination.next(groupedObservable);\r\n            if (this.durationSelector) {\r\n                var duration = void 0;\r\n                try {\r\n                    duration = this.durationSelector(new GroupedObservable(key, group));\r\n                }\r\n                catch (err) {\r\n                    this.error(err);\r\n                    return;\r\n                }\r\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\r\n            }\r\n        }\r\n        if (!group.closed) {\r\n            group.next(element);\r\n        }\r\n    };\r\n    GroupBySubscriber.prototype._error = function (err) {\r\n        var groups = this.groups;\r\n        if (groups) {\r\n            groups.forEach(function (group, key) {\r\n                group.error(err);\r\n            });\r\n            groups.clear();\r\n        }\r\n        this.destination.error(err);\r\n    };\r\n    GroupBySubscriber.prototype._complete = function () {\r\n        var groups = this.groups;\r\n        if (groups) {\r\n            groups.forEach(function (group, key) {\r\n                group.complete();\r\n            });\r\n            groups.clear();\r\n        }\r\n        this.destination.complete();\r\n    };\r\n    GroupBySubscriber.prototype.removeGroup = function (key) {\r\n        this.groups.delete(key);\r\n    };\r\n    GroupBySubscriber.prototype.unsubscribe = function () {\r\n        if (!this.closed) {\r\n            this.attemptedToUnsubscribe = true;\r\n            if (this.count === 0) {\r\n                _super.prototype.unsubscribe.call(this);\r\n            }\r\n        }\r\n    };\r\n    return GroupBySubscriber;\r\n}(Subscriber_1.Subscriber));\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar GroupDurationSubscriber = (function (_super) {\r\n    __extends(GroupDurationSubscriber, _super);\r\n    function GroupDurationSubscriber(key, group, parent) {\r\n        _super.call(this, group);\r\n        this.key = key;\r\n        this.group = group;\r\n        this.parent = parent;\r\n    }\r\n    GroupDurationSubscriber.prototype._next = function (value) {\r\n        this.complete();\r\n    };\r\n    /** @deprecated internal use only */ GroupDurationSubscriber.prototype._unsubscribe = function () {\r\n        var _a = this, parent = _a.parent, key = _a.key;\r\n        this.key = this.parent = null;\r\n        if (parent) {\r\n            parent.removeGroup(key);\r\n        }\r\n    };\r\n    return GroupDurationSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n/**\r\n * An Observable representing values belonging to the same group represented by\r\n * a common key. The values emitted by a GroupedObservable come from the source\r\n * Observable. The common key is available as the field `key` on a\r\n * GroupedObservable instance.\r\n *\r\n * @class GroupedObservable<K, T>\r\n */\r\nvar GroupedObservable = (function (_super) {\r\n    __extends(GroupedObservable, _super);\r\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\r\n        _super.call(this);\r\n        this.key = key;\r\n        this.groupSubject = groupSubject;\r\n        this.refCountSubscription = refCountSubscription;\r\n    }\r\n    /** @deprecated internal use only */ GroupedObservable.prototype._subscribe = function (subscriber) {\r\n        var subscription = new Subscription_1.Subscription();\r\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\r\n        if (refCountSubscription && !refCountSubscription.closed) {\r\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\r\n        }\r\n        subscription.add(groupSubject.subscribe(subscriber));\r\n        return subscription;\r\n    };\r\n    return GroupedObservable;\r\n}(Observable_1.Observable));\r\nexports.GroupedObservable = GroupedObservable;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar InnerRefCountSubscription = (function (_super) {\r\n    __extends(InnerRefCountSubscription, _super);\r\n    function InnerRefCountSubscription(parent) {\r\n        _super.call(this);\r\n        this.parent = parent;\r\n        parent.count++;\r\n    }\r\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\r\n        var parent = this.parent;\r\n        if (!parent.closed && !this.closed) {\r\n            _super.prototype.unsubscribe.call(this);\r\n            parent.count -= 1;\r\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\r\n                parent.unsubscribe();\r\n            }\r\n        }\r\n    };\r\n    return InnerRefCountSubscription;\r\n}(Subscription_1.Subscription));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}