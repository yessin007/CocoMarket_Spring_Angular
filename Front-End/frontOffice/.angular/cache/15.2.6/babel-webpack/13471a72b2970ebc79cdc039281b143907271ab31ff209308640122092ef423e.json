{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./product.service\";\nexport class Resolver {\n  constructor(router, productService) {\n    this.router = router;\n    this.productService = productService;\n    this.product = {};\n  }\n  // Resolver\n  resolve(route) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield new Promise(resolve => setTimeout(resolve, 1000));\n      _this.productService.getProductBySlug(route.params.slug).subscribe(product => {\n        if (!product) {\n          // When product is empty redirect 404\n          _this.router.navigateByUrl('/pages/404', {\n            skipLocationChange: true\n          });\n        } else {\n          _this.product = product;\n        }\n      });\n      return _this.product;\n    })();\n  }\n}\nResolver.ɵfac = function Resolver_Factory(t) {\n  return new (t || Resolver)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ProductService));\n};\nResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Resolver,\n  factory: Resolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,QAAQ;EAInBC,YACUC,MAAc,EACfC,cAA8B;IAD7B,WAAM,GAAND,MAAM;IACP,mBAAc,GAAdC,cAAc;IAJhB,YAAO,GAAY,EAAE;EAKzB;EAEH;EACMC,OAAO,CAACC,KAA6B;IAAA;IAAA;MACzC,MAAM,IAAIC,OAAO,CAACF,OAAO,IAAIG,UAAU,CAACH,OAAO,EAAE,IAAI,CAAC,CAAC;MACvD,KAAI,CAACD,cAAc,CAACK,gBAAgB,CAACH,KAAK,CAACI,MAAM,CAACC,IAAI,CAAC,CAACC,SAAS,CAACC,OAAO,IAAG;QAC1E,IAAG,CAACA,OAAO,EAAE;UAAE;UACX,KAAI,CAACV,MAAM,CAACW,aAAa,CAAC,YAAY,EAAE;YAACC,kBAAkB,EAAE;UAAI,CAAC,CAAC;SACtE,MAAM;UACH,KAAI,CAACF,OAAO,GAAGA,OAAO;;MAE5B,CAAC,CAAC;MACF,OAAO,KAAI,CAACA,OAAO;IAAC;EACtB;;AApBWZ,QAAQ;mBAARA,QAAQ;AAAA;AAARA,QAAQ;SAARA,QAAQ;EAAAe,SAARf,QAAQ;EAAAgB,YAFR;AAAM","names":["Resolver","constructor","router","productService","resolve","route","Promise","setTimeout","getProductBySlug","params","slug","subscribe","product","navigateByUrl","skipLocationChange","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\shared\\services\\resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\nimport { Product } from '../classes/product';\r\nimport { ProductService } from './product.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class Resolver implements Resolve<Product> {\r\n  \r\n  public product: Product = {};\r\n\r\n  constructor(\r\n    private router: Router,\r\n    public productService: ProductService\r\n  ) {}\r\n\r\n  // Resolver\r\n  async resolve(route: ActivatedRouteSnapshot): Promise<any> {\r\n    await new Promise(resolve => setTimeout(resolve, 1000));    \r\n    this.productService.getProductBySlug(route.params.slug).subscribe(product => {\r\n      if(!product) { // When product is empty redirect 404\r\n          this.router.navigateByUrl('/pages/404', {skipLocationChange: true});\r\n      } else {\r\n          this.product = product\r\n      }\r\n    })\r\n    return this.product;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}