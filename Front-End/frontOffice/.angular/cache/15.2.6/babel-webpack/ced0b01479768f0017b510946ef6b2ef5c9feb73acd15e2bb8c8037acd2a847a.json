{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ContactComponent {\n  constructor() {}\n  ngOnInit() {}\n}\nContactComponent.ɵfac = function ContactComponent_Factory(t) {\n  return new (t || ContactComponent)();\n};\nContactComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactComponent,\n  selectors: [[\"app-contact\"]],\n  decls: 6,\n  vars: 0,\n  consts: [[\"id\", \"map\"]],\n  template: function ContactComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\")(2, \"title\");\n      i0.ɵɵtext(3, \"Geocoding Service\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"body\");\n      i0.ɵɵelement(5, \"div\", 0);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"#map[_ngcontent-%COMP%] {\\n            height: 100%;\\n        }\\n\\n        \\n        html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\\n            height: 100%;\\n            margin: 0;\\n            padding: 0;\\n        }\\n\\n        input[type=\\\"text\\\"][_ngcontent-%COMP%] {\\n            background-color: #fff;\\n            border: 0;\\n            border-radius: 2px;\\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\\n            margin: 10px;\\n            padding: 0 0.5em;\\n            font: 400 18px Roboto, Arial, sans-serif;\\n            overflow: hidden;\\n            line-height: 40px;\\n            margin-right: 0;\\n            min-width: 25%;\\n        }\\n\\n        input[type=\\\"button\\\"][_ngcontent-%COMP%] {\\n            background-color: #fff;\\n            border: 0;\\n            border-radius: 2px;\\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\\n            margin: 10px;\\n            padding: 0 0.5em;\\n            font: 400 18px Roboto, Arial, sans-serif;\\n            overflow: hidden;\\n            height: 40px;\\n            cursor: pointer;\\n            margin-left: 5px;\\n        }\\n        input[type=\\\"button\\\"][_ngcontent-%COMP%]:hover {\\n            background: rgb(235, 235, 235);\\n        }\\n        input[type=\\\"button\\\"].button-primary[_ngcontent-%COMP%] {\\n            background-color: #1a73e8;\\n            color: white;\\n        }\\n        input[type=\\\"button\\\"].button-primary[_ngcontent-%COMP%]:hover {\\n            background-color: #1765cc;\\n        }\\n        input[type=\\\"button\\\"].button-secondary[_ngcontent-%COMP%] {\\n            background-color: white;\\n            color: #1a73e8;\\n        }\\n        input[type=\\\"button\\\"].button-secondary[_ngcontent-%COMP%]:hover {\\n            background-color: #d2e3fc;\\n        }\\n\\n        #response-container[_ngcontent-%COMP%] {\\n            background-color: #fff;\\n            border: 0;\\n            border-radius: 2px;\\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\\n            margin: 10px;\\n            padding: 0 0.5em;\\n            font: 400 18px Roboto, Arial, sans-serif;\\n            overflow: hidden;\\n            overflow: auto;\\n            max-height: 50%;\\n            max-width: 90%;\\n            background-color: rgba(255, 255, 255, 0.95);\\n            font-size: small;\\n        }\\n\\n        #instructions[_ngcontent-%COMP%] {\\n            background-color: #fff;\\n            border: 0;\\n            border-radius: 2px;\\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\\n            margin: 10px;\\n            padding: 0 0.5em;\\n            font: 400 18px Roboto, Arial, sans-serif;\\n            overflow: hidden;\\n            padding: 1rem;\\n            font-size: medium;\\n        }\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,eAAe;EAEfC,QAAQ,IAAU;;AAJPF,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCD7BC,4BAAM;MAEKA,iCAAiB;MAAAA,iBAAQ;MAiMpCA,4BAAM;MACNA,yBAAoB;MAKpBA,iBAAO","names":["ContactComponent","constructor","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\pages\\account\\contact\\contact.component.ts","C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\pages\\account\\contact\\contact.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.scss']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<!--\r\n @license\r\n Copyright 2019 Google LLC. All Rights Reserved.\r\n SPDX-License-Identifier: Apache-2.0\r\n-->\r\n<html>\r\n<head>\r\n    <title>Geocoding Service</title>\r\n    <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\r\n    <script>\r\n        /**\r\n         * @license\r\n         * Copyright 2019 Google LLC. All Rights Reserved.\r\n         * SPDX-License-Identifier: Apache-2.0\r\n         */\r\n        let map;\r\n        let marker;\r\n        let geocoder;\r\n        let responseDiv;\r\n        let response;\r\n\r\n        function initMap() {\r\n            map = new google.maps.Map(document.getElementById(\"map\"), {\r\n                zoom: 8,\r\n                center: { lat: -34.397, lng: 150.644 },\r\n                mapTypeControl: false,\r\n            });\r\n            geocoder = new google.maps.Geocoder();\r\n\r\n            const inputText = document.createElement(\"input\");\r\n\r\n            inputText.type = \"text\";\r\n            inputText.placeholder = \"Enter a location\";\r\n\r\n            const submitButton = document.createElement(\"input\");\r\n\r\n            submitButton.type = \"button\";\r\n            submitButton.value = \"Geocode\";\r\n            submitButton.classList.add(\"button\", \"button-primary\");\r\n\r\n            const clearButton = document.createElement(\"input\");\r\n\r\n            clearButton.type = \"button\";\r\n            clearButton.value = \"Clear\";\r\n            clearButton.classList.add(\"button\", \"button-secondary\");\r\n            response = document.createElement(\"pre\");\r\n            response.id = \"response\";\r\n            response.innerText = \"\";\r\n            responseDiv = document.createElement(\"div\");\r\n            responseDiv.id = \"response-container\";\r\n            responseDiv.appendChild(response);\r\n\r\n            const instructionsElement = document.createElement(\"p\");\r\n\r\n            instructionsElement.id = \"instructions\";\r\n            instructionsElement.innerHTML =\r\n                \"<strong>Instructions</strong>: Enter an address in the textbox to geocode or click on the map to reverse geocode.\";\r\n            map.controls[google.maps.ControlPosition.TOP_LEFT].push(inputText);\r\n            map.controls[google.maps.ControlPosition.TOP_LEFT].push(submitButton);\r\n            map.controls[google.maps.ControlPosition.TOP_LEFT].push(clearButton);\r\n            map.controls[google.maps.ControlPosition.LEFT_TOP].push(\r\n                instructionsElement\r\n            );\r\n            map.controls[google.maps.ControlPosition.LEFT_TOP].push(responseDiv);\r\n            marker = new google.maps.Marker({\r\n                map,\r\n            });\r\n            map.addListener(\"click\", (e) => {\r\n                geocode({ location: e.latLng });\r\n            });\r\n            submitButton.addEventListener(\"click\", () =>\r\n                geocode({ address: inputText.value })\r\n            );\r\n            clearButton.addEventListener(\"click\", () => {\r\n                clear();\r\n            });\r\n            clear();\r\n        }\r\n\r\n        function clear() {\r\n            marker.setMap(null);\r\n        }\r\n\r\n        function geocode(request) {\r\n            clear();\r\n            geocoder\r\n                .geocode(request)\r\n                .then((result) => {\r\n                    const { results } = result;\r\n\r\n                    map.setCenter(results[0].geometry.location);\r\n                    marker.setPosition(results[0].geometry.location);\r\n                    marker.setMap(map);\r\n                    response.innerText = JSON.stringify(result, null, 2);\r\n                    return results;\r\n                })\r\n                .catch((e) => {\r\n                    alert(\"Geocode was not successful for the following reason: \" + e);\r\n                });\r\n        }\r\n\r\n        window.initMap = initMap;\r\n    </script>\r\n    <style>\r\n        /**\r\n         * @license\r\n         * Copyright 2019 Google LLC. All Rights Reserved.\r\n         * SPDX-License-Identifier: Apache-2.0\r\n         */\r\n        /**\r\n         * Always set the map height explicitly to define the size of the div element\r\n         * that contains the map.\r\n         */\r\n        #map {\r\n            height: 100%;\r\n        }\r\n\r\n        /* Optional: Makes the sample page fill the window. */\r\n        html,\r\n        body {\r\n            height: 100%;\r\n            margin: 0;\r\n            padding: 0;\r\n        }\r\n\r\n        input[type=\"text\"] {\r\n            background-color: #fff;\r\n            border: 0;\r\n            border-radius: 2px;\r\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\r\n            margin: 10px;\r\n            padding: 0 0.5em;\r\n            font: 400 18px Roboto, Arial, sans-serif;\r\n            overflow: hidden;\r\n            line-height: 40px;\r\n            margin-right: 0;\r\n            min-width: 25%;\r\n        }\r\n\r\n        input[type=\"button\"] {\r\n            background-color: #fff;\r\n            border: 0;\r\n            border-radius: 2px;\r\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\r\n            margin: 10px;\r\n            padding: 0 0.5em;\r\n            font: 400 18px Roboto, Arial, sans-serif;\r\n            overflow: hidden;\r\n            height: 40px;\r\n            cursor: pointer;\r\n            margin-left: 5px;\r\n        }\r\n        input[type=\"button\"]:hover {\r\n            background: rgb(235, 235, 235);\r\n        }\r\n        input[type=\"button\"].button-primary {\r\n            background-color: #1a73e8;\r\n            color: white;\r\n        }\r\n        input[type=\"button\"].button-primary:hover {\r\n            background-color: #1765cc;\r\n        }\r\n        input[type=\"button\"].button-secondary {\r\n            background-color: white;\r\n            color: #1a73e8;\r\n        }\r\n        input[type=\"button\"].button-secondary:hover {\r\n            background-color: #d2e3fc;\r\n        }\r\n\r\n        #response-container {\r\n            background-color: #fff;\r\n            border: 0;\r\n            border-radius: 2px;\r\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\r\n            margin: 10px;\r\n            padding: 0 0.5em;\r\n            font: 400 18px Roboto, Arial, sans-serif;\r\n            overflow: hidden;\r\n            overflow: auto;\r\n            max-height: 50%;\r\n            max-width: 90%;\r\n            background-color: rgba(255, 255, 255, 0.95);\r\n            font-size: small;\r\n        }\r\n\r\n        #instructions {\r\n            background-color: #fff;\r\n            border: 0;\r\n            border-radius: 2px;\r\n            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);\r\n            margin: 10px;\r\n            padding: 0 0.5em;\r\n            font: 400 18px Roboto, Arial, sans-serif;\r\n            overflow: hidden;\r\n            padding: 1rem;\r\n            font-size: medium;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n<div id=\"map\"></div>\r\n<script\r\n        src=\"https://maps.googleapis.com/maps/api/js?key=INSERT_YOUR_API_KEY&callback=initMap&v=weekly\"\r\n        defer\r\n></script>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}