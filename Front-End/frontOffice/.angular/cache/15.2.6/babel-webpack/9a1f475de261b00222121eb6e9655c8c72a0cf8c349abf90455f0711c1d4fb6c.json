{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Optional, Inject, Injectable, PLATFORM_ID, Directive, Host, Self, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i2 from '@angular/platform-browser';\nimport * as i1$1 from 'ng-gallery';\nimport { ImageItem, GalleryModule } from 'ng-gallery';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ESCAPE, RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { Subject, from, EMPTY, Subscription, fromEvent } from 'rxjs';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { debounceTime, switchMap, map, tap, finalize } from 'rxjs/operators';\nconst _c0 = function (a0, a1) {\n  return {\n    startAnimationTime: a0,\n    exitAnimationTime: a1\n  };\n};\nconst _c1 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\nconst LIGHTBOX_CONFIG = new InjectionToken('LIGHTBOX_CONFIG');\nconst lightboxAnimation = trigger('lightbox', [state('void, exit', style({\n  opacity: 0,\n  transform: 'scale(0.7)'\n})), state('enter', style({\n  transform: 'none'\n})), transition('* => enter', animate('{{startAnimationTime}}ms cubic-bezier(0, 0, 0.2, 1)', style({\n  transform: 'none',\n  opacity: 1\n}))), transition('* => void, * => exit', animate('{{exitAnimationTime}}ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({\n  opacity: 0\n})))]);\nclass LightboxComponent {\n  constructor(_document, _focusTrapFactory, _elementRef, sanitizer) {\n    this._document = _document;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._elementRef = _elementRef;\n    this.sanitizer = sanitizer;\n    /** State of the lightbox animation. */\n    this.state = 'enter';\n    this._savePreviouslyFocusedElement();\n  }\n  /** Callback, invoked whenever an animation on the host completes. */\n  onAnimationDone(event) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else {\n      this.overlayRef.dispose();\n      this._restoreFocus();\n    }\n  }\n  /** Moves the focus inside the focus trap. */\n  _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    // If were to attempt to focus immediately, then the content of the lightbox would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    this._focusTrap.focusInitialElementWhenReady();\n  }\n  /** Saves a reference to the element that was focused before the lightbox was opened. */\n  _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement;\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the lightbox immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n  /** Restores focus to the element that was focused before the lightbox opened. */\n  _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n}\nLightboxComponent.ɵfac = function LightboxComponent_Factory(t) {\n  return new (t || LightboxComponent)(i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(i1.ConfigurableFocusTrapFactory), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n};\nLightboxComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LightboxComponent,\n  selectors: [[\"lightbox\"]],\n  hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\"],\n  hostVars: 12,\n  hostBindings: function LightboxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@lightbox.done\", function LightboxComponent_animation_lightbox_done_HostBindingHandler($event) {\n        return ctx.onAnimationDone($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"id\", \"lightbox-\" + ctx.id)(\"role\", ctx.role)(\"aria-labelledby\", ctx.ariaLabel ? null : ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx.ariaDescribedBy || null);\n      i0.ɵɵsyntheticHostProperty(\"@lightbox\", i0.ɵɵpureFunction2(9, _c1, ctx.state, i0.ɵɵpureFunction2(6, _c0, ctx.startAnimationTime, ctx.exitAnimationTime)));\n    }\n  },\n  decls: 2,\n  vars: 4,\n  consts: [[3, \"id\", \"destroyRef\", \"skipInitConfig\"], [\"aria-label\", \"Close\", 1, \"g-btn-close\", 3, \"innerHTML\", \"click\"]],\n  template: function LightboxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"gallery\", 0)(1, \"i\", 1);\n      i0.ɵɵlistener(\"click\", function LightboxComponent_Template_i_click_1_listener() {\n        return ctx.overlayRef.detach();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.id)(\"destroyRef\", false)(\"skipInitConfig\", true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHTML\", ctx.sanitizer.bypassSecurityTrustHtml(ctx.closeIcon), i0.ɵɵsanitizeHtml);\n    }\n  },\n  dependencies: [i1$1.GalleryComponent],\n  styles: [\"lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}  lightbox:focus{outline:none}  lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}  .g-backdrop{background-color:#00000052}  .fullscreen{width:100%}  .fullscreen   lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}  .g-overlay{margin:auto}@media only screen and (max-width: 480px){  .g-overlay{width:100%}  .g-overlay   lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}  .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){  .g-btn-close{right:.7em;top:.7em}}\"],\n  data: {\n    animation: [lightboxAnimation]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LightboxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lightbox',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [lightboxAnimation],\n      template: `\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\n    </gallery>\n  `,\n      host: {\n        'tabindex': '-1',\n        'aria-modal': 'true',\n        '[attr.id]': '\"lightbox-\" + id',\n        '[attr.role]': 'role',\n        '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\n        '[attr.aria-label]': 'ariaLabel',\n        '[attr.aria-describedby]': 'ariaDescribedBy || null',\n        '[@lightbox]': '{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }',\n        '(@lightbox.done)': 'onAnimationDone($event)'\n      },\n      styles: [\"::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1.ConfigurableFocusTrapFactory\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.DomSanitizer\n    }];\n  }, null);\n})();\nconst defaultConfig = {\n  backdropClass: 'g-backdrop',\n  panelClass: 'g-overlay',\n  hasBackdrop: true,\n  keyboardShortcuts: true,\n  role: 'lightbox',\n  startAnimationTime: 150,\n  exitAnimationTime: 75,\n  closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\n</svg>\n`\n};\nclass Lightbox {\n  constructor(config, _gallery, _overlay) {\n    this._gallery = _gallery;\n    this._overlay = _overlay;\n    /** Stream that emits when lightbox is opened */\n    this.opened = new Subject();\n    /** Stream that emits when lightbox is closed */\n    this.closed = new Subject();\n    this._config = config ? {\n      ...defaultConfig,\n      ...config\n    } : defaultConfig;\n  }\n  /**\r\n   * Set Lightbox Config\r\n   * @param config - LightboxConfig\r\n   */\n  setConfig(config) {\n    this._config = {\n      ...this._config,\n      ...config\n    };\n  }\n  /**\r\n   * Open Lightbox Overlay\r\n   * @param i - Current Index\r\n   * @param id - Gallery ID\r\n   * @param config - Lightbox Config\r\n   */\n  open(i = 0, id = 'lightbox', config) {\n    const _config = config ? {\n      ...this._config,\n      ...config\n    } : this._config;\n    const overlayConfig = {\n      backdropClass: _config.backdropClass,\n      panelClass: _config.panelClass,\n      hasBackdrop: _config.hasBackdrop,\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      disposeOnNavigation: true\n    };\n    const galleryRef = this._gallery.ref(id);\n    galleryRef.set(i);\n    this._overlayRef = this._overlay.create(overlayConfig);\n    // overlay opened event\n    this._overlayRef.attachments().subscribe(() => this.opened.next(id));\n    // overlay closed event\n    this._overlayRef.detachments().subscribe(() => this.closed.next(id));\n    // Attach gallery to the overlay\n    const galleryPortal = new ComponentPortal(LightboxComponent);\n    const lightboxRef = this._overlayRef.attach(galleryPortal);\n    lightboxRef.instance.id = id;\n    lightboxRef.instance.overlayRef = this._overlayRef;\n    lightboxRef.instance.closeIcon = this._config.closeIcon;\n    lightboxRef.instance.role = this._config.role;\n    lightboxRef.instance.ariaLabel = this._config.ariaLabel;\n    lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\n    lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\n    lightboxRef.instance.startAnimationTime = this._config.startAnimationTime;\n    lightboxRef.instance.exitAnimationTime = this._config.exitAnimationTime;\n    if (_config.hasBackdrop) {\n      this._overlayRef.backdropClick().subscribe(() => this.close());\n    }\n    // Add keyboard shortcuts\n    if (_config.keyboardShortcuts) {\n      this._overlayRef.keydownEvents().subscribe(event => {\n        switch (event.keyCode) {\n          case LEFT_ARROW:\n            galleryRef.prev();\n            break;\n          case RIGHT_ARROW:\n            galleryRef.next();\n            break;\n          case ESCAPE:\n            this.close();\n        }\n      });\n    }\n  }\n  /**\r\n   * Close Lightbox Overlay\r\n   */\n  close() {\n    if (this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n  }\n}\nLightbox.ɵfac = function Lightbox_Factory(t) {\n  return new (t || Lightbox)(i0.ɵɵinject(LIGHTBOX_CONFIG, 8), i0.ɵɵinject(i1$1.Gallery), i0.ɵɵinject(i2$1.Overlay));\n};\nLightbox.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: Lightbox,\n  factory: Lightbox.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Lightbox, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LIGHTBOX_CONFIG]\n      }]\n    }, {\n      type: i1$1.Gallery\n    }, {\n      type: i2$1.Overlay\n    }];\n  }, null);\n})();\nclass GallerizeDirective {\n  constructor(_zone, _el, _gallery, _lightbox, _renderer, platform, _document, _galleryCmp) {\n    this._zone = _zone;\n    this._el = _el;\n    this._gallery = _gallery;\n    this._lightbox = _lightbox;\n    this._renderer = _renderer;\n    this._document = _document;\n    this._galleryCmp = _galleryCmp;\n    /** Default gallery id */\n    this._galleryId = 'lightbox';\n    /** The selector used to query images elements */\n    this.selector = 'img';\n    // Set gallerize mode\n    if (isPlatformBrowser(platform)) {\n      this._mode = _galleryCmp ? \"gallery\" /* Gallery */ : \"detector\" /* Detector */;\n    }\n  }\n\n  ngOnInit() {\n    this._zone.runOutsideAngular(() => {\n      this._galleryId = this.gallerize || this._galleryId;\n      const ref = this._gallery.ref(this._galleryId);\n      switch (this._mode) {\n        case \"detector\" /* Detector */:\n          this.detectorMode(ref);\n          break;\n        case \"gallery\" /* Gallery */:\n          this.galleryMode(ref);\n      }\n    });\n  }\n  ngOnDestroy() {\n    switch (this._mode) {\n      case \"detector\" /* Detector */:\n        this._detector$.complete();\n        this._observer$.disconnect();\n        break;\n      case \"gallery\" /* Gallery */:\n        this._itemClick$.unsubscribe();\n        this._itemChange$.unsubscribe();\n    }\n  }\n  /** Gallery mode: means `gallerize` directive is used on `<gallery>` component\r\n   * Adds a click event to each gallery item so it opens in lightbox */\n  galleryMode(galleryRef) {\n    // Clone its items to the new gallery instance\n    this._itemClick$ = this._galleryCmp.galleryRef.itemClick.subscribe(i => this._lightbox.open(i, this._galleryId));\n    this._itemChange$ = this._galleryCmp.galleryRef.itemsChanged.subscribe(state => galleryRef.load(state.items));\n  }\n  /** Detector mode: means `gallerize` directive is used on a normal HTMLElement\r\n   *  Detects images and adds a click event to each image so it opens in the lightbox */\n  detectorMode(galleryRef) {\n    this._detector$ = new Subject();\n    // Query image elements\n    this._detector$.pipe(debounceTime(300), switchMap(() => {\n      /** get all img elements from content */\n      const imageElements = this._el.nativeElement.querySelectorAll(this.selector);\n      if (imageElements && imageElements.length) {\n        const images = [];\n        return from(imageElements).pipe(map((el, i) => {\n          // Add click event to the image\n          this._renderer.setStyle(el, 'cursor', 'pointer');\n          this._renderer.setProperty(el, 'onclick', () => this._zone.run(() => this._lightbox.open(i, this._galleryId)));\n          if (el instanceof HTMLImageElement) {\n            // If element is type of img use the src property\n            return {\n              src: el.getAttribute('imageSrc') || el.src,\n              thumb: el.getAttribute('thumbSrc') || el.src\n            };\n          } else {\n            // Otherwise, use element background-image url\n            const elStyle = el.currentStyle || this._document.defaultView.getComputedStyle(el, null);\n            const background = elStyle.backgroundImage.slice(4, -1).replace(/\"/g, '');\n            return {\n              src: el.getAttribute('imageSrc') || background,\n              thumb: el.getAttribute('thumbSrc') || background\n            };\n          }\n        }), tap(data => images.push(new ImageItem(data))), finalize(() => galleryRef.load(images)));\n      } else {\n        return EMPTY;\n      }\n    })).subscribe();\n    // Observe content changes\n    this._observer$ = new MutationObserver(() => this._detector$.next());\n    this._observer$.observe(this._el.nativeElement, {\n      childList: true,\n      subtree: true\n    });\n  }\n}\nGallerizeDirective.ɵfac = function GallerizeDirective_Factory(t) {\n  return new (t || GallerizeDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$1.Gallery), i0.ɵɵdirectiveInject(Lightbox), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1$1.GalleryComponent, 11));\n};\nGallerizeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GallerizeDirective,\n  selectors: [[\"\", \"gallerize\", \"\"]],\n  inputs: {\n    gallerize: \"gallerize\",\n    selector: \"selector\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GallerizeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[gallerize]'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1$1.Gallery\n    }, {\n      type: Lightbox\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1$1.GalleryComponent,\n      decorators: [{\n        type: Host\n      }, {\n        type: Self\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    gallerize: [{\n      type: Input\n    }],\n    selector: [{\n      type: Input\n    }]\n  });\n})();\nclass LightboxDirective {\n  constructor(_lightbox, _el, _renderer) {\n    this._lightbox = _lightbox;\n    this._el = _el;\n    this._renderer = _renderer;\n    this.clickEvent = Subscription.EMPTY;\n    this.index = 0;\n    this.id = 'root';\n  }\n  ngOnInit() {\n    this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\n    this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(tap(() => this._lightbox.open(this.index, this.id))).subscribe();\n  }\n  ngOnDestroy() {\n    this.clickEvent.unsubscribe();\n  }\n}\nLightboxDirective.ɵfac = function LightboxDirective_Factory(t) {\n  return new (t || LightboxDirective)(i0.ɵɵdirectiveInject(Lightbox), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nLightboxDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LightboxDirective,\n  selectors: [[\"\", \"lightbox\", \"\"]],\n  inputs: {\n    index: [\"lightbox\", \"index\"],\n    id: [\"gallery\", \"id\"]\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LightboxDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lightbox]'\n    }]\n  }], function () {\n    return [{\n      type: Lightbox\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    index: [{\n      type: Input,\n      args: ['lightbox']\n    }],\n    id: [{\n      type: Input,\n      args: ['gallery']\n    }]\n  });\n})();\nclass LightboxModule {\n  static withConfig(config) {\n    return {\n      ngModule: LightboxModule,\n      providers: [{\n        provide: LIGHTBOX_CONFIG,\n        useValue: config\n      }]\n    };\n  }\n}\nLightboxModule.ɵfac = function LightboxModule_Factory(t) {\n  return new (t || LightboxModule)();\n};\nLightboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LightboxModule\n});\nLightboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [Lightbox],\n  imports: [[OverlayModule, GalleryModule, A11yModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LightboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, GalleryModule, A11yModule],\n      declarations: [LightboxComponent, LightboxDirective, GallerizeDirective],\n      exports: [LightboxDirective, GallerizeDirective],\n      providers: [Lightbox]\n    }]\n  }], null, null);\n})();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { GallerizeDirective, LIGHTBOX_CONFIG, Lightbox, LightboxComponent, LightboxDirective, LightboxModule };","map":{"version":3,"names":["i0","InjectionToken","Component","ChangeDetectionStrategy","Optional","Inject","Injectable","PLATFORM_ID","Directive","Host","Self","Input","NgModule","DOCUMENT","isPlatformBrowser","trigger","state","style","transition","animate","i1","A11yModule","i2","i1$1","ImageItem","GalleryModule","ComponentPortal","ESCAPE","RIGHT_ARROW","LEFT_ARROW","Subject","from","EMPTY","Subscription","fromEvent","i2$1","OverlayModule","debounceTime","switchMap","map","tap","finalize","LIGHTBOX_CONFIG","lightboxAnimation","opacity","transform","LightboxComponent","constructor","_document","_focusTrapFactory","_elementRef","sanitizer","_savePreviouslyFocusedElement","onAnimationDone","event","toState","_trapFocus","overlayRef","dispose","_restoreFocus","_focusTrap","create","nativeElement","focusInitialElementWhenReady","_elementFocusedBeforeDialogWasOpened","activeElement","focus","Promise","resolve","then","toFocus","destroy","ɵfac","ConfigurableFocusTrapFactory","ElementRef","DomSanitizer","ɵcmp","GalleryComponent","type","args","selector","changeDetection","OnPush","animations","template","host","styles","undefined","decorators","defaultConfig","backdropClass","panelClass","hasBackdrop","keyboardShortcuts","role","startAnimationTime","exitAnimationTime","closeIcon","Lightbox","config","_gallery","_overlay","opened","closed","_config","setConfig","open","i","id","overlayConfig","positionStrategy","position","global","centerHorizontally","centerVertically","scrollStrategy","scrollStrategies","block","disposeOnNavigation","galleryRef","ref","set","_overlayRef","attachments","subscribe","next","detachments","galleryPortal","lightboxRef","attach","instance","ariaLabel","ariaLabelledBy","ariaDescribedBy","backdropClick","close","keydownEvents","keyCode","prev","hasAttached","detach","Gallery","Overlay","ɵprov","GallerizeDirective","_zone","_el","_lightbox","_renderer","platform","_galleryCmp","_galleryId","_mode","ngOnInit","runOutsideAngular","gallerize","detectorMode","galleryMode","ngOnDestroy","_detector$","complete","_observer$","disconnect","_itemClick$","unsubscribe","_itemChange$","itemClick","itemsChanged","load","items","pipe","imageElements","querySelectorAll","length","images","el","setStyle","setProperty","run","HTMLImageElement","src","getAttribute","thumb","elStyle","currentStyle","defaultView","getComputedStyle","background","backgroundImage","slice","replace","data","push","MutationObserver","observe","childList","subtree","NgZone","Renderer2","ɵdir","Object","LightboxDirective","clickEvent","index","LightboxModule","withConfig","ngModule","providers","provide","useValue","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng-gallery/fesm2020/ng-gallery-lightbox.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\r\nimport { InjectionToken, Component, ChangeDetectionStrategy, Optional, Inject, Injectable, PLATFORM_ID, Directive, Host, Self, Input, NgModule } from '@angular/core';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport * as i1 from '@angular/cdk/a11y';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport * as i2 from '@angular/platform-browser';\r\nimport * as i1$1 from 'ng-gallery';\r\nimport { ImageItem, GalleryModule } from 'ng-gallery';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { ESCAPE, RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\r\nimport { Subject, from, EMPTY, Subscription, fromEvent } from 'rxjs';\r\nimport * as i2$1 from '@angular/cdk/overlay';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { debounceTime, switchMap, map, tap, finalize } from 'rxjs/operators';\r\n\r\nconst LIGHTBOX_CONFIG = new InjectionToken('LIGHTBOX_CONFIG');\r\n\r\nconst lightboxAnimation = trigger('lightbox', [\r\n    state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\r\n    state('enter', style({ transform: 'none' })),\r\n    transition('* => enter', animate('{{startAnimationTime}}ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\r\n    transition('* => void, * => exit', animate('{{exitAnimationTime}}ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\r\n]);\r\n\r\nclass LightboxComponent {\r\n    constructor(_document, _focusTrapFactory, _elementRef, sanitizer) {\r\n        this._document = _document;\r\n        this._focusTrapFactory = _focusTrapFactory;\r\n        this._elementRef = _elementRef;\r\n        this.sanitizer = sanitizer;\r\n        /** State of the lightbox animation. */\r\n        this.state = 'enter';\r\n        this._savePreviouslyFocusedElement();\r\n    }\r\n    /** Callback, invoked whenever an animation on the host completes. */\r\n    onAnimationDone(event) {\r\n        if (event.toState === 'enter') {\r\n            this._trapFocus();\r\n        }\r\n        else {\r\n            this.overlayRef.dispose();\r\n            this._restoreFocus();\r\n        }\r\n    }\r\n    /** Moves the focus inside the focus trap. */\r\n    _trapFocus() {\r\n        if (!this._focusTrap) {\r\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\r\n        }\r\n        // If were to attempt to focus immediately, then the content of the lightbox would not yet be\r\n        // ready in instances where change detection has to run first. To deal with this, we simply\r\n        // wait for the microtask queue to be empty.\r\n        this._focusTrap.focusInitialElementWhenReady();\r\n    }\r\n    /** Saves a reference to the element that was focused before the lightbox was opened. */\r\n    _savePreviouslyFocusedElement() {\r\n        if (this._document) {\r\n            this._elementFocusedBeforeDialogWasOpened = this._document.activeElement;\r\n            // Note that there is no focus method when rendering on the server.\r\n            if (this._elementRef.nativeElement.focus) {\r\n                // Move focus onto the lightbox immediately in order to prevent the user from accidentally\r\n                // opening multiple dialogs at the same time. Needs to be async, because the element\r\n                // may not be focusable immediately.\r\n                Promise.resolve().then(() => this._elementRef.nativeElement.focus());\r\n            }\r\n        }\r\n    }\r\n    /** Restores focus to the element that was focused before the lightbox opened. */\r\n    _restoreFocus() {\r\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\r\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n        if (toFocus && typeof toFocus.focus === 'function') {\r\n            toFocus.focus();\r\n        }\r\n        if (this._focusTrap) {\r\n            this._focusTrap.destroy();\r\n        }\r\n    }\r\n}\r\nLightboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxComponent, deps: [{ token: DOCUMENT, optional: true }, { token: i1.ConfigurableFocusTrapFactory }, { token: i0.ElementRef }, { token: i2.DomSanitizer }], target: i0.ɵɵFactoryTarget.Component });\r\nLightboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: LightboxComponent, selector: \"lightbox\", host: { attributes: { \"tabindex\": \"-1\", \"aria-modal\": \"true\" }, listeners: { \"@lightbox.done\": \"onAnimationDone($event)\" }, properties: { \"attr.id\": \"\\\"lightbox-\\\" + id\", \"attr.role\": \"role\", \"attr.aria-labelledby\": \"ariaLabel ? null : ariaLabelledBy\", \"attr.aria-label\": \"ariaLabel\", \"attr.aria-describedby\": \"ariaDescribedBy || null\", \"@lightbox\": \"{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }\" } }, ngImport: i0, template: `\r\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\r\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\r\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\r\n    </gallery>\r\n  `, isInline: true, styles: [\"::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}\\n\"], components: [{ type: i1$1.GalleryComponent, selector: \"gallery\", inputs: [\"id\", \"items\", \"nav\", \"dots\", \"loop\", \"thumb\", \"zoomOut\", \"counter\", \"dotsSize\", \"autoPlay\", \"gestures\", \"thumbWidth\", \"thumbHeight\", \"disableThumb\", \"panSensitivity\", \"playerInterval\", \"itemTemplate\", \"thumbTemplate\", \"thumbMode\", \"imageSize\", \"dotsPosition\", \"counterPosition\", \"slidingDirection\", \"loadingStrategy\", \"thumbPosition\", \"thumbView\", \"destroyRef\", \"skipInitConfig\"], outputs: [\"itemClick\", \"thumbClick\", \"playingChange\", \"indexChange\", \"itemsChange\", \"error\"] }], animations: [lightboxAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'lightbox', changeDetection: ChangeDetectionStrategy.OnPush, animations: [lightboxAnimation], template: `\r\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\r\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\r\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\r\n    </gallery>\r\n  `, host: {\r\n                        'tabindex': '-1',\r\n                        'aria-modal': 'true',\r\n                        '[attr.id]': '\"lightbox-\" + id',\r\n                        '[attr.role]': 'role',\r\n                        '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\r\n                        '[attr.aria-label]': 'ariaLabel',\r\n                        '[attr.aria-describedby]': 'ariaDescribedBy || null',\r\n                        '[@lightbox]': '{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }',\r\n                        '(@lightbox.done)': 'onAnimationDone($event)',\r\n                    }, styles: [\"::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{overflow:hidden;margin:0;display:block;width:100%;height:100%}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;top:0;left:0;bottom:0;right:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: i1.ConfigurableFocusTrapFactory }, { type: i0.ElementRef }, { type: i2.DomSanitizer }]; } });\r\n\r\nconst defaultConfig = {\r\n    backdropClass: 'g-backdrop',\r\n    panelClass: 'g-overlay',\r\n    hasBackdrop: true,\r\n    keyboardShortcuts: true,\r\n    role: 'lightbox',\r\n    startAnimationTime: 150,\r\n    exitAnimationTime: 75,\r\n    closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\r\n</svg>\r\n`\r\n};\r\n\r\nclass Lightbox {\r\n    constructor(config, _gallery, _overlay) {\r\n        this._gallery = _gallery;\r\n        this._overlay = _overlay;\r\n        /** Stream that emits when lightbox is opened */\r\n        this.opened = new Subject();\r\n        /** Stream that emits when lightbox is closed */\r\n        this.closed = new Subject();\r\n        this._config = config ? { ...defaultConfig, ...config } : defaultConfig;\r\n    }\r\n    /**\r\n     * Set Lightbox Config\r\n     * @param config - LightboxConfig\r\n     */\r\n    setConfig(config) {\r\n        this._config = { ...this._config, ...config };\r\n    }\r\n    /**\r\n     * Open Lightbox Overlay\r\n     * @param i - Current Index\r\n     * @param id - Gallery ID\r\n     * @param config - Lightbox Config\r\n     */\r\n    open(i = 0, id = 'lightbox', config) {\r\n        const _config = config ? { ...this._config, ...config } : this._config;\r\n        const overlayConfig = {\r\n            backdropClass: _config.backdropClass,\r\n            panelClass: _config.panelClass,\r\n            hasBackdrop: _config.hasBackdrop,\r\n            positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\r\n            scrollStrategy: this._overlay.scrollStrategies.block(),\r\n            disposeOnNavigation: true\r\n        };\r\n        const galleryRef = this._gallery.ref(id);\r\n        galleryRef.set(i);\r\n        this._overlayRef = this._overlay.create(overlayConfig);\r\n        // overlay opened event\r\n        this._overlayRef.attachments().subscribe(() => this.opened.next(id));\r\n        // overlay closed event\r\n        this._overlayRef.detachments().subscribe(() => this.closed.next(id));\r\n        // Attach gallery to the overlay\r\n        const galleryPortal = new ComponentPortal(LightboxComponent);\r\n        const lightboxRef = this._overlayRef.attach(galleryPortal);\r\n        lightboxRef.instance.id = id;\r\n        lightboxRef.instance.overlayRef = this._overlayRef;\r\n        lightboxRef.instance.closeIcon = this._config.closeIcon;\r\n        lightboxRef.instance.role = this._config.role;\r\n        lightboxRef.instance.ariaLabel = this._config.ariaLabel;\r\n        lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\r\n        lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\r\n        lightboxRef.instance.startAnimationTime = this._config.startAnimationTime;\r\n        lightboxRef.instance.exitAnimationTime = this._config.exitAnimationTime;\r\n        if (_config.hasBackdrop) {\r\n            this._overlayRef.backdropClick().subscribe(() => this.close());\r\n        }\r\n        // Add keyboard shortcuts\r\n        if (_config.keyboardShortcuts) {\r\n            this._overlayRef.keydownEvents().subscribe((event) => {\r\n                switch (event.keyCode) {\r\n                    case LEFT_ARROW:\r\n                        galleryRef.prev();\r\n                        break;\r\n                    case RIGHT_ARROW:\r\n                        galleryRef.next();\r\n                        break;\r\n                    case ESCAPE:\r\n                        this.close();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Close Lightbox Overlay\r\n     */\r\n    close() {\r\n        if (this._overlayRef.hasAttached()) {\r\n            this._overlayRef.detach();\r\n        }\r\n    }\r\n}\r\nLightbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: Lightbox, deps: [{ token: LIGHTBOX_CONFIG, optional: true }, { token: i1$1.Gallery }, { token: i2$1.Overlay }], target: i0.ɵɵFactoryTarget.Injectable });\r\nLightbox.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: Lightbox });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: Lightbox, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Inject,\r\n                    args: [LIGHTBOX_CONFIG]\r\n                }] }, { type: i1$1.Gallery }, { type: i2$1.Overlay }]; } });\r\n\r\nclass GallerizeDirective {\r\n    constructor(_zone, _el, _gallery, _lightbox, _renderer, platform, _document, _galleryCmp) {\r\n        this._zone = _zone;\r\n        this._el = _el;\r\n        this._gallery = _gallery;\r\n        this._lightbox = _lightbox;\r\n        this._renderer = _renderer;\r\n        this._document = _document;\r\n        this._galleryCmp = _galleryCmp;\r\n        /** Default gallery id */\r\n        this._galleryId = 'lightbox';\r\n        /** The selector used to query images elements */\r\n        this.selector = 'img';\r\n        // Set gallerize mode\r\n        if (isPlatformBrowser(platform)) {\r\n            this._mode = _galleryCmp ? \"gallery\" /* Gallery */ : \"detector\" /* Detector */;\r\n        }\r\n    }\r\n    ngOnInit() {\r\n        this._zone.runOutsideAngular(() => {\r\n            this._galleryId = this.gallerize || this._galleryId;\r\n            const ref = this._gallery.ref(this._galleryId);\r\n            switch (this._mode) {\r\n                case \"detector\" /* Detector */:\r\n                    this.detectorMode(ref);\r\n                    break;\r\n                case \"gallery\" /* Gallery */:\r\n                    this.galleryMode(ref);\r\n            }\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        switch (this._mode) {\r\n            case \"detector\" /* Detector */:\r\n                this._detector$.complete();\r\n                this._observer$.disconnect();\r\n                break;\r\n            case \"gallery\" /* Gallery */:\r\n                this._itemClick$.unsubscribe();\r\n                this._itemChange$.unsubscribe();\r\n        }\r\n    }\r\n    /** Gallery mode: means `gallerize` directive is used on `<gallery>` component\r\n     * Adds a click event to each gallery item so it opens in lightbox */\r\n    galleryMode(galleryRef) {\r\n        // Clone its items to the new gallery instance\r\n        this._itemClick$ = this._galleryCmp.galleryRef.itemClick.subscribe((i) => this._lightbox.open(i, this._galleryId));\r\n        this._itemChange$ = this._galleryCmp.galleryRef.itemsChanged.subscribe((state) => galleryRef.load(state.items));\r\n    }\r\n    /** Detector mode: means `gallerize` directive is used on a normal HTMLElement\r\n     *  Detects images and adds a click event to each image so it opens in the lightbox */\r\n    detectorMode(galleryRef) {\r\n        this._detector$ = new Subject();\r\n        // Query image elements\r\n        this._detector$.pipe(debounceTime(300), switchMap(() => {\r\n            /** get all img elements from content */\r\n            const imageElements = this._el.nativeElement.querySelectorAll(this.selector);\r\n            if (imageElements && imageElements.length) {\r\n                const images = [];\r\n                return from(imageElements).pipe(map((el, i) => {\r\n                    // Add click event to the image\r\n                    this._renderer.setStyle(el, 'cursor', 'pointer');\r\n                    this._renderer.setProperty(el, 'onclick', () => this._zone.run(() => this._lightbox.open(i, this._galleryId)));\r\n                    if (el instanceof HTMLImageElement) {\r\n                        // If element is type of img use the src property\r\n                        return {\r\n                            src: el.getAttribute('imageSrc') || el.src,\r\n                            thumb: el.getAttribute('thumbSrc') || el.src\r\n                        };\r\n                    }\r\n                    else {\r\n                        // Otherwise, use element background-image url\r\n                        const elStyle = el.currentStyle || this._document.defaultView.getComputedStyle(el, null);\r\n                        const background = elStyle.backgroundImage.slice(4, -1).replace(/\"/g, '');\r\n                        return {\r\n                            src: el.getAttribute('imageSrc') || background,\r\n                            thumb: el.getAttribute('thumbSrc') || background\r\n                        };\r\n                    }\r\n                }), tap((data) => images.push(new ImageItem(data))), finalize(() => galleryRef.load(images)));\r\n            }\r\n            else {\r\n                return EMPTY;\r\n            }\r\n        })).subscribe();\r\n        // Observe content changes\r\n        this._observer$ = new MutationObserver(() => this._detector$.next());\r\n        this._observer$.observe(this._el.nativeElement, { childList: true, subtree: true });\r\n    }\r\n}\r\nGallerizeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: GallerizeDirective, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1$1.Gallery }, { token: Lightbox }, { token: i0.Renderer2 }, { token: PLATFORM_ID }, { token: DOCUMENT }, { token: i1$1.GalleryComponent, host: true, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\r\nGallerizeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: GallerizeDirective, selector: \"[gallerize]\", inputs: { gallerize: \"gallerize\", selector: \"selector\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: GallerizeDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[gallerize]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1$1.Gallery }, { type: Lightbox }, { type: i0.Renderer2 }, { type: Object, decorators: [{\r\n                    type: Inject,\r\n                    args: [PLATFORM_ID]\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: i1$1.GalleryComponent, decorators: [{\r\n                    type: Host\r\n                }, {\r\n                    type: Self\r\n                }, {\r\n                    type: Optional\r\n                }] }]; }, propDecorators: { gallerize: [{\r\n                type: Input\r\n            }], selector: [{\r\n                type: Input\r\n            }] } });\r\n\r\nclass LightboxDirective {\r\n    constructor(_lightbox, _el, _renderer) {\r\n        this._lightbox = _lightbox;\r\n        this._el = _el;\r\n        this._renderer = _renderer;\r\n        this.clickEvent = Subscription.EMPTY;\r\n        this.index = 0;\r\n        this.id = 'root';\r\n    }\r\n    ngOnInit() {\r\n        this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\r\n        this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(tap(() => this._lightbox.open(this.index, this.id))).subscribe();\r\n    }\r\n    ngOnDestroy() {\r\n        this.clickEvent.unsubscribe();\r\n    }\r\n}\r\nLightboxDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxDirective, deps: [{ token: Lightbox }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\r\nLightboxDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: LightboxDirective, selector: \"[lightbox]\", inputs: { index: [\"lightbox\", \"index\"], id: [\"gallery\", \"id\"] }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[lightbox]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: Lightbox }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { index: [{\r\n                type: Input,\r\n                args: ['lightbox']\r\n            }], id: [{\r\n                type: Input,\r\n                args: ['gallery']\r\n            }] } });\r\n\r\nclass LightboxModule {\r\n    static withConfig(config) {\r\n        return {\r\n            ngModule: LightboxModule,\r\n            providers: [\r\n                {\r\n                    provide: LIGHTBOX_CONFIG,\r\n                    useValue: config\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\nLightboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nLightboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxModule, declarations: [LightboxComponent,\r\n        LightboxDirective,\r\n        GallerizeDirective], imports: [OverlayModule,\r\n        GalleryModule,\r\n        A11yModule], exports: [LightboxDirective,\r\n        GallerizeDirective] });\r\nLightboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxModule, providers: [\r\n        Lightbox\r\n    ], imports: [[\r\n            OverlayModule,\r\n            GalleryModule,\r\n            A11yModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LightboxModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        OverlayModule,\r\n                        GalleryModule,\r\n                        A11yModule\r\n                    ],\r\n                    declarations: [\r\n                        LightboxComponent,\r\n                        LightboxDirective,\r\n                        GallerizeDirective\r\n                    ],\r\n                    exports: [\r\n                        LightboxDirective,\r\n                        GallerizeDirective\r\n                    ],\r\n                    providers: [\r\n                        Lightbox\r\n                    ]\r\n                }]\r\n        }] });\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { GallerizeDirective, LIGHTBOX_CONFIG, Lightbox, LightboxComponent, LightboxDirective, LightboxModule };\r\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}