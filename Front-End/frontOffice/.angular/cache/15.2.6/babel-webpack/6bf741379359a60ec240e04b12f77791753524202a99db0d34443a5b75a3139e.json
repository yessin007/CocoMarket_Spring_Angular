{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function (d, b) {\n  for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/* tslint:enable:max-line-length */\n/**\r\n * Perform a side effect for every emission on the source Observable, but return\r\n * an Observable that is identical to the source.\r\n *\r\n * <span class=\"informal\">Intercepts each emission on the source and runs a\r\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\r\n *\r\n * <img src=\"./img/do.png\" width=\"100%\">\r\n *\r\n * Returns a mirrored Observable of the source Observable, but modified so that\r\n * the provided Observer is called to perform a side effect for every value,\r\n * error, and completion emitted by the source. Any errors that are thrown in\r\n * the aforementioned Observer or handlers are safely sent down the error path\r\n * of the output Observable.\r\n *\r\n * This operator is useful for debugging your Observables for the correct values\r\n * or performing other side effects.\r\n *\r\n * Note: this is different to a `subscribe` on the Observable. If the Observable\r\n * returned by `do` is not subscribed, the side effects specified by the\r\n * Observer will never happen. `do` therefore simply spies on existing\r\n * execution, it does not trigger an execution to happen like `subscribe` does.\r\n *\r\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var positions = clicks\r\n *   .do(ev => console.log(ev))\r\n *   .map(ev => ev.clientX);\r\n * positions.subscribe(x => console.log(x));\r\n *\r\n * @see {@link map}\r\n * @see {@link subscribe}\r\n *\r\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\r\n * callback for `next`.\r\n * @param {function} [error] Callback for errors in the source.\r\n * @param {function} [complete] Callback for the completion of the source.\r\n * @return {Observable} An Observable identical to the source, but runs the\r\n * specified Observer or callback(s) for each item.\r\n * @name tap\r\n */\nfunction tap(nextOrObserver, error, complete) {\n  return function tapOperatorFunction(source) {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\nexports.tap = tap;\nvar DoOperator = function () {\n  function DoOperator(nextOrObserver, error, complete) {\n    this.nextOrObserver = nextOrObserver;\n    this.error = error;\n    this.complete = complete;\n  }\n  DoOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  };\n  return DoOperator;\n}();\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\nvar DoSubscriber = function (_super) {\n  __extends(DoSubscriber, _super);\n  function DoSubscriber(destination, nextOrObserver, error, complete) {\n    _super.call(this, destination);\n    var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n    safeSubscriber.syncErrorThrowable = true;\n    this.add(safeSubscriber);\n    this.safeSubscriber = safeSubscriber;\n  }\n  DoSubscriber.prototype._next = function (value) {\n    var safeSubscriber = this.safeSubscriber;\n    safeSubscriber.next(value);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.next(value);\n    }\n  };\n  DoSubscriber.prototype._error = function (err) {\n    var safeSubscriber = this.safeSubscriber;\n    safeSubscriber.error(err);\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.error(err);\n    }\n  };\n  DoSubscriber.prototype._complete = function () {\n    var safeSubscriber = this.safeSubscriber;\n    safeSubscriber.complete();\n    if (safeSubscriber.syncErrorThrown) {\n      this.destination.error(safeSubscriber.syncErrorValue);\n    } else {\n      this.destination.complete();\n    }\n  };\n  return DoSubscriber;\n}(Subscriber_1.Subscriber);","map":{"version":3,"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","Object","create","Subscriber_1","require","tap","nextOrObserver","error","complete","tapOperatorFunction","source","lift","DoOperator","exports","call","subscriber","subscribe","DoSubscriber","_super","destination","safeSubscriber","Subscriber","syncErrorThrowable","add","_next","value","next","syncErrorThrown","syncErrorValue","_error","err","_complete"],"sources":["C:/Users/HP/Desktop/4SE3/PidevSym/PiDev_Spring_Angular/Front-End/frontOffice/node_modules/ng5-slider/node_modules/rxjs/operators/tap.js"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Perform a side effect for every emission on the source Observable, but return\r\n * an Observable that is identical to the source.\r\n *\r\n * <span class=\"informal\">Intercepts each emission on the source and runs a\r\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\r\n *\r\n * <img src=\"./img/do.png\" width=\"100%\">\r\n *\r\n * Returns a mirrored Observable of the source Observable, but modified so that\r\n * the provided Observer is called to perform a side effect for every value,\r\n * error, and completion emitted by the source. Any errors that are thrown in\r\n * the aforementioned Observer or handlers are safely sent down the error path\r\n * of the output Observable.\r\n *\r\n * This operator is useful for debugging your Observables for the correct values\r\n * or performing other side effects.\r\n *\r\n * Note: this is different to a `subscribe` on the Observable. If the Observable\r\n * returned by `do` is not subscribed, the side effects specified by the\r\n * Observer will never happen. `do` therefore simply spies on existing\r\n * execution, it does not trigger an execution to happen like `subscribe` does.\r\n *\r\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var positions = clicks\r\n *   .do(ev => console.log(ev))\r\n *   .map(ev => ev.clientX);\r\n * positions.subscribe(x => console.log(x));\r\n *\r\n * @see {@link map}\r\n * @see {@link subscribe}\r\n *\r\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\r\n * callback for `next`.\r\n * @param {function} [error] Callback for errors in the source.\r\n * @param {function} [complete] Callback for the completion of the source.\r\n * @return {Observable} An Observable identical to the source, but runs the\r\n * specified Observer or callback(s) for each item.\r\n * @name tap\r\n */\r\nfunction tap(nextOrObserver, error, complete) {\r\n    return function tapOperatorFunction(source) {\r\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\r\n    };\r\n}\r\nexports.tap = tap;\r\nvar DoOperator = (function () {\r\n    function DoOperator(nextOrObserver, error, complete) {\r\n        this.nextOrObserver = nextOrObserver;\r\n        this.error = error;\r\n        this.complete = complete;\r\n    }\r\n    DoOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\r\n    };\r\n    return DoOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar DoSubscriber = (function (_super) {\r\n    __extends(DoSubscriber, _super);\r\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\r\n        _super.call(this, destination);\r\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\r\n        safeSubscriber.syncErrorThrowable = true;\r\n        this.add(safeSubscriber);\r\n        this.safeSubscriber = safeSubscriber;\r\n    }\r\n    DoSubscriber.prototype._next = function (value) {\r\n        var safeSubscriber = this.safeSubscriber;\r\n        safeSubscriber.next(value);\r\n        if (safeSubscriber.syncErrorThrown) {\r\n            this.destination.error(safeSubscriber.syncErrorValue);\r\n        }\r\n        else {\r\n            this.destination.next(value);\r\n        }\r\n    };\r\n    DoSubscriber.prototype._error = function (err) {\r\n        var safeSubscriber = this.safeSubscriber;\r\n        safeSubscriber.error(err);\r\n        if (safeSubscriber.syncErrorThrown) {\r\n            this.destination.error(safeSubscriber.syncErrorValue);\r\n        }\r\n        else {\r\n            this.destination.error(err);\r\n        }\r\n    };\r\n    DoSubscriber.prototype._complete = function () {\r\n        var safeSubscriber = this.safeSubscriber;\r\n        safeSubscriber.complete();\r\n        if (safeSubscriber.syncErrorThrown) {\r\n            this.destination.error(safeSubscriber.syncErrorValue);\r\n        }\r\n        else {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return DoSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}