{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { map, delay, withLatestFrom } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-loading-bar/core\";\nimport * as i2 from \"@ngx-translate/core\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"./shared/components/layout-box/layout-box.component\";\nimport * as i5 from \"./shared/components/tap-to-top/tap-to-top.component\";\nexport class AppComponent {\n  constructor(platformId, loader, translate) {\n    this.platformId = platformId;\n    this.loader = loader;\n    // For Progressbar\n    this.loaders = this.loader.progress$.pipe(delay(1000), withLatestFrom(this.loader.progress$), map(v => v[1]));\n    if (isPlatformBrowser(this.platformId)) {\n      translate.setDefaultLang('en');\n      translate.addLangs(['en', 'fr']);\n    }\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i1.LoadingBarService), i0.ɵɵdirectiveInject(i2.TranslateService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"ngx-loading-bar\")(1, \"router-outlet\")(2, \"app-tap-to-top\")(3, \"app-layout-box\");\n    }\n  },\n  dependencies: [i1.LoadingBarComponent, i3.RouterOutlet, i4.LayoutBoxComponent, i5.TapToTopComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,WAAW,QAAgB,eAAe;AAC9D,SAASC,iBAAiB,QAAQ,iBAAiB;AAEnD,SAASC,GAAG,EAAEC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;;;;;;;AAQ3D,OAAM,MAAOC,YAAY;EASvBC,YAAyCC,UAAkB,EACjDC,MAAyB,EAAEC,SAA2B;IADvB,eAAU,GAAVF,UAAU;IACzC,WAAM,GAANC,MAAM;IARhB;IACA,YAAO,GAAG,IAAI,CAACA,MAAM,CAACE,SAAS,CAACC,IAAI,CAClCR,KAAK,CAAC,IAAI,CAAC,EACXC,cAAc,CAAC,IAAI,CAACI,MAAM,CAACE,SAAS,CAAC,EACrCR,GAAG,CAACU,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CACf;IAIC,IAAIX,iBAAiB,CAAC,IAAI,CAACM,UAAU,CAAC,EAAE;MACtCE,SAAS,CAACI,cAAc,CAAC,IAAI,CAAC;MAC9BJ,SAAS,CAACK,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;;EAEpC;;AAfWT,YAAY;mBAAZA,YAAY,uBASHL,WAAW;AAAA;AATpBK,YAAY;QAAZA,YAAY;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MCXzBC,kCAAmC","names":["PLATFORM_ID","isPlatformBrowser","map","delay","withLatestFrom","AppComponent","constructor","platformId","loader","translate","progress$","pipe","v","setDefaultLang","addLangs","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\app.component.ts","C:\\Users\\HP\\Desktop\\4SE3\\PidevSym\\PiDev_Spring_Angular\\Front-End\\frontOffice\\src\\app\\app.component.html"],"sourcesContent":["import { Component, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { LoadingBarService } from '@ngx-loading-bar/core';\r\nimport { map, delay, withLatestFrom } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  \r\n  // For Progressbar\r\n  loaders = this.loader.progress$.pipe(\r\n    delay(1000),\r\n    withLatestFrom(this.loader.progress$),\r\n    map(v => v[1]),\r\n  );\r\n  \r\n  constructor(@Inject(PLATFORM_ID) private platformId: Object,\r\n    private loader: LoadingBarService, translate: TranslateService) {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      translate.setDefaultLang('en');\r\n      translate.addLangs(['en', 'fr']);\r\n    }\r\n  }\r\n\r\n}\r\n","<ngx-loading-bar></ngx-loading-bar>\r\n<router-outlet></router-outlet>\r\n<app-tap-to-top></app-tap-to-top>\r\n<app-layout-box></app-layout-box>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}