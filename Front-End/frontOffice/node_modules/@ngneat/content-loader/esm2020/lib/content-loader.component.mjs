import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
function uid() {
    return Math.random().toString(36).substring(2);
}
export class ContentLoaderComponent {
    constructor() {
        this.fixedId = uid();
        this.idClip = `${this.fixedId}-diff`;
        this.idGradient = `${this.fixedId}-animated-diff`;
        this.idAria = `${this.fixedId}-aria`;
        this.animate = true;
        this.baseUrl = '';
        this.speed = 1.2;
        this.viewBox = '0 0 400 130';
        this.gradientRatio = 2;
        this.backgroundColor = '#f5f6f7';
        this.backgroundOpacity = 1;
        this.foregroundColor = '#eee';
        this.foregroundOpacity = 1;
        this.rtl = false;
        this.interval = 0.25;
        this.style = {};
        this.animationValues = [];
    }
    ngOnInit() {
        this.clipPath = `url(${this.baseUrl}#${this.idClip})`;
        this.fillStyle = { fill: `url(${this.baseUrl}#${this.idGradient})` };
        this.style = this.rtl ? { ...this.style, ...{ transform: 'scaleX(-1)' } } : this.style;
        this.duration = `${this.speed}s`;
        this.keyTimes = `0; ${this.interval}; 1`;
        this.animationValues = [
            `${-this.gradientRatio}; ${-this.gradientRatio}; 1`,
            `${-this.gradientRatio / 2}; ${-this.gradientRatio / 2}; ${1 + this.gradientRatio / 2}`,
            `0; 0; ${1 + this.gradientRatio}`
        ];
    }
}
/** @nocollapse */ /** @nocollapse */ ContentLoaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.1", ngImport: i0, type: ContentLoaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
/** @nocollapse */ /** @nocollapse */ ContentLoaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.1", type: ContentLoaderComponent, selector: "content-loader", inputs: { animate: "animate", baseUrl: "baseUrl", speed: "speed", viewBox: "viewBox", gradientRatio: "gradientRatio", backgroundColor: "backgroundColor", backgroundOpacity: "backgroundOpacity", foregroundColor: "foregroundColor", foregroundOpacity: "foregroundOpacity", rtl: "rtl", interval: "interval", style: "style" }, ngImport: i0, template: "<svg [attr.viewBox]=\"viewBox\" [ngStyle]=\"style\">\n  <rect role=\"presentation\" [attr.clip-path]=\"clipPath\" [ngStyle]=\"fillStyle\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n\n  <defs role=\"presentation\">\n    <clipPath [attr.id]=\"idClip\">\n      <ng-content></ng-content>\n    </clipPath>\n\n    <linearGradient [attr.id]=\"idGradient\">\n      <stop offset=\"0%\" [attr.stop-color]=\"backgroundColor\" [attr.stop-opacity]=\"backgroundOpacity\">\n        <animate\n          *ngIf=\"animate\"\n          [attr.keyTimes]=\"keyTimes\"\n          attributeName=\"offset\"\n          [attr.values]=\"animationValues[0]\"\n          [attr.dur]=\"duration\"\n          repeatCount=\"indefinite\"\n        />\n      </stop>\n\n      <stop offset=\"50%\" [attr.stop-color]=\"foregroundColor\" [attr.stop-opacity]=\"foregroundOpacity\">\n        <animate\n          *ngIf=\"animate\"\n          attributeName=\"offset\"\n          [attr.keyTimes]=\"keyTimes\"\n          [attr.values]=\"animationValues[1]\"\n          [attr.dur]=\"duration\"\n          repeatCount=\"indefinite\"\n        />\n      </stop>\n\n      <stop offset=\"100%\" [attr.stop-color]=\"backgroundColor\" [attr.stop-opacity]=\"backgroundOpacity\">\n        <animate\n          *ngIf=\"animate\"\n          attributeName=\"offset\"\n          [attr.keyTimes]=\"keyTimes\"\n          [attr.values]=\"animationValues[2]\"\n          [attr.dur]=\"duration\"\n          repeatCount=\"indefinite\"\n        />\n      </stop>\n    </linearGradient>\n  </defs>\n</svg>\n", styles: [":host{display:block}\n"], directives: [{ type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.1", ngImport: i0, type: ContentLoaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'content-loader', changeDetection: ChangeDetectionStrategy.OnPush, styles: [
                        `
      :host {
        display: block;
      }
    `
                    ], template: "<svg [attr.viewBox]=\"viewBox\" [ngStyle]=\"style\">\n  <rect role=\"presentation\" [attr.clip-path]=\"clipPath\" [ngStyle]=\"fillStyle\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" />\n\n  <defs role=\"presentation\">\n    <clipPath [attr.id]=\"idClip\">\n      <ng-content></ng-content>\n    </clipPath>\n\n    <linearGradient [attr.id]=\"idGradient\">\n      <stop offset=\"0%\" [attr.stop-color]=\"backgroundColor\" [attr.stop-opacity]=\"backgroundOpacity\">\n        <animate\n          *ngIf=\"animate\"\n          [attr.keyTimes]=\"keyTimes\"\n          attributeName=\"offset\"\n          [attr.values]=\"animationValues[0]\"\n          [attr.dur]=\"duration\"\n          repeatCount=\"indefinite\"\n        />\n      </stop>\n\n      <stop offset=\"50%\" [attr.stop-color]=\"foregroundColor\" [attr.stop-opacity]=\"foregroundOpacity\">\n        <animate\n          *ngIf=\"animate\"\n          attributeName=\"offset\"\n          [attr.keyTimes]=\"keyTimes\"\n          [attr.values]=\"animationValues[1]\"\n          [attr.dur]=\"duration\"\n          repeatCount=\"indefinite\"\n        />\n      </stop>\n\n      <stop offset=\"100%\" [attr.stop-color]=\"backgroundColor\" [attr.stop-opacity]=\"backgroundOpacity\">\n        <animate\n          *ngIf=\"animate\"\n          attributeName=\"offset\"\n          [attr.keyTimes]=\"keyTimes\"\n          [attr.values]=\"animationValues[2]\"\n          [attr.dur]=\"duration\"\n          repeatCount=\"indefinite\"\n        />\n      </stop>\n    </linearGradient>\n  </defs>\n</svg>\n" }]
        }], propDecorators: { animate: [{
                type: Input
            }], baseUrl: [{
                type: Input
            }], speed: [{
                type: Input
            }], viewBox: [{
                type: Input
            }], gradientRatio: [{
                type: Input
            }], backgroundColor: [{
                type: Input
            }], backgroundOpacity: [{
                type: Input
            }], foregroundColor: [{
                type: Input
            }], foregroundOpacity: [{
                type: Input
            }], rtl: [{
                type: Input
            }], interval: [{
                type: Input
            }], style: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1sb2FkZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmduZWF0L2NvbnRlbnQtbG9hZGVyL3NyYy9saWIvY29udGVudC1sb2FkZXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmduZWF0L2NvbnRlbnQtbG9hZGVyL3NyYy9saWIvY29udGVudC1sb2FkZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQUUxRSxTQUFTLEdBQUc7SUFDVixPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2pELENBQUM7QUFjRCxNQUFNLE9BQU8sc0JBQXNCO0lBWm5DO1FBYVUsWUFBTyxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBRXhCLFdBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxPQUFPLE9BQU8sQ0FBQztRQUNoQyxlQUFVLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxnQkFBZ0IsQ0FBQztRQUM3QyxXQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxPQUFPLENBQUM7UUFFdkIsWUFBTyxHQUFHLElBQUksQ0FBQztRQUVmLFlBQU8sR0FBRyxFQUFFLENBQUM7UUFFYixVQUFLLEdBQUcsR0FBRyxDQUFDO1FBRVosWUFBTyxHQUFXLGFBQWEsQ0FBQztRQUVoQyxrQkFBYSxHQUFHLENBQUMsQ0FBQztRQUVsQixvQkFBZSxHQUFHLFNBQVMsQ0FBQztRQUM1QixzQkFBaUIsR0FBRyxDQUFDLENBQUM7UUFFdEIsb0JBQWUsR0FBRyxNQUFNLENBQUM7UUFDekIsc0JBQWlCLEdBQUcsQ0FBQyxDQUFDO1FBRXRCLFFBQUcsR0FBRyxLQUFLLENBQUM7UUFFWixhQUFRLEdBQUcsSUFBSSxDQUFDO1FBRWhCLFVBQUssR0FBRyxFQUFFLENBQUM7UUFFcEIsb0JBQWUsR0FBRyxFQUFFLENBQUM7S0FxQnRCO0lBYkMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQztRQUN0RCxJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsSUFBSSxFQUFFLE9BQU8sSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNyRSxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUV2RixJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxJQUFJLENBQUMsUUFBUSxLQUFLLENBQUM7UUFDekMsSUFBSSxDQUFDLGVBQWUsR0FBRztZQUNyQixHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLEtBQUs7WUFDbkQsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxFQUFFO1lBQ3ZGLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQyxhQUFhLEVBQUU7U0FDbEMsQ0FBQztJQUNKLENBQUM7O3lKQWpEVSxzQkFBc0I7NklBQXRCLHNCQUFzQix3WENsQm5DLDJnREE0Q0E7MkZEMUJhLHNCQUFzQjtrQkFabEMsU0FBUzsrQkFDRSxnQkFBZ0IsbUJBRVQsdUJBQXVCLENBQUMsTUFBTSxVQUN2Qzt3QkFDTjs7OztLQUlDO3FCQUNGOzhCQVNRLE9BQU87c0JBQWYsS0FBSztnQkFFRyxPQUFPO3NCQUFmLEtBQUs7Z0JBRUcsS0FBSztzQkFBYixLQUFLO2dCQUVHLE9BQU87c0JBQWYsS0FBSztnQkFFRyxhQUFhO3NCQUFyQixLQUFLO2dCQUVHLGVBQWU7c0JBQXZCLEtBQUs7Z0JBQ0csaUJBQWlCO3NCQUF6QixLQUFLO2dCQUVHLGVBQWU7c0JBQXZCLEtBQUs7Z0JBQ0csaUJBQWlCO3NCQUF6QixLQUFLO2dCQUVHLEdBQUc7c0JBQVgsS0FBSztnQkFFRyxRQUFRO3NCQUFoQixLQUFLO2dCQUVHLEtBQUs7c0JBQWIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmZ1bmN0aW9uIHVpZCgpIHtcbiAgcmV0dXJuIE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cmluZygyKTtcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29udGVudC1sb2FkZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vY29udGVudC1sb2FkZXIuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgc3R5bGVzOiBbXG4gICAgYFxuICAgICAgOmhvc3Qge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICBgXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQ29udGVudExvYWRlckNvbXBvbmVudCB7XG4gIHByaXZhdGUgZml4ZWRJZCA9IHVpZCgpO1xuXG4gIGlkQ2xpcCA9IGAke3RoaXMuZml4ZWRJZH0tZGlmZmA7XG4gIGlkR3JhZGllbnQgPSBgJHt0aGlzLmZpeGVkSWR9LWFuaW1hdGVkLWRpZmZgO1xuICBpZEFyaWEgPSBgJHt0aGlzLmZpeGVkSWR9LWFyaWFgO1xuXG4gIEBJbnB1dCgpIGFuaW1hdGUgPSB0cnVlO1xuXG4gIEBJbnB1dCgpIGJhc2VVcmwgPSAnJztcblxuICBASW5wdXQoKSBzcGVlZCA9IDEuMjtcblxuICBASW5wdXQoKSB2aWV3Qm94OiBzdHJpbmcgPSAnMCAwIDQwMCAxMzAnO1xuXG4gIEBJbnB1dCgpIGdyYWRpZW50UmF0aW8gPSAyO1xuXG4gIEBJbnB1dCgpIGJhY2tncm91bmRDb2xvciA9ICcjZjVmNmY3JztcbiAgQElucHV0KCkgYmFja2dyb3VuZE9wYWNpdHkgPSAxO1xuXG4gIEBJbnB1dCgpIGZvcmVncm91bmRDb2xvciA9ICcjZWVlJztcbiAgQElucHV0KCkgZm9yZWdyb3VuZE9wYWNpdHkgPSAxO1xuXG4gIEBJbnB1dCgpIHJ0bCA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIGludGVydmFsID0gMC4yNTtcblxuICBASW5wdXQoKSBzdHlsZSA9IHt9O1xuXG4gIGFuaW1hdGlvblZhbHVlcyA9IFtdO1xuXG4gIGNsaXBQYXRoOiBzdHJpbmc7XG4gIGZpbGxTdHlsZTogb2JqZWN0O1xuICBkdXJhdGlvbjogc3RyaW5nO1xuICBrZXlUaW1lczogc3RyaW5nO1xuICBydGxTdHlsZTogb2JqZWN0IHwgbnVsbDtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmNsaXBQYXRoID0gYHVybCgke3RoaXMuYmFzZVVybH0jJHt0aGlzLmlkQ2xpcH0pYDtcbiAgICB0aGlzLmZpbGxTdHlsZSA9IHsgZmlsbDogYHVybCgke3RoaXMuYmFzZVVybH0jJHt0aGlzLmlkR3JhZGllbnR9KWAgfTtcbiAgICB0aGlzLnN0eWxlID0gdGhpcy5ydGwgPyB7IC4uLnRoaXMuc3R5bGUsIC4uLnsgdHJhbnNmb3JtOiAnc2NhbGVYKC0xKScgfSB9IDogdGhpcy5zdHlsZTtcblxuICAgIHRoaXMuZHVyYXRpb24gPSBgJHt0aGlzLnNwZWVkfXNgO1xuICAgIHRoaXMua2V5VGltZXMgPSBgMDsgJHt0aGlzLmludGVydmFsfTsgMWA7XG4gICAgdGhpcy5hbmltYXRpb25WYWx1ZXMgPSBbXG4gICAgICBgJHstdGhpcy5ncmFkaWVudFJhdGlvfTsgJHstdGhpcy5ncmFkaWVudFJhdGlvfTsgMWAsXG4gICAgICBgJHstdGhpcy5ncmFkaWVudFJhdGlvIC8gMn07ICR7LXRoaXMuZ3JhZGllbnRSYXRpbyAvIDJ9OyAkezEgKyB0aGlzLmdyYWRpZW50UmF0aW8gLyAyfWAsXG4gICAgICBgMDsgMDsgJHsxICsgdGhpcy5ncmFkaWVudFJhdGlvfWBcbiAgICBdO1xuICB9XG59XG4iLCI8c3ZnIFthdHRyLnZpZXdCb3hdPVwidmlld0JveFwiIFtuZ1N0eWxlXT1cInN0eWxlXCI+XG4gIDxyZWN0IHJvbGU9XCJwcmVzZW50YXRpb25cIiBbYXR0ci5jbGlwLXBhdGhdPVwiY2xpcFBhdGhcIiBbbmdTdHlsZV09XCJmaWxsU3R5bGVcIiB4PVwiMFwiIHk9XCIwXCIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PVwiMTAwJVwiIC8+XG5cbiAgPGRlZnMgcm9sZT1cInByZXNlbnRhdGlvblwiPlxuICAgIDxjbGlwUGF0aCBbYXR0ci5pZF09XCJpZENsaXBcIj5cbiAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICA8L2NsaXBQYXRoPlxuXG4gICAgPGxpbmVhckdyYWRpZW50IFthdHRyLmlkXT1cImlkR3JhZGllbnRcIj5cbiAgICAgIDxzdG9wIG9mZnNldD1cIjAlXCIgW2F0dHIuc3RvcC1jb2xvcl09XCJiYWNrZ3JvdW5kQ29sb3JcIiBbYXR0ci5zdG9wLW9wYWNpdHldPVwiYmFja2dyb3VuZE9wYWNpdHlcIj5cbiAgICAgICAgPGFuaW1hdGVcbiAgICAgICAgICAqbmdJZj1cImFuaW1hdGVcIlxuICAgICAgICAgIFthdHRyLmtleVRpbWVzXT1cImtleVRpbWVzXCJcbiAgICAgICAgICBhdHRyaWJ1dGVOYW1lPVwib2Zmc2V0XCJcbiAgICAgICAgICBbYXR0ci52YWx1ZXNdPVwiYW5pbWF0aW9uVmFsdWVzWzBdXCJcbiAgICAgICAgICBbYXR0ci5kdXJdPVwiZHVyYXRpb25cIlxuICAgICAgICAgIHJlcGVhdENvdW50PVwiaW5kZWZpbml0ZVwiXG4gICAgICAgIC8+XG4gICAgICA8L3N0b3A+XG5cbiAgICAgIDxzdG9wIG9mZnNldD1cIjUwJVwiIFthdHRyLnN0b3AtY29sb3JdPVwiZm9yZWdyb3VuZENvbG9yXCIgW2F0dHIuc3RvcC1vcGFjaXR5XT1cImZvcmVncm91bmRPcGFjaXR5XCI+XG4gICAgICAgIDxhbmltYXRlXG4gICAgICAgICAgKm5nSWY9XCJhbmltYXRlXCJcbiAgICAgICAgICBhdHRyaWJ1dGVOYW1lPVwib2Zmc2V0XCJcbiAgICAgICAgICBbYXR0ci5rZXlUaW1lc109XCJrZXlUaW1lc1wiXG4gICAgICAgICAgW2F0dHIudmFsdWVzXT1cImFuaW1hdGlvblZhbHVlc1sxXVwiXG4gICAgICAgICAgW2F0dHIuZHVyXT1cImR1cmF0aW9uXCJcbiAgICAgICAgICByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIlxuICAgICAgICAvPlxuICAgICAgPC9zdG9wPlxuXG4gICAgICA8c3RvcCBvZmZzZXQ9XCIxMDAlXCIgW2F0dHIuc3RvcC1jb2xvcl09XCJiYWNrZ3JvdW5kQ29sb3JcIiBbYXR0ci5zdG9wLW9wYWNpdHldPVwiYmFja2dyb3VuZE9wYWNpdHlcIj5cbiAgICAgICAgPGFuaW1hdGVcbiAgICAgICAgICAqbmdJZj1cImFuaW1hdGVcIlxuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU9XCJvZmZzZXRcIlxuICAgICAgICAgIFthdHRyLmtleVRpbWVzXT1cImtleVRpbWVzXCJcbiAgICAgICAgICBbYXR0ci52YWx1ZXNdPVwiYW5pbWF0aW9uVmFsdWVzWzJdXCJcbiAgICAgICAgICBbYXR0ci5kdXJdPVwiZHVyYXRpb25cIlxuICAgICAgICAgIHJlcGVhdENvdW50PVwiaW5kZWZpbml0ZVwiXG4gICAgICAgIC8+XG4gICAgICA8L3N0b3A+XG4gICAgPC9saW5lYXJHcmFkaWVudD5cbiAgPC9kZWZzPlxuPC9zdmc+XG4iXX0=