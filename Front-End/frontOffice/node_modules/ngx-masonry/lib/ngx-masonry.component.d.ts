import { ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { NgxMasonryOptions } from './ngx-masonry-options';
import { NgxMasonryDirective } from './ngx-masonry.directive';
import * as ɵngcc0 from '@angular/core';
export declare class NgxMasonryComponent implements OnInit, OnChanges, OnDestroy {
    private platformId;
    private _element;
    constructor(platformId: any, _element: ElementRef);
    masonryInstance: any;
    options: NgxMasonryOptions;
    updateLayout: boolean;
    ordered: boolean;
    layoutComplete: EventEmitter<any[]>;
    removeComplete: EventEmitter<any[]>;
    itemsLoaded: EventEmitter<number>;
    private pendingItems;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    layout(): void;
    reloadItems(): void;
    addPendingItem(item: NgxMasonryDirective): void;
    add(newItem: NgxMasonryDirective): void;
    private itemLoaded;
    remove(element: HTMLElement): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<NgxMasonryComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<NgxMasonryComponent, "[ngx-masonry], ngx-masonry", never, { "updateLayout": "updateLayout"; "ordered": "ordered"; "options": "options"; }, { "layoutComplete": "layoutComplete"; "removeComplete": "removeComplete"; "itemsLoaded": "itemsLoaded"; }, never, ["*"], false, never>;
}

//# sourceMappingURL=ngx-masonry.component.d.ts.map