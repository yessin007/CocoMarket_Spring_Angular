{"version":3,"file":"ng-gallery-lightbox.mjs","sources":["../../../projects/ng-gallery/lightbox/src/lightbox.model.ts","../../../projects/ng-gallery/lightbox/src/lightbox.animation.ts","../../../projects/ng-gallery/lightbox/src/lightbox.component.ts","../../../projects/ng-gallery/lightbox/src/lightbox.default.ts","../../../projects/ng-gallery/lightbox/src/lightbox.service.ts","../../../projects/ng-gallery/lightbox/src/gallerize.directive.ts","../../../projects/ng-gallery/lightbox/src/lightbox.directive.ts","../../../projects/ng-gallery/lightbox/src/lightbox.module.ts","../../../projects/ng-gallery/lightbox/src/ng-gallery-lightbox.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\n\r\nexport const LIGHTBOX_CONFIG = new InjectionToken<LightboxConfig>('LIGHTBOX_CONFIG');\r\n\r\nexport interface LightboxConfig {\r\n  backdropClass?: string;\r\n  panelClass?: string;\r\n  hasBackdrop?: boolean;\r\n  keyboardShortcuts?: boolean;\r\n  closeIcon?: string;\r\n  role?: string;\r\n  ariaLabelledBy?: string;\r\n  ariaLabel?: string;\r\n  ariaDescribedBy?: string;\r\n  startAnimationTime?: number;\r\n  exitAnimationTime?: number;\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\nexport const lightboxAnimation = trigger('lightbox', [\r\n  state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\r\n  state('enter', style({transform: 'none'})),\r\n  transition('* => enter', animate('{{startAnimationTime}}ms cubic-bezier(0, 0, 0.2, 1)',\r\n    style({transform: 'none', opacity: 1}))),\r\n  transition('* => void, * => exit',\r\n    animate('{{exitAnimationTime}}ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\r\n]);\r\n\r\n","import { Component, Optional, ChangeDetectionStrategy, ElementRef, Inject } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { OverlayRef } from '@angular/cdk/overlay';\r\nimport { FocusTrap, ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { lightboxAnimation } from './lightbox.animation';\r\n\r\n@Component({\r\n  selector: 'lightbox',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [lightboxAnimation],\r\n  styleUrls: ['./lightbox.component.scss'],\r\n  template: `\r\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\">\r\n      <i class=\"g-btn-close\" aria-label=\"Close\" (click)=\"overlayRef.detach()\"\r\n         [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(closeIcon)\"></i>\r\n    </gallery>\r\n  `,\r\n  host: {\r\n    'tabindex': '-1',\r\n    'aria-modal': 'true',\r\n    '[attr.id]': '\"lightbox-\" + id',\r\n    '[attr.role]': 'role',\r\n    '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\r\n    '[attr.aria-label]': 'ariaLabel',\r\n    '[attr.aria-describedby]': 'ariaDescribedBy || null',\r\n    '[@lightbox]': '{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }',\r\n    '(@lightbox.done)': 'onAnimationDone($event)',\r\n  }\r\n})\r\nexport class LightboxComponent {\r\n\r\n  /** Gallery ref id */\r\n  id: string;\r\n\r\n  /** Overlay ref to close the lightbox */\r\n  overlayRef: OverlayRef;\r\n\r\n  /** Close button svg data */\r\n  closeIcon: string;\r\n\r\n  /** State of the lightbox animation. */\r\n  state: 'void' | 'enter' | 'exit' = 'enter';\r\n\r\n  /** The ARIA role of the lightbox element. */\r\n  role: string;\r\n\r\n  /** Aria label to assign to the lightbox element */\r\n  ariaLabel: string;\r\n\r\n  /** ID of the element that should be considered as the lightbox's label. */\r\n  ariaLabelledBy: string;\r\n\r\n  /** ID of the element that describes the lightbox. */\r\n  ariaDescribedBy: string;\r\n\r\n  /** The lightbox start animation time in ms */\r\n  startAnimationTime: number;\r\n\r\n  /** The lightbox exit animation time in ms */\r\n  exitAnimationTime: number;\r\n\r\n  /** The class that traps and manages focus within the lightbox. */\r\n  private _focusTrap: FocusTrap;\r\n\r\n  /** Element that was focused before the lightbox was opened. Save this to restore upon close. */\r\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement;\r\n\r\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\r\n              private _focusTrapFactory: ConfigurableFocusTrapFactory,\r\n              private _elementRef: ElementRef,\r\n              public sanitizer: DomSanitizer) {\r\n    this._savePreviouslyFocusedElement();\r\n  }\r\n\r\n  /** Callback, invoked whenever an animation on the host completes. */\r\n  onAnimationDone(event: AnimationEvent) {\r\n    if (event.toState === 'enter') {\r\n      this._trapFocus();\r\n    } else {\r\n      this.overlayRef.dispose();\r\n      this._restoreFocus();\r\n    }\r\n  }\r\n\r\n  /** Moves the focus inside the focus trap. */\r\n  private _trapFocus() {\r\n    if (!this._focusTrap) {\r\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\r\n    }\r\n    // If were to attempt to focus immediately, then the content of the lightbox would not yet be\r\n    // ready in instances where change detection has to run first. To deal with this, we simply\r\n    // wait for the microtask queue to be empty.\r\n    this._focusTrap.focusInitialElementWhenReady();\r\n  }\r\n\r\n  /** Saves a reference to the element that was focused before the lightbox was opened. */\r\n  private _savePreviouslyFocusedElement() {\r\n    if (this._document) {\r\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\r\n\r\n      // Note that there is no focus method when rendering on the server.\r\n      if (this._elementRef.nativeElement.focus) {\r\n        // Move focus onto the lightbox immediately in order to prevent the user from accidentally\r\n        // opening multiple dialogs at the same time. Needs to be async, because the element\r\n        // may not be focusable immediately.\r\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Restores focus to the element that was focused before the lightbox opened. */\r\n  private _restoreFocus() {\r\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\r\n\r\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n    if (toFocus && typeof toFocus.focus === 'function') {\r\n      toFocus.focus();\r\n    }\r\n\r\n    if (this._focusTrap) {\r\n      this._focusTrap.destroy();\r\n    }\r\n  }\r\n}\r\n","import { LightboxConfig } from './lightbox.model';\r\n\r\nexport const defaultConfig: LightboxConfig = {\r\n  backdropClass: 'g-backdrop',\r\n  panelClass: 'g-overlay',\r\n  hasBackdrop: true,\r\n  keyboardShortcuts: true,\r\n  role: 'lightbox',\r\n  startAnimationTime: 150,\r\n  exitAnimationTime: 75,\r\n  closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\r\n</svg>\r\n`\r\n};\r\n","import { ComponentRef, Inject, Injectable, Optional } from '@angular/core';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { Overlay, OverlayRef, OverlayConfig } from '@angular/cdk/overlay';\r\nimport { LEFT_ARROW, RIGHT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\r\nimport { Gallery } from 'ng-gallery';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { LightboxConfig, LIGHTBOX_CONFIG } from './lightbox.model';\r\nimport { defaultConfig } from './lightbox.default';\r\nimport { LightboxComponent } from './lightbox.component';\r\n\r\n@Injectable()\r\nexport class Lightbox {\r\n\r\n  /** Gallery overlay ref */\r\n  private _overlayRef: OverlayRef;\r\n\r\n  /** Global config */\r\n  private _config: LightboxConfig;\r\n\r\n  /** Stream that emits when lightbox is opened */\r\n  opened = new Subject<string>();\r\n\r\n  /** Stream that emits when lightbox is closed */\r\n  closed = new Subject<string>();\r\n\r\n  constructor(@Optional() @Inject(LIGHTBOX_CONFIG) config: LightboxConfig, private _gallery: Gallery, private _overlay: Overlay) {\r\n    this._config = config ? {...defaultConfig, ...config} : defaultConfig;\r\n  }\r\n\r\n  /**\r\n   * Set Lightbox Config\r\n   * @param config - LightboxConfig\r\n   */\r\n  setConfig(config: LightboxConfig) {\r\n    this._config = {...this._config, ...config};\r\n  }\r\n\r\n  /**\r\n   * Open Lightbox Overlay\r\n   * @param i - Current Index\r\n   * @param id - Gallery ID\r\n   * @param config - Lightbox Config\r\n   */\r\n  open(i = 0, id = 'lightbox', config?: LightboxConfig) {\r\n\r\n    const _config = config ? {...this._config, ...config} : this._config;\r\n\r\n    const overlayConfig: OverlayConfig = {\r\n      backdropClass: _config.backdropClass,\r\n      panelClass: _config.panelClass,\r\n      hasBackdrop: _config.hasBackdrop,\r\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\r\n      scrollStrategy: this._overlay.scrollStrategies.block(),\r\n      disposeOnNavigation: true\r\n    };\r\n\r\n    const galleryRef = this._gallery.ref(id);\r\n    galleryRef.set(i);\r\n\r\n    this._overlayRef = this._overlay.create(overlayConfig);\r\n\r\n    // overlay opened event\r\n    this._overlayRef.attachments().subscribe(() => this.opened.next(id));\r\n\r\n    // overlay closed event\r\n    this._overlayRef.detachments().subscribe(() => this.closed.next(id));\r\n\r\n    // Attach gallery to the overlay\r\n    const galleryPortal = new ComponentPortal(LightboxComponent);\r\n    const lightboxRef: ComponentRef<LightboxComponent> = this._overlayRef.attach(galleryPortal);\r\n\r\n    lightboxRef.instance.id = id;\r\n    lightboxRef.instance.overlayRef = this._overlayRef;\r\n    lightboxRef.instance.closeIcon = this._config.closeIcon;\r\n    lightboxRef.instance.role = this._config.role;\r\n    lightboxRef.instance.ariaLabel = this._config.ariaLabel;\r\n    lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\r\n    lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\r\n    lightboxRef.instance.startAnimationTime = this._config.startAnimationTime;\r\n    lightboxRef.instance.exitAnimationTime = this._config.exitAnimationTime;\r\n\r\n    if (_config.hasBackdrop) {\r\n      this._overlayRef.backdropClick().subscribe(() => this.close());\r\n    }\r\n\r\n    // Add keyboard shortcuts\r\n    if (_config.keyboardShortcuts) {\r\n      this._overlayRef.keydownEvents().subscribe((event: any) => {\r\n        switch (event.keyCode) {\r\n          case LEFT_ARROW:\r\n            galleryRef.prev();\r\n            break;\r\n          case RIGHT_ARROW:\r\n            galleryRef.next();\r\n            break;\r\n          case ESCAPE:\r\n            this.close();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close Lightbox Overlay\r\n   */\r\n  close() {\r\n    if (this._overlayRef.hasAttached()) {\r\n      this._overlayRef.detach();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  Inject,\r\n  Optional,\r\n  Self,\r\n  Host,\r\n  NgZone,\r\n  ElementRef,\r\n  Renderer2,\r\n  PLATFORM_ID\r\n} from '@angular/core';\r\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\r\nimport { Gallery, GalleryRef, ImageItem, GalleryComponent, GalleryState, GalleryItem } from 'ng-gallery';\r\nimport { Subject, Subscription, from, EMPTY } from 'rxjs';\r\nimport { tap, map, switchMap, finalize, debounceTime } from 'rxjs/operators';\r\n\r\nimport { Lightbox } from './lightbox.service';\r\n\r\n/**\r\n * This directive has 2 modes:\r\n * 1 - If host element is a HTMLElement, it detects the images and hooks their clicks to lightbox\r\n * 2 - If host element is a GalleryComponent, it hooks the images click to the lightbox\r\n */\r\n\r\nconst enum GallerizeMode {\r\n  Detector = 'detector',\r\n  Gallery = 'gallery'\r\n}\r\n\r\n@Directive({\r\n  selector: '[gallerize]'\r\n})\r\nexport class GallerizeDirective implements OnInit, OnDestroy {\r\n\r\n  /** Default gallery id */\r\n  private _galleryId = 'lightbox';\r\n\r\n  /** Gallerize mode */\r\n  private readonly _mode: GallerizeMode;\r\n\r\n  /** If host element is a HTMLElement, will use the following variables: */\r\n\r\n  /** Stream that emits to fire the detection stream the image elements has changed */\r\n  private _observer$: any;\r\n\r\n  /** Stream that emits when image is discover */\r\n  private _detector$: Subject<any>;\r\n\r\n  /** If host element is a GalleryComponent, will use the following variables: */\r\n\r\n  /** Gallery events (if used on a gallery component) */\r\n  private _itemClick$: Subscription;\r\n  private _itemChange$: Subscription;\r\n\r\n  // ======================================================\r\n\r\n  /** If set, it will become the gallery id */\r\n  @Input() gallerize: string;\r\n\r\n  /** The selector used to query images elements */\r\n  @Input() selector = 'img';\r\n\r\n  constructor(private _zone: NgZone,\r\n              private _el: ElementRef,\r\n              private _gallery: Gallery,\r\n              private _lightbox: Lightbox,\r\n              private _renderer: Renderer2,\r\n              @Inject(PLATFORM_ID) platform: Object,\r\n              @Inject(DOCUMENT) private _document: any,\r\n              @Host() @Self() @Optional() private _galleryCmp: GalleryComponent) {\r\n\r\n    // Set gallerize mode\r\n    if (isPlatformBrowser(platform)) {\r\n      this._mode = _galleryCmp ? GallerizeMode.Gallery : GallerizeMode.Detector;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._zone.runOutsideAngular(() => {\r\n      this._galleryId = this.gallerize || this._galleryId;\r\n      const ref = this._gallery.ref(this._galleryId);\r\n\r\n      switch (this._mode) {\r\n        case GallerizeMode.Detector:\r\n          this.detectorMode(ref);\r\n          break;\r\n        case GallerizeMode.Gallery:\r\n          this.galleryMode(ref);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    switch (this._mode) {\r\n      case GallerizeMode.Detector:\r\n        this._detector$.complete();\r\n        this._observer$.disconnect();\r\n        break;\r\n      case GallerizeMode.Gallery:\r\n        this._itemClick$.unsubscribe();\r\n        this._itemChange$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /** Gallery mode: means `gallerize` directive is used on `<gallery>` component\r\n   * Adds a click event to each gallery item so it opens in lightbox */\r\n  private galleryMode(galleryRef: GalleryRef) {\r\n    // Clone its items to the new gallery instance\r\n    this._itemClick$ = this._galleryCmp.galleryRef.itemClick.subscribe((i: number) => this._lightbox.open(i, this._galleryId));\r\n    this._itemChange$ = this._galleryCmp.galleryRef.itemsChanged.subscribe((state: GalleryState) => galleryRef.load(state.items));\r\n  }\r\n\r\n  /** Detector mode: means `gallerize` directive is used on a normal HTMLElement\r\n   *  Detects images and adds a click event to each image so it opens in the lightbox */\r\n  private detectorMode(galleryRef: GalleryRef) {\r\n    this._detector$ = new Subject();\r\n    // Query image elements\r\n    this._detector$.pipe(\r\n      debounceTime(300),\r\n      switchMap(() => {\r\n\r\n        /** get all img elements from content */\r\n        const imageElements = this._el.nativeElement.querySelectorAll(this.selector);\r\n\r\n        if (imageElements && imageElements.length) {\r\n\r\n          const images: GalleryItem[] = [];\r\n\r\n          return from(imageElements).pipe(\r\n            map((el: any, i) => {\r\n              // Add click event to the image\r\n              this._renderer.setStyle(el, 'cursor', 'pointer');\r\n              this._renderer.setProperty(el, 'onclick', () =>\r\n                this._zone.run(() => this._lightbox.open(i, this._galleryId))\r\n              );\r\n\r\n              if (el instanceof HTMLImageElement) {\r\n                // If element is type of img use the src property\r\n                return {\r\n                  src: el.getAttribute('imageSrc') || el.src,\r\n                  thumb: el.getAttribute('thumbSrc') || el.src\r\n                };\r\n              } else {\r\n                // Otherwise, use element background-image url\r\n                const elStyle = el.currentStyle || this._document.defaultView.getComputedStyle(el, null);\r\n                const background = elStyle.backgroundImage.slice(4, -1).replace(/\"/g, '');\r\n                return {\r\n                  src: el.getAttribute('imageSrc') || background,\r\n                  thumb: el.getAttribute('thumbSrc') || background\r\n                };\r\n              }\r\n            }),\r\n            tap((data: any) => images.push(new ImageItem(data))),\r\n            finalize(() => galleryRef.load(images))\r\n          );\r\n        } else {\r\n          return EMPTY;\r\n        }\r\n      })\r\n    ).subscribe();\r\n\r\n    // Observe content changes\r\n    this._observer$ = new MutationObserver(() => this._detector$.next());\r\n    this._observer$.observe(this._el.nativeElement, {childList: true, subtree: true});\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit, Input, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { fromEvent, SubscriptionLike, Subscription } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Lightbox } from './lightbox.service';\r\n\r\n@Directive({\r\n  selector: '[lightbox]'\r\n})\r\nexport class LightboxDirective implements OnInit, OnDestroy {\r\n\r\n  clickEvent: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  @Input('lightbox') index = 0;\r\n  @Input('gallery') id = 'root';\r\n\r\n  constructor(private _lightbox: Lightbox, private _el: ElementRef, private _renderer: Renderer2) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\r\n    this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(\r\n      tap(() => this._lightbox.open(this.index, this.id))\r\n    ).subscribe();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clickEvent.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { GalleryModule } from 'ng-gallery';\r\n\r\nimport { Lightbox } from './lightbox.service';\r\nimport { LightboxComponent } from './lightbox.component';\r\nimport { LightboxDirective } from './lightbox.directive';\r\nimport { LightboxConfig, LIGHTBOX_CONFIG } from './lightbox.model';\r\nimport { GallerizeDirective } from './gallerize.directive';\r\n\r\n@NgModule({\r\n    imports: [\r\n        OverlayModule,\r\n        GalleryModule,\r\n        A11yModule\r\n    ],\r\n    declarations: [\r\n        LightboxComponent,\r\n        LightboxDirective,\r\n        GallerizeDirective\r\n    ],\r\n    exports: [\r\n        LightboxDirective,\r\n        GallerizeDirective\r\n    ],\r\n    providers: [\r\n        Lightbox\r\n    ]\r\n})\r\nexport class LightboxModule {\r\n  static withConfig(config: LightboxConfig): ModuleWithProviders<LightboxModule> {\r\n    return {\r\n      ngModule: LightboxModule,\r\n      providers: [\r\n        {\r\n          provide: LIGHTBOX_CONFIG,\r\n          useValue: config\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}