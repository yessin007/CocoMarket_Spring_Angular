import { ImageSize, GalleryAction, ThumbnailsMode, LoadingStrategy, SlidingDirection, ThumbnailsPosition, DotsPosition, CounterPosition } from '../models/constants';
/** Initial state */
export const defaultState = {
    action: GalleryAction.INITIALIZED,
    isPlaying: false,
    hasNext: false,
    hasPrev: false,
    currIndex: 0,
    items: []
};
export const defaultConfig = {
    nav: true,
    loop: true,
    zoomOut: 0,
    dots: false,
    thumb: true,
    dotsSize: 30,
    counter: true,
    gestures: true,
    autoPlay: false,
    thumbWidth: 120,
    thumbHeight: 90,
    panSensitivity: 25,
    disableThumb: false,
    playerInterval: 3000,
    imageSize: ImageSize.Contain,
    thumbMode: ThumbnailsMode.Strict,
    dotsPosition: DotsPosition.Bottom,
    counterPosition: CounterPosition.Top,
    thumbPosition: ThumbnailsPosition.Bottom,
    loadingStrategy: LoadingStrategy.Default,
    slidingDirection: SlidingDirection.Horizontal,
    navIcon: `<?xml version="1.0" encoding="UTF-8"?><svg width="512px" height="512px" enable-background="new 0 0 240.823 240.823" version="1.1" viewBox="0 0 240.823 240.823" xml:space="preserve" xmlns="http://www.w3.org/2000/svg"><path d="m183.19 111.82l-108.3-108.26c-4.752-4.74-12.451-4.74-17.215 0-4.752 4.74-4.752 12.439 0 17.179l99.707 99.671-99.695 99.671c-4.752 4.74-4.752 12.439 0 17.191 4.752 4.74 12.463 4.74 17.215 0l108.3-108.26c4.68-4.691 4.68-12.511-0.012-17.19z" fill="#fff"/></svg>`,
    loadingIcon: `<?xml version="1.0" encoding="UTF-8"?><svg stroke="#fff" viewBox="0 0 44 44" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd" stroke-width="2"><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="0s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle><circle cx="22" cy="22" r="1"><animate attributeName="r" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.165, 0.84, 0.44, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 20"/><animate attributeName="stroke-opacity" begin="-0.9s" calcMode="spline" dur="1.8s" keySplines="0.3, 0.61, 0.355, 1" keyTimes="0; 1" repeatCount="indefinite" values="1; 0"/></circle></g></svg>`
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FsbGVyeS5kZWZhdWx0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZ2FsbGVyeS9zcmMvbGliL3V0aWxzL2dhbGxlcnkuZGVmYXVsdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULGFBQWEsRUFDYixjQUFjLEVBQ2QsZUFBZSxFQUNmLGdCQUFnQixFQUNoQixrQkFBa0IsRUFFbEIsWUFBWSxFQUNaLGVBQWUsRUFDaEIsTUFBTSxxQkFBcUIsQ0FBQztBQUk3QixvQkFBb0I7QUFDcEIsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFpQjtJQUN4QyxNQUFNLEVBQUUsYUFBYSxDQUFDLFdBQVc7SUFDakMsU0FBUyxFQUFFLEtBQUs7SUFDaEIsT0FBTyxFQUFFLEtBQUs7SUFDZCxPQUFPLEVBQUUsS0FBSztJQUNkLFNBQVMsRUFBRSxDQUFDO0lBQ1osS0FBSyxFQUFFLEVBQUU7Q0FDVixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFrQjtJQUMxQyxHQUFHLEVBQUUsSUFBSTtJQUNULElBQUksRUFBRSxJQUFJO0lBQ1YsT0FBTyxFQUFFLENBQUM7SUFDVixJQUFJLEVBQUUsS0FBSztJQUNYLEtBQUssRUFBRSxJQUFJO0lBQ1gsUUFBUSxFQUFFLEVBQUU7SUFDWixPQUFPLEVBQUUsSUFBSTtJQUNiLFFBQVEsRUFBRSxJQUFJO0lBQ2QsUUFBUSxFQUFFLEtBQUs7SUFDZixVQUFVLEVBQUUsR0FBRztJQUNmLFdBQVcsRUFBRSxFQUFFO0lBQ2YsY0FBYyxFQUFFLEVBQUU7SUFDbEIsWUFBWSxFQUFFLEtBQUs7SUFDbkIsY0FBYyxFQUFFLElBQUk7SUFDcEIsU0FBUyxFQUFFLFNBQVMsQ0FBQyxPQUFPO0lBQzVCLFNBQVMsRUFBRSxjQUFjLENBQUMsTUFBTTtJQUNoQyxZQUFZLEVBQUUsWUFBWSxDQUFDLE1BQU07SUFDakMsZUFBZSxFQUFFLGVBQWUsQ0FBQyxHQUFHO0lBQ3BDLGFBQWEsRUFBRSxrQkFBa0IsQ0FBQyxNQUFNO0lBQ3hDLGVBQWUsRUFBRSxlQUFlLENBQUMsT0FBTztJQUN4QyxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxVQUFVO0lBQzdDLE9BQU8sRUFBRSxxZUFBcWU7SUFDOWUsV0FBVyxFQUFFLGs1QkFBazVCO0NBQ2g2QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBJbWFnZVNpemUsXHJcbiAgR2FsbGVyeUFjdGlvbixcclxuICBUaHVtYm5haWxzTW9kZSxcclxuICBMb2FkaW5nU3RyYXRlZ3ksXHJcbiAgU2xpZGluZ0RpcmVjdGlvbixcclxuICBUaHVtYm5haWxzUG9zaXRpb24sXHJcbiAgSW1hZ2VMb2FkZXJNb2RlLFxyXG4gIERvdHNQb3NpdGlvbixcclxuICBDb3VudGVyUG9zaXRpb25cclxufSBmcm9tICcuLi9tb2RlbHMvY29uc3RhbnRzJztcclxuaW1wb3J0IHsgR2FsbGVyeVN0YXRlIH0gZnJvbSAnLi4vbW9kZWxzL2dhbGxlcnkubW9kZWwnO1xyXG5pbXBvcnQgeyBHYWxsZXJ5Q29uZmlnIH0gZnJvbSAnLi4vbW9kZWxzL2NvbmZpZy5tb2RlbCc7XHJcblxyXG4vKiogSW5pdGlhbCBzdGF0ZSAqL1xyXG5leHBvcnQgY29uc3QgZGVmYXVsdFN0YXRlOiBHYWxsZXJ5U3RhdGUgPSB7XHJcbiAgYWN0aW9uOiBHYWxsZXJ5QWN0aW9uLklOSVRJQUxJWkVELFxyXG4gIGlzUGxheWluZzogZmFsc2UsXHJcbiAgaGFzTmV4dDogZmFsc2UsXHJcbiAgaGFzUHJldjogZmFsc2UsXHJcbiAgY3VyckluZGV4OiAwLFxyXG4gIGl0ZW1zOiBbXVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGRlZmF1bHRDb25maWc6IEdhbGxlcnlDb25maWcgPSB7XHJcbiAgbmF2OiB0cnVlLFxyXG4gIGxvb3A6IHRydWUsXHJcbiAgem9vbU91dDogMCxcclxuICBkb3RzOiBmYWxzZSxcclxuICB0aHVtYjogdHJ1ZSxcclxuICBkb3RzU2l6ZTogMzAsXHJcbiAgY291bnRlcjogdHJ1ZSxcclxuICBnZXN0dXJlczogdHJ1ZSxcclxuICBhdXRvUGxheTogZmFsc2UsXHJcbiAgdGh1bWJXaWR0aDogMTIwLFxyXG4gIHRodW1iSGVpZ2h0OiA5MCxcclxuICBwYW5TZW5zaXRpdml0eTogMjUsXHJcbiAgZGlzYWJsZVRodW1iOiBmYWxzZSxcclxuICBwbGF5ZXJJbnRlcnZhbDogMzAwMCxcclxuICBpbWFnZVNpemU6IEltYWdlU2l6ZS5Db250YWluLFxyXG4gIHRodW1iTW9kZTogVGh1bWJuYWlsc01vZGUuU3RyaWN0LFxyXG4gIGRvdHNQb3NpdGlvbjogRG90c1Bvc2l0aW9uLkJvdHRvbSxcclxuICBjb3VudGVyUG9zaXRpb246IENvdW50ZXJQb3NpdGlvbi5Ub3AsXHJcbiAgdGh1bWJQb3NpdGlvbjogVGh1bWJuYWlsc1Bvc2l0aW9uLkJvdHRvbSxcclxuICBsb2FkaW5nU3RyYXRlZ3k6IExvYWRpbmdTdHJhdGVneS5EZWZhdWx0LFxyXG4gIHNsaWRpbmdEaXJlY3Rpb246IFNsaWRpbmdEaXJlY3Rpb24uSG9yaXpvbnRhbCxcclxuICBuYXZJY29uOiBgPD94bWwgdmVyc2lvbj1cIjEuMFwiIGVuY29kaW5nPVwiVVRGLThcIj8+PHN2ZyB3aWR0aD1cIjUxMnB4XCIgaGVpZ2h0PVwiNTEycHhcIiBlbmFibGUtYmFja2dyb3VuZD1cIm5ldyAwIDAgMjQwLjgyMyAyNDAuODIzXCIgdmVyc2lvbj1cIjEuMVwiIHZpZXdCb3g9XCIwIDAgMjQwLjgyMyAyNDAuODIzXCIgeG1sOnNwYWNlPVwicHJlc2VydmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIm0xODMuMTkgMTExLjgybC0xMDguMy0xMDguMjZjLTQuNzUyLTQuNzQtMTIuNDUxLTQuNzQtMTcuMjE1IDAtNC43NTIgNC43NC00Ljc1MiAxMi40MzkgMCAxNy4xNzlsOTkuNzA3IDk5LjY3MS05OS42OTUgOTkuNjcxYy00Ljc1MiA0Ljc0LTQuNzUyIDEyLjQzOSAwIDE3LjE5MSA0Ljc1MiA0Ljc0IDEyLjQ2MyA0Ljc0IDE3LjIxNSAwbDEwOC4zLTEwOC4yNmM0LjY4LTQuNjkxIDQuNjgtMTIuNTExLTAuMDEyLTE3LjE5elwiIGZpbGw9XCIjZmZmXCIvPjwvc3ZnPmAsXHJcbiAgbG9hZGluZ0ljb246IGA8P3htbCB2ZXJzaW9uPVwiMS4wXCIgZW5jb2Rpbmc9XCJVVEYtOFwiPz48c3ZnIHN0cm9rZT1cIiNmZmZcIiB2aWV3Qm94PVwiMCAwIDQ0IDQ0XCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxnIGZpbGw9XCJub25lXCIgZmlsbC1ydWxlPVwiZXZlbm9kZFwiIHN0cm9rZS13aWR0aD1cIjJcIj48Y2lyY2xlIGN4PVwiMjJcIiBjeT1cIjIyXCIgcj1cIjFcIj48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPVwiclwiIGJlZ2luPVwiMHNcIiBjYWxjTW9kZT1cInNwbGluZVwiIGR1cj1cIjEuOHNcIiBrZXlTcGxpbmVzPVwiMC4xNjUsIDAuODQsIDAuNDQsIDFcIiBrZXlUaW1lcz1cIjA7IDFcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIiB2YWx1ZXM9XCIxOyAyMFwiLz48YW5pbWF0ZSBhdHRyaWJ1dGVOYW1lPVwic3Ryb2tlLW9wYWNpdHlcIiBiZWdpbj1cIjBzXCIgY2FsY01vZGU9XCJzcGxpbmVcIiBkdXI9XCIxLjhzXCIga2V5U3BsaW5lcz1cIjAuMywgMC42MSwgMC4zNTUsIDFcIiBrZXlUaW1lcz1cIjA7IDFcIiByZXBlYXRDb3VudD1cImluZGVmaW5pdGVcIiB2YWx1ZXM9XCIxOyAwXCIvPjwvY2lyY2xlPjxjaXJjbGUgY3g9XCIyMlwiIGN5PVwiMjJcIiByPVwiMVwiPjxhbmltYXRlIGF0dHJpYnV0ZU5hbWU9XCJyXCIgYmVnaW49XCItMC45c1wiIGNhbGNNb2RlPVwic3BsaW5lXCIgZHVyPVwiMS44c1wiIGtleVNwbGluZXM9XCIwLjE2NSwgMC44NCwgMC40NCwgMVwiIGtleVRpbWVzPVwiMDsgMVwiIHJlcGVhdENvdW50PVwiaW5kZWZpbml0ZVwiIHZhbHVlcz1cIjE7IDIwXCIvPjxhbmltYXRlIGF0dHJpYnV0ZU5hbWU9XCJzdHJva2Utb3BhY2l0eVwiIGJlZ2luPVwiLTAuOXNcIiBjYWxjTW9kZT1cInNwbGluZVwiIGR1cj1cIjEuOHNcIiBrZXlTcGxpbmVzPVwiMC4zLCAwLjYxLCAwLjM1NSwgMVwiIGtleVRpbWVzPVwiMDsgMVwiIHJlcGVhdENvdW50PVwiaW5kZWZpbml0ZVwiIHZhbHVlcz1cIjE7IDBcIi8+PC9jaXJjbGU+PC9nPjwvc3ZnPmBcclxufTtcclxuIl19