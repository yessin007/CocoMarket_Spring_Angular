{"version":3,"file":"direction.directive.d.ts","sources":["direction.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnChanges, OnInit, Renderer2 } from '@angular/core';\n/**\n * Directive to change the flex-direction of an element, based on two inputs (`direction` and `justify`).\n */\nexport declare class DirectionDirective implements OnInit, OnChanges {\n    private renderer;\n    private el;\n    /**\n     * String input to set the css flex-direction of an element.\n     */\n    direction: string;\n    /**\n     * String input to set the css justify-content of an element.\n     */\n    justify: string;\n    constructor(renderer: Renderer2, el: ElementRef);\n    /**\n     * Method ´ngOnInit´ to apply the style of this directive.\n     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.\n     * In particular, it's called only one time!!!\n     */\n    ngOnInit(): void;\n    /**\n     * Method ´ngOnChanges´ to apply the style of this directive.\n     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.\n     * In particular, it's called when any data-bound property of a directive changes!!!\n     */\n    ngOnChanges(): void;\n    /**\n     * Private method to change both direction and justify of an element.\n     */\n    private applyStyle;\n}\n"]}