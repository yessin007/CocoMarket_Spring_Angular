{"version":3,"file":"dots.component.d.ts","sources":["dots.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { AccessibleComponent } from '../accessible.component';\nimport { AccessibilityConfig } from '../../model/accessibility.interface';\nimport { Image } from '../../model/image.class';\nimport { InternalLibImage } from '../../model/image-internal.class';\nimport { DotsConfig } from '../../model/dots-config.interface';\n/**\n * Component with clickable dots (small circles) to navigate between images inside the modal gallery.\n */\nexport declare class DotsComponent extends AccessibleComponent implements OnInit, OnChanges {\n    /**\n     * Object of type `InternalLibImage` that represent the visible image.\n     */\n    currentImage: InternalLibImage;\n    /**\n     * Array of `InternalLibImage` that represent the model of this library with all images,\n     * thumbs and so on.\n     */\n    images: InternalLibImage[];\n    /**\n     * Object of type `DotsConfig` to init DotsComponent's features.\n     * For instance, it contains a param to show/hide this component.\n     */\n    dotsConfig: DotsConfig;\n    /**\n     * Object of type `AccessibilityConfig` to init custom accessibility features.\n     * For instance, it contains titles, alt texts, aria-labels and so on.\n     */\n    accessibilityConfig: AccessibilityConfig;\n    /**\n     * Output to emit clicks on dots. The payload contains a number that represent\n     * the index of the clicked dot.\n     */\n    clickDot: EventEmitter<number>;\n    /**\n     * Object of type `DotsConfig` exposed to the template. This field is initialized\n     * applying transformations, default values and so on to the input of the same type.\n     */\n    configDots: DotsConfig;\n    /**\n     * Method ´ngOnInit´ to build `configDots` applying a default value.\n     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.\n     * In particular, it's called only one time!!!\n     */\n    ngOnInit(): void;\n    /**\n     * Method ´ngOnChanges´ to change `configDots` if the input dotsConfig is changed.\n     * This is an Angular's lifecycle hook, so its called automatically by Angular itself.\n     */\n    ngOnChanges(changes: SimpleChanges): void;\n    /**\n     * Method to check if an image is active (i.e. the current image).\n     * It checks currentImage and images to prevent errors.\n     * @param number index of the image to check if it's active or not\n     * @returns boolean true if is active (and input params are valid), false otherwise\n     */\n    isActive(index: number): boolean;\n    /**\n     * Method called by events from keyboard and mouse.\n     * @param number index of the dot\n     * @param KeyboardEvent | MouseEvent event payload\n     */\n    onDotEvent(index: number, event: KeyboardEvent | MouseEvent): void;\n    /**\n     * Method used in the template to track ids in ngFor.\n     * @param number index of the array\n     * @param Image item of the array\n     * @returns number the id of the item\n     */\n    trackById(index: number, item: Image): number;\n}\n"]}