{"version":3,"file":"keyboard.service.d.ts","sources":["keyboard.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { KeyboardServiceConfig } from '../model/keyboard-service-config.interface';\nexport declare const KEYBOARD_CONFIGURATION: InjectionToken<KeyboardServiceConfig>;\n/**\n * Service to intercept ctrl+s (or cmd+s on macOS) using a third-party library, called Mousetrap.\n */\nexport declare class KeyboardService {\n    private config;\n    /**\n     * Private Mousetrap variable to store the instance.\n     */\n    private mousetrap;\n    /**\n     * Private variable to store shortcuts as either Array or string.\n     */\n    private shortcuts;\n    /**\n     * Constructor of `KeyboardService` to init `mousetrap` and `shortcuts` private variables.\n     * @param KeyboardServiceConfig config object received by the `forRoot()` function to init custom shortcuts\n     */\n    constructor(config: KeyboardServiceConfig);\n    /**\n     * Method to add a lister for ctrl+s/cmd+s keyboard events.\n     * @param (e: KeyboardEvent, combo: string) => any onBind callback function to add shortcuts\n     */\n    add(onBind: (e: KeyboardEvent, combo: string) => any): void;\n    /**\n     * Method to reset all listeners. Please, call this function when needed\n     * to free resources ad prevent leaks.\n     */\n    reset(): void;\n}\n"]}