{"version":3,"file":"id-validator.service.d.ts","sources":["id-validator.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * Service to check if the provided id is unique\n */\nexport declare class IdValidatorService {\n    ids: Map<any, any>;\n    /**\n     * Method to check and reserve an id for the current instance of the library.\n     * In this way, no other instances can use the same id.\n     * @param galleryId number or undefined that represents the unique id of the gallery.\n     * @return boolean true if success. false is never returned, instead an exception is thrown\n     * @throws a error with a message if galleryId is neither unique, < 0 or an integer\n     */\n    checkAndAdd(galleryId: number | undefined): boolean;\n    /**\n     * Method to remove a reserved id. In this way you are able to use the id again for another instance of the library.\n     * @param galleryId number or undefined that represents the unique id of the gallery.\n     * @return boolean true if success. false is never returned, instead an exception is thrown\n     * @throws a error with a message if galleryId is neither integer or < 0\n     */\n    remove(galleryId: number | undefined): boolean;\n}\n"]}