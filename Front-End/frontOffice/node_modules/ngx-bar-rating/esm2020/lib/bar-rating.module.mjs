import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { BarRating } from './bar-rating';
import { BarRatingPipe } from './bar-rating.pipe';
import { ActiveRating, InactiveRating, FractionRating } from './custom-rating';
import * as i0 from "@angular/core";
export class BarRatingModule {
}
BarRatingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BarRatingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
BarRatingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BarRatingModule, declarations: [BarRating,
        BarRatingPipe,
        ActiveRating,
        InactiveRating,
        FractionRating], imports: [CommonModule,
        FormsModule], exports: [BarRating,
        ActiveRating,
        InactiveRating,
        FractionRating] });
BarRatingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BarRatingModule, imports: [[
            CommonModule,
            FormsModule
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.3", ngImport: i0, type: BarRatingModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        BarRating,
                        BarRatingPipe,
                        ActiveRating,
                        InactiveRating,
                        FractionRating
                    ],
                    imports: [
                        CommonModule,
                        FormsModule
                    ],
                    exports: [
                        BarRating,
                        ActiveRating,
                        InactiveRating,
                        FractionRating
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLXJhdGluZy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtYmFyLXJhdGluZy9zcmMvbGliL2Jhci1yYXRpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7QUFxQi9FLE1BQU0sT0FBTyxlQUFlOzs0R0FBZixlQUFlOzZHQUFmLGVBQWUsaUJBakJ4QixTQUFTO1FBQ1QsYUFBYTtRQUNiLFlBQVk7UUFDWixjQUFjO1FBQ2QsY0FBYyxhQUdkLFlBQVk7UUFDWixXQUFXLGFBR1gsU0FBUztRQUNULFlBQVk7UUFDWixjQUFjO1FBQ2QsY0FBYzs2R0FHTCxlQUFlLFlBWGpCO1lBQ1AsWUFBWTtZQUNaLFdBQVc7U0FDWjsyRkFRVSxlQUFlO2tCQW5CM0IsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUU7d0JBQ1osU0FBUzt3QkFDVCxhQUFhO3dCQUNiLFlBQVk7d0JBQ1osY0FBYzt3QkFDZCxjQUFjO3FCQUNmO29CQUNELE9BQU8sRUFBRTt3QkFDUCxZQUFZO3dCQUNaLFdBQVc7cUJBQ1o7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFNBQVM7d0JBQ1QsWUFBWTt3QkFDWixjQUFjO3dCQUNkLGNBQWM7cUJBQ2Y7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgQmFyUmF0aW5nIH0gZnJvbSAnLi9iYXItcmF0aW5nJztcclxuaW1wb3J0IHsgQmFyUmF0aW5nUGlwZSB9IGZyb20gJy4vYmFyLXJhdGluZy5waXBlJztcclxuaW1wb3J0IHsgQWN0aXZlUmF0aW5nLCBJbmFjdGl2ZVJhdGluZywgRnJhY3Rpb25SYXRpbmcgfSBmcm9tICcuL2N1c3RvbS1yYXRpbmcnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIEJhclJhdGluZyxcclxuICAgIEJhclJhdGluZ1BpcGUsXHJcbiAgICBBY3RpdmVSYXRpbmcsXHJcbiAgICBJbmFjdGl2ZVJhdGluZyxcclxuICAgIEZyYWN0aW9uUmF0aW5nXHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgQmFyUmF0aW5nLFxyXG4gICAgQWN0aXZlUmF0aW5nLFxyXG4gICAgSW5hY3RpdmVSYXRpbmcsXHJcbiAgICBGcmFjdGlvblJhdGluZ1xyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIEJhclJhdGluZ01vZHVsZSB7XHJcbn1cclxuIl19