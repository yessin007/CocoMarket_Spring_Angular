{"version":3,"file":"ngx-bar-rating.mjs","sources":["../../../projects/ngx-bar-rating/src/lib/custom-rating.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.pipe.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.ts","../../../projects/ngx-bar-rating/src/lib/bar-rating.html","../../../projects/ngx-bar-rating/src/lib/bar-rating.module.ts","../../../projects/ngx-bar-rating/src/ngx-bar-rating.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ratingActive]'\r\n})\r\nexport class ActiveRating {\r\n  constructor(public template: TemplateRef<any>) {\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[ratingInactive]'\r\n})\r\nexport class InactiveRating {\r\n  constructor(public template: TemplateRef<any>) {\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[ratingFraction]'\r\n})\r\nexport class FractionRating {\r\n  constructor(public template: TemplateRef<any>) {\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'rateTitle'\r\n})\r\nexport class BarRatingPipe implements PipeTransform {\r\n\r\n  transform(value: number = 0, titles?: any): string {\r\n    /** Initialize value with 0 in case of undefined */\r\n    return titles[value] || value;\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ContentChild,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  forwardRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, Validator, NG_VALIDATORS, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\nimport { ActiveRating, FractionRating, InactiveRating } from './custom-rating';\r\n\r\n/** This allows support [(ngModel)] and ngControl. */\r\nconst RATING_VALUE_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => BarRating),\r\n  multi: true\r\n};\r\n\r\n/** This allows control required validation. */\r\nconst RATING_VALUE_VALIDATOR = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => BarRating),\r\n  multi: true,\r\n};\r\n\r\nenum BarRatingUnitState {\r\n  active = 'active',\r\n  inactive = 'inactive',\r\n  selected = 'selected',\r\n  fraction = 'fraction'\r\n}\r\n\r\ninterface BarRatingContext {\r\n  state: BarRatingUnitState;\r\n  click: (e) => void;\r\n  enter: () => void;\r\n}\r\n\r\n@Component({\r\n  selector: 'bar-rating',\r\n  templateUrl: './bar-rating.html',\r\n  styleUrls: ['./bar-rating.scss'],\r\n  providers: [RATING_VALUE_ACCESSOR, RATING_VALUE_VALIDATOR],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BarRating implements OnInit, OnChanges, ControlValueAccessor, Validator {\r\n\r\n  readonly unitState = BarRatingUnitState;\r\n  contexts: BarRatingContext[] = [];\r\n  nextRate: number;\r\n  disabled: boolean;\r\n\r\n  /** Current rating. Can be a decimal value like 3.14 */\r\n  @Input() rate;\r\n\r\n  /** Maximal rating that can be given using this widget. */\r\n  @Input() max = 5;\r\n\r\n  /** A flag indicating if rating can be updated. */\r\n  @Input() readOnly = false;\r\n\r\n  /** Set the theme */\r\n  @Input() theme = 'default';\r\n\r\n  /** Show rating title */\r\n  @Input() showText = false;\r\n\r\n  /** Replace rate value with a title */\r\n  @Input() titles = [];\r\n\r\n  /** A flag indicating if rating is required for form validation. */\r\n  @Input() required = false;\r\n\r\n  /**\r\n   * A stream that emits when a user is hovering over a given rating.\r\n   * Event's payload equals to the rating being hovered over.\r\n   */\r\n  @Output() hover = new EventEmitter<number>();\r\n\r\n  /**\r\n   * A stream that emits when a user stops hovering over a given rating.\r\n   * Event's payload equals to the rating of the last item being hovered over.\r\n   */\r\n  @Output() leave = new EventEmitter<number>();\r\n\r\n  /**\r\n   * A stream that emits when a user selects a new rating.\r\n   * Event's payload equals to the newly selected rating.\r\n   */\r\n  @Output() rateChange = new EventEmitter<number>(true);\r\n\r\n  /**\r\n   * A stream that forwards a bar rating click since clicks are not propagated\r\n   */\r\n  @Output() barClick = new EventEmitter<number>();\r\n\r\n  @ContentChild(ActiveRating) customActiveRating: ActiveRating;\r\n  @ContentChild(InactiveRating) customInActiveRating: InactiveRating;\r\n  @ContentChild(FractionRating) customFractionRating: FractionRating;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.rate) {\r\n      this.update(this.rate);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.contexts = Array.from({ length: this.max }, (context: BarRatingContext[], i: number) => ({\r\n      state: BarRatingUnitState.inactive,\r\n      click: () => this.handleClick(i + 1),\r\n      enter: () => this.handleEnter(i + 1)\r\n    }));\r\n\r\n    this.updateState(this.rate);\r\n  }\r\n\r\n  update(newRate: number, internalChange: boolean = true): void {\r\n    if (!this.readOnly && !this.disabled && this.rate !== newRate) {\r\n      this.rate = newRate;\r\n      this.rateChange.emit(this.rate);\r\n    }\r\n    if (internalChange) {\r\n      this.onChange(this.rate);\r\n      this.onTouched();\r\n    }\r\n    this.updateState(this.rate);\r\n  }\r\n\r\n  /** Reset rate value */\r\n  reset(): void {\r\n    this.leave.emit(this.nextRate);\r\n    this.updateState(this.rate);\r\n  }\r\n\r\n  private updateState(nextValue): void {\r\n    /** Set rate value as text */\r\n    this.nextRate = nextValue - 1;\r\n    /** Set the rating */\r\n    this.contexts = Array.from({ length: this.max }, (context: BarRatingContext[], index: number) => ({\r\n      state: index + 1 <= nextValue\r\n        ? BarRatingUnitState.selected\r\n        : (index + 1 === Math.round(nextValue) && nextValue % 1) >= 0.5\r\n          ? BarRatingUnitState.fraction\r\n          : BarRatingUnitState.inactive,\r\n      click: () => this.handleClick(index),\r\n      enter: () => this.handleEnter(index)\r\n    }));\r\n  }\r\n\r\n  private handleClick(value: number): void {\r\n    this.update(value + 1);\r\n  }\r\n\r\n  private handleEnter(index): void {\r\n    if (!this.disabled && !this.readOnly) {\r\n      /** Add selected class for rating hover */\r\n      this.contexts.map((context: BarRatingContext, i: number) => {\r\n        context.state = i <= index ? BarRatingUnitState.active : BarRatingUnitState.inactive;\r\n      });\r\n      this.nextRate = index;\r\n      this.hover.emit(index);\r\n    }\r\n  }\r\n\r\n  /** This is the initial value set to the component */\r\n  writeValue(value: number): void {\r\n    this.update(value, false);\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  validate(c: FormControl): { required: boolean } | null {\r\n    return (this.required && !c.value) ? { required: true } : null;\r\n  }\r\n\r\n  onChange(_: any): void {\r\n  }\r\n\r\n  onTouched(): void {\r\n  }\r\n\r\n  registerOnChange(fn: (value: any) => any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n}\r\n","<div class=\"br br-{{ customInActiveRating ? '' : theme }}\"\r\n     [class.br-readonly]=\"readOnly\"\r\n     [class.br-disabled]=\"disabled\">\r\n\r\n  <div class=\"br-units\" (mouseleave)=\"reset()\">\r\n\r\n    <div *ngFor=\"let unit of contexts\"\r\n         class=\"br-unit\"\r\n         (click)=\"unit.click($event)\"\r\n         (mouseenter)=\"unit.enter()\">\r\n\r\n      <ng-container [ngSwitch]=\"unit.state\">\r\n        <ng-template *ngSwitchCase=\"unitState.fraction\" [ngTemplateOutlet]=\"customFractionRating?.template || fractionTemplate\"></ng-template>\r\n        <ng-template *ngSwitchCase=\"unitState.inactive\" [ngTemplateOutlet]=\"customInActiveRating?.template || inactiveTemplate\"></ng-template>\r\n        <ng-template *ngSwitchDefault [ngTemplateOutlet]=\"customActiveRating?.template || activeTemplate\"></ng-template>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"showText\" class=\"br-text\">{{ nextRate + 1 | rateTitle: titles }}</div>\r\n</div>\r\n\r\n<ng-template #fractionTemplate>\r\n  <div class=\"br-unit-inner br-fraction\"></div>\r\n</ng-template>\r\n\r\n<ng-template #activeTemplate>\r\n  <div class=\"br-unit-inner br-active\"></div>\r\n</ng-template>\r\n\r\n<ng-template #inactiveTemplate>\r\n  <div class=\"br-unit-inner br-inactive\"></div>\r\n</ng-template>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BarRating } from './bar-rating';\r\nimport { BarRatingPipe } from './bar-rating.pipe';\r\nimport { ActiveRating, InactiveRating, FractionRating } from './custom-rating';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BarRating,\r\n    BarRatingPipe,\r\n    ActiveRating,\r\n    InactiveRating,\r\n    FractionRating\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    BarRating,\r\n    ActiveRating,\r\n    InactiveRating,\r\n    FractionRating\r\n  ]\r\n})\r\nexport class BarRatingModule {\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}